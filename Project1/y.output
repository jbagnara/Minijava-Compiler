Nonterminals useless in grammar

    class


Rules useless in grammar

   71 class: WORD


Rules useless in parser due to conflicts

    7 ParentMaybe: %empty


State 11 conflicts: 1 shift/reduce
State 19 conflicts: 1 shift/reduce
State 24 conflicts: 1 shift/reduce
State 71 conflicts: 11 shift/reduce
State 72 conflicts: 11 shift/reduce
State 75 conflicts: 11 shift/reduce
State 81 conflicts: 1 shift/reduce
State 97 conflicts: 1 shift/reduce
State 109 conflicts: 11 shift/reduce
State 119 conflicts: 1 shift/reduce
State 122 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: MainClass ClassDeclList

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE LBRACK RBRACK id RPARENTH LBRACE StatementList RBRACE RBRACE

    3 ClassDeclList: ClassDecl ClassDeclList
    4              | %empty

    5 ClassDecl: CLASS id ParentMaybe LBRACE VarDeclList MethodDeclList RBRACE

    6 ParentMaybe: Parent
    7            | %empty

    8 Parent: LBRACE EXTENDS id RBRACE

    9 VarDeclList: VarDecl VarDeclList
   10            | %empty

   11 VarDecl: Type id VarInitList SEMICOLON
   12        | Type id SEMICOLON

   13 VarInitList: VarInit
   14            | VarInit COMMA VarInitList

   15 VarInit: EQUAL Exp

   16 MethodDeclList: MethodDecl MethodDeclList
   17               | %empty

   18 MethodDecl: PUBLIC Type id LPARENTH FormalListMaybe RPARENTH StatementList
   19           | Type id LPARENTH FormalListMaybe RPARENTH StatementList

   20 FormalListMaybe: FormalList
   21                | %empty

   22 FormalList: Type id LPARENTH
   23           | Type id LPARENTH COMMA FormalList

   24 Type: PRIMETYPE
   25     | Type LBRACK RBRACK LBRACK RBRACK

   26 StatementList: Statement StatementList
   27              | %empty

   28 Statement: VarDecl
   29          | LBRACE StatementList RBRACE
   30          | IF LPARENTH Exp RPARENTH Statement
   31          | WHILE LPARENTH Exp RPARENTH Statement
   32          | PRINTLN LPARENTH Exp RPARENTH SEMICOLON
   33          | PRINT LPARENTH Exp RPARENTH SEMICOLON
   34          | LeftValue EQUAL Exp SEMICOLON
   35          | RETURN Exp SEMICOLON
   36          | MethodCall SEMICOLON

   37 MethodCall: LeftValue LPARENTH ExpList RPARENTH
   38           | LeftValue LPARENTH RPARENTH

   39 LeftValue: id
   40          | LeftValue Index
   41          | LeftValue DOT id
   42          | LPARENTH NEW id LPARENTH RPARENTH RPARENTH DOT id
   43          | NEW id LPARENTH RPARENTH DOT id
   44          | THIS DOT id

   45 Index: LBRACK Exp RBRACK
   46      | Index LBRACK Exp RBRACK

   47 ExpList: Exp
   48        | Exp COMMA Exp

   49 Exp: Exp op Exp
   50    | NOT Exp
   51    | PLUS Exp
   52    | MINUS Exp
   53    | LPARENTH Exp RPARENTH
   54    | STRING_LITERAL
   55    | TRUE
   56    | FALSE
   57    | INTEGER_LITERAL
   58    | MethodCall

   59 id: WORD

   60 op: AND
   61   | OR
   62   | LESS
   63   | GREAT
   64   | LESSEQ
   65   | GREATEQ
   66   | EQUIVALENT
   67   | NOTEQUAL
   68   | MINUS
   69   | STAR
   70   | SLASH


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AND (258) 60
    OR (259) 61
    LESS (260) 62
    GREAT (261) 63
    LESSEQ (262) 64
    GREATEQ (263) 65
    EQUAL (264) 15 34
    NOTEQUAL (265) 67
    PLUS (266) 51
    MINUS (267) 52 68
    STAR (268) 69
    SLASH (269) 70
    LBRACK (270) 2 25 45 46
    RBRACK (271) 2 25 45 46
    LBRACE (272) 2 5 8 29
    RBRACE (273) 2 5 8 29
    LPARENTH (274) 2 18 19 22 23 30 31 32 33 37 38 42 43 53
    RPARENTH (275) 2 18 19 30 31 32 33 37 38 42 43 53
    EXTENDS (276) 8
    HEADER (277) 2
    STRING_LITERAL (278) 54
    WORD (279) 59
    CLASS (280) 2 5
    IF (281) 30
    WHILE (282) 31
    NOT (283) 50
    TRUE (284) 55
    FALSE (285) 56
    PRIMETYPE (286) 2 24
    PUBLIC (287) 18
    COMMA (288) 14 23 48
    EQUIVALENT (289) 66
    SEMICOLON (290) 11 12 32 33 34 35 36
    PRINT (291) 33
    PRINTLN (292) 32
    DOT (293) 41 42 43 44
    NEW (294) 42 43
    THIS (295) 44
    RETURN (296) 35
    INTEGER_LITERAL (297) 57


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    Program (44)
        on left: 1
        on right: 0
    MainClass (45)
        on left: 2
        on right: 1
    ClassDeclList (46)
        on left: 3 4
        on right: 1 3
    ClassDecl (47)
        on left: 5
        on right: 3
    ParentMaybe (48)
        on left: 6 7
        on right: 5
    Parent (49)
        on left: 8
        on right: 6
    VarDeclList (50)
        on left: 9 10
        on right: 5 9
    VarDecl (51)
        on left: 11 12
        on right: 9 28
    VarInitList (52)
        on left: 13 14
        on right: 11 14
    VarInit (53)
        on left: 15
        on right: 13 14
    MethodDeclList (54)
        on left: 16 17
        on right: 5 16
    MethodDecl (55)
        on left: 18 19
        on right: 16
    FormalListMaybe (56)
        on left: 20 21
        on right: 18 19
    FormalList (57)
        on left: 22 23
        on right: 20 23
    Type (58)
        on left: 24 25
        on right: 11 12 18 19 22 23 25
    StatementList (59)
        on left: 26 27
        on right: 2 18 19 26 29
    Statement (60)
        on left: 28 29 30 31 32 33 34 35 36
        on right: 26 30 31
    MethodCall (61)
        on left: 37 38
        on right: 36 58
    LeftValue (62)
        on left: 39 40 41 42 43 44
        on right: 34 37 38 40 41
    Index (63)
        on left: 45 46
        on right: 40 46
    ExpList (64)
        on left: 47 48
        on right: 37
    Exp (65)
        on left: 49 50 51 52 53 54 55 56 57 58
        on right: 15 30 31 32 33 34 35 45 46 47 48 49 50 51 52 53
    id (66)
        on left: 59
        on right: 2 5 8 11 12 18 19 22 23 39 41 42 43 44
    op (67)
        on left: 60 61 62 63 64 65 66 67 68 69 70
        on right: 49


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program    go to state 2
    MainClass  go to state 3


State 1

    2 MainClass: CLASS . id LBRACE HEADER LPARENTH PRIMETYPE LBRACK RBRACK id RPARENTH LBRACE StatementList RBRACE RBRACE

    WORD  shift, and go to state 4

    id  go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: MainClass . ClassDeclList

    CLASS  shift, and go to state 7

    $default  reduce using rule 4 (ClassDeclList)

    ClassDeclList  go to state 8
    ClassDecl      go to state 9


State 4

   59 id: WORD .

    $default  reduce using rule 59 (id)


State 5

    2 MainClass: CLASS id . LBRACE HEADER LPARENTH PRIMETYPE LBRACK RBRACK id RPARENTH LBRACE StatementList RBRACE RBRACE

    LBRACE  shift, and go to state 10


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    5 ClassDecl: CLASS . id ParentMaybe LBRACE VarDeclList MethodDeclList RBRACE

    WORD  shift, and go to state 4

    id  go to state 11


State 8

    1 Program: MainClass ClassDeclList .

    $default  reduce using rule 1 (Program)


State 9

    3 ClassDeclList: ClassDecl . ClassDeclList

    CLASS  shift, and go to state 7

    $default  reduce using rule 4 (ClassDeclList)

    ClassDeclList  go to state 12
    ClassDecl      go to state 9


State 10

    2 MainClass: CLASS id LBRACE . HEADER LPARENTH PRIMETYPE LBRACK RBRACK id RPARENTH LBRACE StatementList RBRACE RBRACE

    HEADER  shift, and go to state 13


State 11

    5 ClassDecl: CLASS id . ParentMaybe LBRACE VarDeclList MethodDeclList RBRACE

    LBRACE  shift, and go to state 14

    LBRACE  [reduce using rule 7 (ParentMaybe)]

    ParentMaybe  go to state 15
    Parent       go to state 16


State 12

    3 ClassDeclList: ClassDecl ClassDeclList .

    $default  reduce using rule 3 (ClassDeclList)


State 13

    2 MainClass: CLASS id LBRACE HEADER . LPARENTH PRIMETYPE LBRACK RBRACK id RPARENTH LBRACE StatementList RBRACE RBRACE

    LPARENTH  shift, and go to state 17


State 14

    8 Parent: LBRACE . EXTENDS id RBRACE

    EXTENDS  shift, and go to state 18


State 15

    5 ClassDecl: CLASS id ParentMaybe . LBRACE VarDeclList MethodDeclList RBRACE

    LBRACE  shift, and go to state 19


State 16

    6 ParentMaybe: Parent .

    $default  reduce using rule 6 (ParentMaybe)


State 17

    2 MainClass: CLASS id LBRACE HEADER LPARENTH . PRIMETYPE LBRACK RBRACK id RPARENTH LBRACE StatementList RBRACE RBRACE

    PRIMETYPE  shift, and go to state 20


State 18

    8 Parent: LBRACE EXTENDS . id RBRACE

    WORD  shift, and go to state 4

    id  go to state 21


State 19

    5 ClassDecl: CLASS id ParentMaybe LBRACE . VarDeclList MethodDeclList RBRACE

    PRIMETYPE  shift, and go to state 22

    PRIMETYPE  [reduce using rule 10 (VarDeclList)]
    $default   reduce using rule 10 (VarDeclList)

    VarDeclList  go to state 23
    VarDecl      go to state 24
    Type         go to state 25


State 20

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE . LBRACK RBRACK id RPARENTH LBRACE StatementList RBRACE RBRACE

    LBRACK  shift, and go to state 26


State 21

    8 Parent: LBRACE EXTENDS id . RBRACE

    RBRACE  shift, and go to state 27


State 22

   24 Type: PRIMETYPE .

    $default  reduce using rule 24 (Type)


State 23

    5 ClassDecl: CLASS id ParentMaybe LBRACE VarDeclList . MethodDeclList RBRACE

    PRIMETYPE  shift, and go to state 22
    PUBLIC     shift, and go to state 28

    $default  reduce using rule 17 (MethodDeclList)

    MethodDeclList  go to state 29
    MethodDecl      go to state 30
    Type            go to state 31


State 24

    9 VarDeclList: VarDecl . VarDeclList

    PRIMETYPE  shift, and go to state 22

    PRIMETYPE  [reduce using rule 10 (VarDeclList)]
    $default   reduce using rule 10 (VarDeclList)

    VarDeclList  go to state 32
    VarDecl      go to state 24
    Type         go to state 25


State 25

   11 VarDecl: Type . id VarInitList SEMICOLON
   12        | Type . id SEMICOLON
   25 Type: Type . LBRACK RBRACK LBRACK RBRACK

    LBRACK  shift, and go to state 33
    WORD    shift, and go to state 4

    id  go to state 34


State 26

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE LBRACK . RBRACK id RPARENTH LBRACE StatementList RBRACE RBRACE

    RBRACK  shift, and go to state 35


State 27

    8 Parent: LBRACE EXTENDS id RBRACE .

    $default  reduce using rule 8 (Parent)


State 28

   18 MethodDecl: PUBLIC . Type id LPARENTH FormalListMaybe RPARENTH StatementList

    PRIMETYPE  shift, and go to state 22

    Type  go to state 36


State 29

    5 ClassDecl: CLASS id ParentMaybe LBRACE VarDeclList MethodDeclList . RBRACE

    RBRACE  shift, and go to state 37


State 30

   16 MethodDeclList: MethodDecl . MethodDeclList

    PRIMETYPE  shift, and go to state 22
    PUBLIC     shift, and go to state 28

    $default  reduce using rule 17 (MethodDeclList)

    MethodDeclList  go to state 38
    MethodDecl      go to state 30
    Type            go to state 31


State 31

   19 MethodDecl: Type . id LPARENTH FormalListMaybe RPARENTH StatementList
   25 Type: Type . LBRACK RBRACK LBRACK RBRACK

    LBRACK  shift, and go to state 33
    WORD    shift, and go to state 4

    id  go to state 39


State 32

    9 VarDeclList: VarDecl VarDeclList .

    $default  reduce using rule 9 (VarDeclList)


State 33

   25 Type: Type LBRACK . RBRACK LBRACK RBRACK

    RBRACK  shift, and go to state 40


State 34

   11 VarDecl: Type id . VarInitList SEMICOLON
   12        | Type id . SEMICOLON

    EQUAL      shift, and go to state 41
    SEMICOLON  shift, and go to state 42

    VarInitList  go to state 43
    VarInit      go to state 44


State 35

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE LBRACK RBRACK . id RPARENTH LBRACE StatementList RBRACE RBRACE

    WORD  shift, and go to state 4

    id  go to state 45


State 36

   18 MethodDecl: PUBLIC Type . id LPARENTH FormalListMaybe RPARENTH StatementList
   25 Type: Type . LBRACK RBRACK LBRACK RBRACK

    LBRACK  shift, and go to state 33
    WORD    shift, and go to state 4

    id  go to state 46


State 37

    5 ClassDecl: CLASS id ParentMaybe LBRACE VarDeclList MethodDeclList RBRACE .

    $default  reduce using rule 5 (ClassDecl)


State 38

   16 MethodDeclList: MethodDecl MethodDeclList .

    $default  reduce using rule 16 (MethodDeclList)


State 39

   19 MethodDecl: Type id . LPARENTH FormalListMaybe RPARENTH StatementList

    LPARENTH  shift, and go to state 47


State 40

   25 Type: Type LBRACK RBRACK . LBRACK RBRACK

    LBRACK  shift, and go to state 48


State 41

   15 VarInit: EQUAL . Exp

    PLUS             shift, and go to state 49
    MINUS            shift, and go to state 50
    LPARENTH         shift, and go to state 51
    STRING_LITERAL   shift, and go to state 52
    WORD             shift, and go to state 4
    NOT              shift, and go to state 53
    TRUE             shift, and go to state 54
    FALSE            shift, and go to state 55
    NEW              shift, and go to state 56
    THIS             shift, and go to state 57
    INTEGER_LITERAL  shift, and go to state 58

    MethodCall  go to state 59
    LeftValue   go to state 60
    Exp         go to state 61
    id          go to state 62


State 42

   12 VarDecl: Type id SEMICOLON .

    $default  reduce using rule 12 (VarDecl)


State 43

   11 VarDecl: Type id VarInitList . SEMICOLON

    SEMICOLON  shift, and go to state 63


State 44

   13 VarInitList: VarInit .
   14            | VarInit . COMMA VarInitList

    COMMA  shift, and go to state 64

    $default  reduce using rule 13 (VarInitList)


State 45

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE LBRACK RBRACK id . RPARENTH LBRACE StatementList RBRACE RBRACE

    RPARENTH  shift, and go to state 65


State 46

   18 MethodDecl: PUBLIC Type id . LPARENTH FormalListMaybe RPARENTH StatementList

    LPARENTH  shift, and go to state 66


State 47

   19 MethodDecl: Type id LPARENTH . FormalListMaybe RPARENTH StatementList

    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 21 (FormalListMaybe)

    FormalListMaybe  go to state 67
    FormalList       go to state 68
    Type             go to state 69


State 48

   25 Type: Type LBRACK RBRACK LBRACK . RBRACK

    RBRACK  shift, and go to state 70


State 49

   51 Exp: PLUS . Exp

    PLUS             shift, and go to state 49
    MINUS            shift, and go to state 50
    LPARENTH         shift, and go to state 51
    STRING_LITERAL   shift, and go to state 52
    WORD             shift, and go to state 4
    NOT              shift, and go to state 53
    TRUE             shift, and go to state 54
    FALSE            shift, and go to state 55
    NEW              shift, and go to state 56
    THIS             shift, and go to state 57
    INTEGER_LITERAL  shift, and go to state 58

    MethodCall  go to state 59
    LeftValue   go to state 60
    Exp         go to state 71
    id          go to state 62


State 50

   52 Exp: MINUS . Exp

    PLUS             shift, and go to state 49
    MINUS            shift, and go to state 50
    LPARENTH         shift, and go to state 51
    STRING_LITERAL   shift, and go to state 52
    WORD             shift, and go to state 4
    NOT              shift, and go to state 53
    TRUE             shift, and go to state 54
    FALSE            shift, and go to state 55
    NEW              shift, and go to state 56
    THIS             shift, and go to state 57
    INTEGER_LITERAL  shift, and go to state 58

    MethodCall  go to state 59
    LeftValue   go to state 60
    Exp         go to state 72
    id          go to state 62


State 51

   42 LeftValue: LPARENTH . NEW id LPARENTH RPARENTH RPARENTH DOT id
   53 Exp: LPARENTH . Exp RPARENTH

    PLUS             shift, and go to state 49
    MINUS            shift, and go to state 50
    LPARENTH         shift, and go to state 51
    STRING_LITERAL   shift, and go to state 52
    WORD             shift, and go to state 4
    NOT              shift, and go to state 53
    TRUE             shift, and go to state 54
    FALSE            shift, and go to state 55
    NEW              shift, and go to state 73
    THIS             shift, and go to state 57
    INTEGER_LITERAL  shift, and go to state 58

    MethodCall  go to state 59
    LeftValue   go to state 60
    Exp         go to state 74
    id          go to state 62


State 52

   54 Exp: STRING_LITERAL .

    $default  reduce using rule 54 (Exp)


State 53

   50 Exp: NOT . Exp

    PLUS             shift, and go to state 49
    MINUS            shift, and go to state 50
    LPARENTH         shift, and go to state 51
    STRING_LITERAL   shift, and go to state 52
    WORD             shift, and go to state 4
    NOT              shift, and go to state 53
    TRUE             shift, and go to state 54
    FALSE            shift, and go to state 55
    NEW              shift, and go to state 56
    THIS             shift, and go to state 57
    INTEGER_LITERAL  shift, and go to state 58

    MethodCall  go to state 59
    LeftValue   go to state 60
    Exp         go to state 75
    id          go to state 62


State 54

   55 Exp: TRUE .

    $default  reduce using rule 55 (Exp)


State 55

   56 Exp: FALSE .

    $default  reduce using rule 56 (Exp)


State 56

   43 LeftValue: NEW . id LPARENTH RPARENTH DOT id

    WORD  shift, and go to state 4

    id  go to state 76


State 57

   44 LeftValue: THIS . DOT id

    DOT  shift, and go to state 77


State 58

   57 Exp: INTEGER_LITERAL .

    $default  reduce using rule 57 (Exp)


State 59

   58 Exp: MethodCall .

    $default  reduce using rule 58 (Exp)


State 60

   37 MethodCall: LeftValue . LPARENTH ExpList RPARENTH
   38           | LeftValue . LPARENTH RPARENTH
   40 LeftValue: LeftValue . Index
   41          | LeftValue . DOT id

    LBRACK    shift, and go to state 78
    LPARENTH  shift, and go to state 79
    DOT       shift, and go to state 80

    Index  go to state 81


State 61

   15 VarInit: EQUAL Exp .
   49 Exp: Exp . op Exp

    AND         shift, and go to state 82
    OR          shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    LESSEQ      shift, and go to state 86
    GREATEQ     shift, and go to state 87
    NOTEQUAL    shift, and go to state 88
    MINUS       shift, and go to state 89
    STAR        shift, and go to state 90
    SLASH       shift, and go to state 91
    EQUIVALENT  shift, and go to state 92

    $default  reduce using rule 15 (VarInit)

    op  go to state 93


State 62

   39 LeftValue: id .

    $default  reduce using rule 39 (LeftValue)


State 63

   11 VarDecl: Type id VarInitList SEMICOLON .

    $default  reduce using rule 11 (VarDecl)


State 64

   14 VarInitList: VarInit COMMA . VarInitList

    EQUAL  shift, and go to state 41

    VarInitList  go to state 94
    VarInit      go to state 44


State 65

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE LBRACK RBRACK id RPARENTH . LBRACE StatementList RBRACE RBRACE

    LBRACE  shift, and go to state 95


State 66

   18 MethodDecl: PUBLIC Type id LPARENTH . FormalListMaybe RPARENTH StatementList

    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 21 (FormalListMaybe)

    FormalListMaybe  go to state 96
    FormalList       go to state 68
    Type             go to state 69


State 67

   19 MethodDecl: Type id LPARENTH FormalListMaybe . RPARENTH StatementList

    RPARENTH  shift, and go to state 97


State 68

   20 FormalListMaybe: FormalList .

    $default  reduce using rule 20 (FormalListMaybe)


State 69

   22 FormalList: Type . id LPARENTH
   23           | Type . id LPARENTH COMMA FormalList
   25 Type: Type . LBRACK RBRACK LBRACK RBRACK

    LBRACK  shift, and go to state 33
    WORD    shift, and go to state 4

    id  go to state 98


State 70

   25 Type: Type LBRACK RBRACK LBRACK RBRACK .

    $default  reduce using rule 25 (Type)


State 71

   49 Exp: Exp . op Exp
   51    | PLUS Exp .

    AND         shift, and go to state 82
    OR          shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    LESSEQ      shift, and go to state 86
    GREATEQ     shift, and go to state 87
    NOTEQUAL    shift, and go to state 88
    MINUS       shift, and go to state 89
    STAR        shift, and go to state 90
    SLASH       shift, and go to state 91
    EQUIVALENT  shift, and go to state 92

    AND         [reduce using rule 51 (Exp)]
    OR          [reduce using rule 51 (Exp)]
    LESS        [reduce using rule 51 (Exp)]
    GREAT       [reduce using rule 51 (Exp)]
    LESSEQ      [reduce using rule 51 (Exp)]
    GREATEQ     [reduce using rule 51 (Exp)]
    NOTEQUAL    [reduce using rule 51 (Exp)]
    MINUS       [reduce using rule 51 (Exp)]
    STAR        [reduce using rule 51 (Exp)]
    SLASH       [reduce using rule 51 (Exp)]
    EQUIVALENT  [reduce using rule 51 (Exp)]
    $default    reduce using rule 51 (Exp)

    op  go to state 93


State 72

   49 Exp: Exp . op Exp
   52    | MINUS Exp .

    AND         shift, and go to state 82
    OR          shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    LESSEQ      shift, and go to state 86
    GREATEQ     shift, and go to state 87
    NOTEQUAL    shift, and go to state 88
    MINUS       shift, and go to state 89
    STAR        shift, and go to state 90
    SLASH       shift, and go to state 91
    EQUIVALENT  shift, and go to state 92

    AND         [reduce using rule 52 (Exp)]
    OR          [reduce using rule 52 (Exp)]
    LESS        [reduce using rule 52 (Exp)]
    GREAT       [reduce using rule 52 (Exp)]
    LESSEQ      [reduce using rule 52 (Exp)]
    GREATEQ     [reduce using rule 52 (Exp)]
    NOTEQUAL    [reduce using rule 52 (Exp)]
    MINUS       [reduce using rule 52 (Exp)]
    STAR        [reduce using rule 52 (Exp)]
    SLASH       [reduce using rule 52 (Exp)]
    EQUIVALENT  [reduce using rule 52 (Exp)]
    $default    reduce using rule 52 (Exp)

    op  go to state 93


State 73

   42 LeftValue: LPARENTH NEW . id LPARENTH RPARENTH RPARENTH DOT id
   43          | NEW . id LPARENTH RPARENTH DOT id

    WORD  shift, and go to state 4

    id  go to state 99


State 74

   49 Exp: Exp . op Exp
   53    | LPARENTH Exp . RPARENTH

    AND         shift, and go to state 82
    OR          shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    LESSEQ      shift, and go to state 86
    GREATEQ     shift, and go to state 87
    NOTEQUAL    shift, and go to state 88
    MINUS       shift, and go to state 89
    STAR        shift, and go to state 90
    SLASH       shift, and go to state 91
    RPARENTH    shift, and go to state 100
    EQUIVALENT  shift, and go to state 92

    op  go to state 93


State 75

   49 Exp: Exp . op Exp
   50    | NOT Exp .

    AND         shift, and go to state 82
    OR          shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    LESSEQ      shift, and go to state 86
    GREATEQ     shift, and go to state 87
    NOTEQUAL    shift, and go to state 88
    MINUS       shift, and go to state 89
    STAR        shift, and go to state 90
    SLASH       shift, and go to state 91
    EQUIVALENT  shift, and go to state 92

    AND         [reduce using rule 50 (Exp)]
    OR          [reduce using rule 50 (Exp)]
    LESS        [reduce using rule 50 (Exp)]
    GREAT       [reduce using rule 50 (Exp)]
    LESSEQ      [reduce using rule 50 (Exp)]
    GREATEQ     [reduce using rule 50 (Exp)]
    NOTEQUAL    [reduce using rule 50 (Exp)]
    MINUS       [reduce using rule 50 (Exp)]
    STAR        [reduce using rule 50 (Exp)]
    SLASH       [reduce using rule 50 (Exp)]
    EQUIVALENT  [reduce using rule 50 (Exp)]
    $default    reduce using rule 50 (Exp)

    op  go to state 93


State 76

   43 LeftValue: NEW id . LPARENTH RPARENTH DOT id

    LPARENTH  shift, and go to state 101


State 77

   44 LeftValue: THIS DOT . id

    WORD  shift, and go to state 4

    id  go to state 102


State 78

   45 Index: LBRACK . Exp RBRACK

    PLUS             shift, and go to state 49
    MINUS            shift, and go to state 50
    LPARENTH         shift, and go to state 51
    STRING_LITERAL   shift, and go to state 52
    WORD             shift, and go to state 4
    NOT              shift, and go to state 53
    TRUE             shift, and go to state 54
    FALSE            shift, and go to state 55
    NEW              shift, and go to state 56
    THIS             shift, and go to state 57
    INTEGER_LITERAL  shift, and go to state 58

    MethodCall  go to state 59
    LeftValue   go to state 60
    Exp         go to state 103
    id          go to state 62


State 79

   37 MethodCall: LeftValue LPARENTH . ExpList RPARENTH
   38           | LeftValue LPARENTH . RPARENTH

    PLUS             shift, and go to state 49
    MINUS            shift, and go to state 50
    LPARENTH         shift, and go to state 51
    RPARENTH         shift, and go to state 104
    STRING_LITERAL   shift, and go to state 52
    WORD             shift, and go to state 4
    NOT              shift, and go to state 53
    TRUE             shift, and go to state 54
    FALSE            shift, and go to state 55
    NEW              shift, and go to state 56
    THIS             shift, and go to state 57
    INTEGER_LITERAL  shift, and go to state 58

    MethodCall  go to state 59
    LeftValue   go to state 60
    ExpList     go to state 105
    Exp         go to state 106
    id          go to state 62


State 80

   41 LeftValue: LeftValue DOT . id

    WORD  shift, and go to state 4

    id  go to state 107


State 81

   40 LeftValue: LeftValue Index .
   46 Index: Index . LBRACK Exp RBRACK

    LBRACK  shift, and go to state 108

    LBRACK    [reduce using rule 40 (LeftValue)]
    $default  reduce using rule 40 (LeftValue)


State 82

   60 op: AND .

    $default  reduce using rule 60 (op)


State 83

   61 op: OR .

    $default  reduce using rule 61 (op)


State 84

   62 op: LESS .

    $default  reduce using rule 62 (op)


State 85

   63 op: GREAT .

    $default  reduce using rule 63 (op)


State 86

   64 op: LESSEQ .

    $default  reduce using rule 64 (op)


State 87

   65 op: GREATEQ .

    $default  reduce using rule 65 (op)


State 88

   67 op: NOTEQUAL .

    $default  reduce using rule 67 (op)


State 89

   68 op: MINUS .

    $default  reduce using rule 68 (op)


State 90

   69 op: STAR .

    $default  reduce using rule 69 (op)


State 91

   70 op: SLASH .

    $default  reduce using rule 70 (op)


State 92

   66 op: EQUIVALENT .

    $default  reduce using rule 66 (op)


State 93

   49 Exp: Exp op . Exp

    PLUS             shift, and go to state 49
    MINUS            shift, and go to state 50
    LPARENTH         shift, and go to state 51
    STRING_LITERAL   shift, and go to state 52
    WORD             shift, and go to state 4
    NOT              shift, and go to state 53
    TRUE             shift, and go to state 54
    FALSE            shift, and go to state 55
    NEW              shift, and go to state 56
    THIS             shift, and go to state 57
    INTEGER_LITERAL  shift, and go to state 58

    MethodCall  go to state 59
    LeftValue   go to state 60
    Exp         go to state 109
    id          go to state 62


State 94

   14 VarInitList: VarInit COMMA VarInitList .

    $default  reduce using rule 14 (VarInitList)


State 95

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE LBRACK RBRACK id RPARENTH LBRACE . StatementList RBRACE RBRACE

    LBRACE     shift, and go to state 110
    LPARENTH   shift, and go to state 111
    WORD       shift, and go to state 4
    IF         shift, and go to state 112
    WHILE      shift, and go to state 113
    PRIMETYPE  shift, and go to state 22
    PRINT      shift, and go to state 114
    PRINTLN    shift, and go to state 115
    NEW        shift, and go to state 56
    THIS       shift, and go to state 57
    RETURN     shift, and go to state 116

    $default  reduce using rule 27 (StatementList)

    VarDecl        go to state 117
    Type           go to state 25
    StatementList  go to state 118
    Statement      go to state 119
    MethodCall     go to state 120
    LeftValue      go to state 121
    id             go to state 62


State 96

   18 MethodDecl: PUBLIC Type id LPARENTH FormalListMaybe . RPARENTH StatementList

    RPARENTH  shift, and go to state 122


State 97

   19 MethodDecl: Type id LPARENTH FormalListMaybe RPARENTH . StatementList

    LBRACE     shift, and go to state 110
    LPARENTH   shift, and go to state 111
    WORD       shift, and go to state 4
    IF         shift, and go to state 112
    WHILE      shift, and go to state 113
    PRIMETYPE  shift, and go to state 22
    PRINT      shift, and go to state 114
    PRINTLN    shift, and go to state 115
    NEW        shift, and go to state 56
    THIS       shift, and go to state 57
    RETURN     shift, and go to state 116

    PRIMETYPE  [reduce using rule 27 (StatementList)]
    $default   reduce using rule 27 (StatementList)

    VarDecl        go to state 117
    Type           go to state 25
    StatementList  go to state 123
    Statement      go to state 119
    MethodCall     go to state 120
    LeftValue      go to state 121
    id             go to state 62


State 98

   22 FormalList: Type id . LPARENTH
   23           | Type id . LPARENTH COMMA FormalList

    LPARENTH  shift, and go to state 124


State 99

   42 LeftValue: LPARENTH NEW id . LPARENTH RPARENTH RPARENTH DOT id
   43          | NEW id . LPARENTH RPARENTH DOT id

    LPARENTH  shift, and go to state 125


State 100

   53 Exp: LPARENTH Exp RPARENTH .

    $default  reduce using rule 53 (Exp)


State 101

   43 LeftValue: NEW id LPARENTH . RPARENTH DOT id

    RPARENTH  shift, and go to state 126


State 102

   44 LeftValue: THIS DOT id .

    $default  reduce using rule 44 (LeftValue)


State 103

   45 Index: LBRACK Exp . RBRACK
   49 Exp: Exp . op Exp

    AND         shift, and go to state 82
    OR          shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    LESSEQ      shift, and go to state 86
    GREATEQ     shift, and go to state 87
    NOTEQUAL    shift, and go to state 88
    MINUS       shift, and go to state 89
    STAR        shift, and go to state 90
    SLASH       shift, and go to state 91
    RBRACK      shift, and go to state 127
    EQUIVALENT  shift, and go to state 92

    op  go to state 93


State 104

   38 MethodCall: LeftValue LPARENTH RPARENTH .

    $default  reduce using rule 38 (MethodCall)


State 105

   37 MethodCall: LeftValue LPARENTH ExpList . RPARENTH

    RPARENTH  shift, and go to state 128


State 106

   47 ExpList: Exp .
   48        | Exp . COMMA Exp
   49 Exp: Exp . op Exp

    AND         shift, and go to state 82
    OR          shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    LESSEQ      shift, and go to state 86
    GREATEQ     shift, and go to state 87
    NOTEQUAL    shift, and go to state 88
    MINUS       shift, and go to state 89
    STAR        shift, and go to state 90
    SLASH       shift, and go to state 91
    COMMA       shift, and go to state 129
    EQUIVALENT  shift, and go to state 92

    $default  reduce using rule 47 (ExpList)

    op  go to state 93


State 107

   41 LeftValue: LeftValue DOT id .

    $default  reduce using rule 41 (LeftValue)


State 108

   46 Index: Index LBRACK . Exp RBRACK

    PLUS             shift, and go to state 49
    MINUS            shift, and go to state 50
    LPARENTH         shift, and go to state 51
    STRING_LITERAL   shift, and go to state 52
    WORD             shift, and go to state 4
    NOT              shift, and go to state 53
    TRUE             shift, and go to state 54
    FALSE            shift, and go to state 55
    NEW              shift, and go to state 56
    THIS             shift, and go to state 57
    INTEGER_LITERAL  shift, and go to state 58

    MethodCall  go to state 59
    LeftValue   go to state 60
    Exp         go to state 130
    id          go to state 62


State 109

   49 Exp: Exp . op Exp
   49    | Exp op Exp .

    AND         shift, and go to state 82
    OR          shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    LESSEQ      shift, and go to state 86
    GREATEQ     shift, and go to state 87
    NOTEQUAL    shift, and go to state 88
    MINUS       shift, and go to state 89
    STAR        shift, and go to state 90
    SLASH       shift, and go to state 91
    EQUIVALENT  shift, and go to state 92

    AND         [reduce using rule 49 (Exp)]
    OR          [reduce using rule 49 (Exp)]
    LESS        [reduce using rule 49 (Exp)]
    GREAT       [reduce using rule 49 (Exp)]
    LESSEQ      [reduce using rule 49 (Exp)]
    GREATEQ     [reduce using rule 49 (Exp)]
    NOTEQUAL    [reduce using rule 49 (Exp)]
    MINUS       [reduce using rule 49 (Exp)]
    STAR        [reduce using rule 49 (Exp)]
    SLASH       [reduce using rule 49 (Exp)]
    EQUIVALENT  [reduce using rule 49 (Exp)]
    $default    reduce using rule 49 (Exp)

    op  go to state 93


State 110

   29 Statement: LBRACE . StatementList RBRACE

    LBRACE     shift, and go to state 110
    LPARENTH   shift, and go to state 111
    WORD       shift, and go to state 4
    IF         shift, and go to state 112
    WHILE      shift, and go to state 113
    PRIMETYPE  shift, and go to state 22
    PRINT      shift, and go to state 114
    PRINTLN    shift, and go to state 115
    NEW        shift, and go to state 56
    THIS       shift, and go to state 57
    RETURN     shift, and go to state 116

    $default  reduce using rule 27 (StatementList)

    VarDecl        go to state 117
    Type           go to state 25
    StatementList  go to state 131
    Statement      go to state 119
    MethodCall     go to state 120
    LeftValue      go to state 121
    id             go to state 62


State 111

   42 LeftValue: LPARENTH . NEW id LPARENTH RPARENTH RPARENTH DOT id

    NEW  shift, and go to state 132


State 112

   30 Statement: IF . LPARENTH Exp RPARENTH Statement

    LPARENTH  shift, and go to state 133


State 113

   31 Statement: WHILE . LPARENTH Exp RPARENTH Statement

    LPARENTH  shift, and go to state 134


State 114

   33 Statement: PRINT . LPARENTH Exp RPARENTH SEMICOLON

    LPARENTH  shift, and go to state 135


State 115

   32 Statement: PRINTLN . LPARENTH Exp RPARENTH SEMICOLON

    LPARENTH  shift, and go to state 136


State 116

   35 Statement: RETURN . Exp SEMICOLON

    PLUS             shift, and go to state 49
    MINUS            shift, and go to state 50
    LPARENTH         shift, and go to state 51
    STRING_LITERAL   shift, and go to state 52
    WORD             shift, and go to state 4
    NOT              shift, and go to state 53
    TRUE             shift, and go to state 54
    FALSE            shift, and go to state 55
    NEW              shift, and go to state 56
    THIS             shift, and go to state 57
    INTEGER_LITERAL  shift, and go to state 58

    MethodCall  go to state 59
    LeftValue   go to state 60
    Exp         go to state 137
    id          go to state 62


State 117

   28 Statement: VarDecl .

    $default  reduce using rule 28 (Statement)


State 118

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE LBRACK RBRACK id RPARENTH LBRACE StatementList . RBRACE RBRACE

    RBRACE  shift, and go to state 138


State 119

   26 StatementList: Statement . StatementList

    LBRACE     shift, and go to state 110
    LPARENTH   shift, and go to state 111
    WORD       shift, and go to state 4
    IF         shift, and go to state 112
    WHILE      shift, and go to state 113
    PRIMETYPE  shift, and go to state 22
    PRINT      shift, and go to state 114
    PRINTLN    shift, and go to state 115
    NEW        shift, and go to state 56
    THIS       shift, and go to state 57
    RETURN     shift, and go to state 116

    PRIMETYPE  [reduce using rule 27 (StatementList)]
    $default   reduce using rule 27 (StatementList)

    VarDecl        go to state 117
    Type           go to state 25
    StatementList  go to state 139
    Statement      go to state 119
    MethodCall     go to state 120
    LeftValue      go to state 121
    id             go to state 62


State 120

   36 Statement: MethodCall . SEMICOLON

    SEMICOLON  shift, and go to state 140


State 121

   34 Statement: LeftValue . EQUAL Exp SEMICOLON
   37 MethodCall: LeftValue . LPARENTH ExpList RPARENTH
   38           | LeftValue . LPARENTH RPARENTH
   40 LeftValue: LeftValue . Index
   41          | LeftValue . DOT id

    EQUAL     shift, and go to state 141
    LBRACK    shift, and go to state 78
    LPARENTH  shift, and go to state 79
    DOT       shift, and go to state 80

    Index  go to state 81


State 122

   18 MethodDecl: PUBLIC Type id LPARENTH FormalListMaybe RPARENTH . StatementList

    LBRACE     shift, and go to state 110
    LPARENTH   shift, and go to state 111
    WORD       shift, and go to state 4
    IF         shift, and go to state 112
    WHILE      shift, and go to state 113
    PRIMETYPE  shift, and go to state 22
    PRINT      shift, and go to state 114
    PRINTLN    shift, and go to state 115
    NEW        shift, and go to state 56
    THIS       shift, and go to state 57
    RETURN     shift, and go to state 116

    PRIMETYPE  [reduce using rule 27 (StatementList)]
    $default   reduce using rule 27 (StatementList)

    VarDecl        go to state 117
    Type           go to state 25
    StatementList  go to state 142
    Statement      go to state 119
    MethodCall     go to state 120
    LeftValue      go to state 121
    id             go to state 62


State 123

   19 MethodDecl: Type id LPARENTH FormalListMaybe RPARENTH StatementList .

    $default  reduce using rule 19 (MethodDecl)


State 124

   22 FormalList: Type id LPARENTH .
   23           | Type id LPARENTH . COMMA FormalList

    COMMA  shift, and go to state 143

    $default  reduce using rule 22 (FormalList)


State 125

   42 LeftValue: LPARENTH NEW id LPARENTH . RPARENTH RPARENTH DOT id
   43          | NEW id LPARENTH . RPARENTH DOT id

    RPARENTH  shift, and go to state 144


State 126

   43 LeftValue: NEW id LPARENTH RPARENTH . DOT id

    DOT  shift, and go to state 145


State 127

   45 Index: LBRACK Exp RBRACK .

    $default  reduce using rule 45 (Index)


State 128

   37 MethodCall: LeftValue LPARENTH ExpList RPARENTH .

    $default  reduce using rule 37 (MethodCall)


State 129

   48 ExpList: Exp COMMA . Exp

    PLUS             shift, and go to state 49
    MINUS            shift, and go to state 50
    LPARENTH         shift, and go to state 51
    STRING_LITERAL   shift, and go to state 52
    WORD             shift, and go to state 4
    NOT              shift, and go to state 53
    TRUE             shift, and go to state 54
    FALSE            shift, and go to state 55
    NEW              shift, and go to state 56
    THIS             shift, and go to state 57
    INTEGER_LITERAL  shift, and go to state 58

    MethodCall  go to state 59
    LeftValue   go to state 60
    Exp         go to state 146
    id          go to state 62


State 130

   46 Index: Index LBRACK Exp . RBRACK
   49 Exp: Exp . op Exp

    AND         shift, and go to state 82
    OR          shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    LESSEQ      shift, and go to state 86
    GREATEQ     shift, and go to state 87
    NOTEQUAL    shift, and go to state 88
    MINUS       shift, and go to state 89
    STAR        shift, and go to state 90
    SLASH       shift, and go to state 91
    RBRACK      shift, and go to state 147
    EQUIVALENT  shift, and go to state 92

    op  go to state 93


State 131

   29 Statement: LBRACE StatementList . RBRACE

    RBRACE  shift, and go to state 148


State 132

   42 LeftValue: LPARENTH NEW . id LPARENTH RPARENTH RPARENTH DOT id

    WORD  shift, and go to state 4

    id  go to state 149


State 133

   30 Statement: IF LPARENTH . Exp RPARENTH Statement

    PLUS             shift, and go to state 49
    MINUS            shift, and go to state 50
    LPARENTH         shift, and go to state 51
    STRING_LITERAL   shift, and go to state 52
    WORD             shift, and go to state 4
    NOT              shift, and go to state 53
    TRUE             shift, and go to state 54
    FALSE            shift, and go to state 55
    NEW              shift, and go to state 56
    THIS             shift, and go to state 57
    INTEGER_LITERAL  shift, and go to state 58

    MethodCall  go to state 59
    LeftValue   go to state 60
    Exp         go to state 150
    id          go to state 62


State 134

   31 Statement: WHILE LPARENTH . Exp RPARENTH Statement

    PLUS             shift, and go to state 49
    MINUS            shift, and go to state 50
    LPARENTH         shift, and go to state 51
    STRING_LITERAL   shift, and go to state 52
    WORD             shift, and go to state 4
    NOT              shift, and go to state 53
    TRUE             shift, and go to state 54
    FALSE            shift, and go to state 55
    NEW              shift, and go to state 56
    THIS             shift, and go to state 57
    INTEGER_LITERAL  shift, and go to state 58

    MethodCall  go to state 59
    LeftValue   go to state 60
    Exp         go to state 151
    id          go to state 62


State 135

   33 Statement: PRINT LPARENTH . Exp RPARENTH SEMICOLON

    PLUS             shift, and go to state 49
    MINUS            shift, and go to state 50
    LPARENTH         shift, and go to state 51
    STRING_LITERAL   shift, and go to state 52
    WORD             shift, and go to state 4
    NOT              shift, and go to state 53
    TRUE             shift, and go to state 54
    FALSE            shift, and go to state 55
    NEW              shift, and go to state 56
    THIS             shift, and go to state 57
    INTEGER_LITERAL  shift, and go to state 58

    MethodCall  go to state 59
    LeftValue   go to state 60
    Exp         go to state 152
    id          go to state 62


State 136

   32 Statement: PRINTLN LPARENTH . Exp RPARENTH SEMICOLON

    PLUS             shift, and go to state 49
    MINUS            shift, and go to state 50
    LPARENTH         shift, and go to state 51
    STRING_LITERAL   shift, and go to state 52
    WORD             shift, and go to state 4
    NOT              shift, and go to state 53
    TRUE             shift, and go to state 54
    FALSE            shift, and go to state 55
    NEW              shift, and go to state 56
    THIS             shift, and go to state 57
    INTEGER_LITERAL  shift, and go to state 58

    MethodCall  go to state 59
    LeftValue   go to state 60
    Exp         go to state 153
    id          go to state 62


State 137

   35 Statement: RETURN Exp . SEMICOLON
   49 Exp: Exp . op Exp

    AND         shift, and go to state 82
    OR          shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    LESSEQ      shift, and go to state 86
    GREATEQ     shift, and go to state 87
    NOTEQUAL    shift, and go to state 88
    MINUS       shift, and go to state 89
    STAR        shift, and go to state 90
    SLASH       shift, and go to state 91
    EQUIVALENT  shift, and go to state 92
    SEMICOLON   shift, and go to state 154

    op  go to state 93


State 138

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE LBRACK RBRACK id RPARENTH LBRACE StatementList RBRACE . RBRACE

    RBRACE  shift, and go to state 155


State 139

   26 StatementList: Statement StatementList .

    $default  reduce using rule 26 (StatementList)


State 140

   36 Statement: MethodCall SEMICOLON .

    $default  reduce using rule 36 (Statement)


State 141

   34 Statement: LeftValue EQUAL . Exp SEMICOLON

    PLUS             shift, and go to state 49
    MINUS            shift, and go to state 50
    LPARENTH         shift, and go to state 51
    STRING_LITERAL   shift, and go to state 52
    WORD             shift, and go to state 4
    NOT              shift, and go to state 53
    TRUE             shift, and go to state 54
    FALSE            shift, and go to state 55
    NEW              shift, and go to state 56
    THIS             shift, and go to state 57
    INTEGER_LITERAL  shift, and go to state 58

    MethodCall  go to state 59
    LeftValue   go to state 60
    Exp         go to state 156
    id          go to state 62


State 142

   18 MethodDecl: PUBLIC Type id LPARENTH FormalListMaybe RPARENTH StatementList .

    $default  reduce using rule 18 (MethodDecl)


State 143

   23 FormalList: Type id LPARENTH COMMA . FormalList

    PRIMETYPE  shift, and go to state 22

    FormalList  go to state 157
    Type        go to state 69


State 144

   42 LeftValue: LPARENTH NEW id LPARENTH RPARENTH . RPARENTH DOT id
   43          | NEW id LPARENTH RPARENTH . DOT id

    RPARENTH  shift, and go to state 158
    DOT       shift, and go to state 145


State 145

   43 LeftValue: NEW id LPARENTH RPARENTH DOT . id

    WORD  shift, and go to state 4

    id  go to state 159


State 146

   48 ExpList: Exp COMMA Exp .
   49 Exp: Exp . op Exp

    AND         shift, and go to state 82
    OR          shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    LESSEQ      shift, and go to state 86
    GREATEQ     shift, and go to state 87
    NOTEQUAL    shift, and go to state 88
    MINUS       shift, and go to state 89
    STAR        shift, and go to state 90
    SLASH       shift, and go to state 91
    EQUIVALENT  shift, and go to state 92

    $default  reduce using rule 48 (ExpList)

    op  go to state 93


State 147

   46 Index: Index LBRACK Exp RBRACK .

    $default  reduce using rule 46 (Index)


State 148

   29 Statement: LBRACE StatementList RBRACE .

    $default  reduce using rule 29 (Statement)


State 149

   42 LeftValue: LPARENTH NEW id . LPARENTH RPARENTH RPARENTH DOT id

    LPARENTH  shift, and go to state 160


State 150

   30 Statement: IF LPARENTH Exp . RPARENTH Statement
   49 Exp: Exp . op Exp

    AND         shift, and go to state 82
    OR          shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    LESSEQ      shift, and go to state 86
    GREATEQ     shift, and go to state 87
    NOTEQUAL    shift, and go to state 88
    MINUS       shift, and go to state 89
    STAR        shift, and go to state 90
    SLASH       shift, and go to state 91
    RPARENTH    shift, and go to state 161
    EQUIVALENT  shift, and go to state 92

    op  go to state 93


State 151

   31 Statement: WHILE LPARENTH Exp . RPARENTH Statement
   49 Exp: Exp . op Exp

    AND         shift, and go to state 82
    OR          shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    LESSEQ      shift, and go to state 86
    GREATEQ     shift, and go to state 87
    NOTEQUAL    shift, and go to state 88
    MINUS       shift, and go to state 89
    STAR        shift, and go to state 90
    SLASH       shift, and go to state 91
    RPARENTH    shift, and go to state 162
    EQUIVALENT  shift, and go to state 92

    op  go to state 93


State 152

   33 Statement: PRINT LPARENTH Exp . RPARENTH SEMICOLON
   49 Exp: Exp . op Exp

    AND         shift, and go to state 82
    OR          shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    LESSEQ      shift, and go to state 86
    GREATEQ     shift, and go to state 87
    NOTEQUAL    shift, and go to state 88
    MINUS       shift, and go to state 89
    STAR        shift, and go to state 90
    SLASH       shift, and go to state 91
    RPARENTH    shift, and go to state 163
    EQUIVALENT  shift, and go to state 92

    op  go to state 93


State 153

   32 Statement: PRINTLN LPARENTH Exp . RPARENTH SEMICOLON
   49 Exp: Exp . op Exp

    AND         shift, and go to state 82
    OR          shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    LESSEQ      shift, and go to state 86
    GREATEQ     shift, and go to state 87
    NOTEQUAL    shift, and go to state 88
    MINUS       shift, and go to state 89
    STAR        shift, and go to state 90
    SLASH       shift, and go to state 91
    RPARENTH    shift, and go to state 164
    EQUIVALENT  shift, and go to state 92

    op  go to state 93


State 154

   35 Statement: RETURN Exp SEMICOLON .

    $default  reduce using rule 35 (Statement)


State 155

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE LBRACK RBRACK id RPARENTH LBRACE StatementList RBRACE RBRACE .

    $default  reduce using rule 2 (MainClass)


State 156

   34 Statement: LeftValue EQUAL Exp . SEMICOLON
   49 Exp: Exp . op Exp

    AND         shift, and go to state 82
    OR          shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    LESSEQ      shift, and go to state 86
    GREATEQ     shift, and go to state 87
    NOTEQUAL    shift, and go to state 88
    MINUS       shift, and go to state 89
    STAR        shift, and go to state 90
    SLASH       shift, and go to state 91
    EQUIVALENT  shift, and go to state 92
    SEMICOLON   shift, and go to state 165

    op  go to state 93


State 157

   23 FormalList: Type id LPARENTH COMMA FormalList .

    $default  reduce using rule 23 (FormalList)


State 158

   42 LeftValue: LPARENTH NEW id LPARENTH RPARENTH RPARENTH . DOT id

    DOT  shift, and go to state 166


State 159

   43 LeftValue: NEW id LPARENTH RPARENTH DOT id .

    $default  reduce using rule 43 (LeftValue)


State 160

   42 LeftValue: LPARENTH NEW id LPARENTH . RPARENTH RPARENTH DOT id

    RPARENTH  shift, and go to state 167


State 161

   30 Statement: IF LPARENTH Exp RPARENTH . Statement

    LBRACE     shift, and go to state 110
    LPARENTH   shift, and go to state 111
    WORD       shift, and go to state 4
    IF         shift, and go to state 112
    WHILE      shift, and go to state 113
    PRIMETYPE  shift, and go to state 22
    PRINT      shift, and go to state 114
    PRINTLN    shift, and go to state 115
    NEW        shift, and go to state 56
    THIS       shift, and go to state 57
    RETURN     shift, and go to state 116

    VarDecl     go to state 117
    Type        go to state 25
    Statement   go to state 168
    MethodCall  go to state 120
    LeftValue   go to state 121
    id          go to state 62


State 162

   31 Statement: WHILE LPARENTH Exp RPARENTH . Statement

    LBRACE     shift, and go to state 110
    LPARENTH   shift, and go to state 111
    WORD       shift, and go to state 4
    IF         shift, and go to state 112
    WHILE      shift, and go to state 113
    PRIMETYPE  shift, and go to state 22
    PRINT      shift, and go to state 114
    PRINTLN    shift, and go to state 115
    NEW        shift, and go to state 56
    THIS       shift, and go to state 57
    RETURN     shift, and go to state 116

    VarDecl     go to state 117
    Type        go to state 25
    Statement   go to state 169
    MethodCall  go to state 120
    LeftValue   go to state 121
    id          go to state 62


State 163

   33 Statement: PRINT LPARENTH Exp RPARENTH . SEMICOLON

    SEMICOLON  shift, and go to state 170


State 164

   32 Statement: PRINTLN LPARENTH Exp RPARENTH . SEMICOLON

    SEMICOLON  shift, and go to state 171


State 165

   34 Statement: LeftValue EQUAL Exp SEMICOLON .

    $default  reduce using rule 34 (Statement)


State 166

   42 LeftValue: LPARENTH NEW id LPARENTH RPARENTH RPARENTH DOT . id

    WORD  shift, and go to state 4

    id  go to state 172


State 167

   42 LeftValue: LPARENTH NEW id LPARENTH RPARENTH . RPARENTH DOT id

    RPARENTH  shift, and go to state 158


State 168

   30 Statement: IF LPARENTH Exp RPARENTH Statement .

    $default  reduce using rule 30 (Statement)


State 169

   31 Statement: WHILE LPARENTH Exp RPARENTH Statement .

    $default  reduce using rule 31 (Statement)


State 170

   33 Statement: PRINT LPARENTH Exp RPARENTH SEMICOLON .

    $default  reduce using rule 33 (Statement)


State 171

   32 Statement: PRINTLN LPARENTH Exp RPARENTH SEMICOLON .

    $default  reduce using rule 32 (Statement)


State 172

   42 LeftValue: LPARENTH NEW id LPARENTH RPARENTH RPARENTH DOT id .

    $default  reduce using rule 42 (LeftValue)
