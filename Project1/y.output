State 17 conflicts: 1 shift/reduce
State 23 conflicts: 1 shift/reduce
State 60 conflicts: 10 shift/reduce
State 79 conflicts: 1 shift/reduce
State 81 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: MainClass ClassDeclList

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE LBRACK RBRACK id RPARENTH LBRACE StatementList RBRACE RBRACE

    3 ClassDeclList: ClassDecl ClassDeclList
    4              | %empty

    5 ClassDecl: CLASS id LBRACE ParentMaybe VarDeclList MethodDeclList RBRACE

    6 ParentMaybe: Parent
    7            | %empty

    8 Parent: EXTENDS id RBRACE LBRACE

    9 VarDeclList: VarDecl VarDeclList
   10            | %empty

   11 VarDecl: Type id VarInitList SEMICOLON
   12        | Type id SEMICOLON

   13 VarInitList: VarInit
   14            | VarInit COMMA VarInitList

   15 VarInit: EQUAL Exp

   16 MethodDeclList: MethodDecl MethodDeclList
   17               | %empty

   18 MethodDecl: PUBLIC Type id LPARENTH FormalListMaybe RPARENTH LBRACE StatementList RBRACE
   19           | Type id LPARENTH FormalListMaybe RPARENTH LBRACE StatementList RBRACE

   20 FormalListMaybe: FormalList
   21                | %empty

   22 FormalList: Type id
   23           | Type id COMMA FormalList

   24 Type: PRIMETYPE
   25     | Type LBRACK RBRACK

   26 StatementList: Statement StatementList
   27              | %empty

   28 Statement: VarDecl
   29          | LBRACE StatementList RBRACE
   30          | IF LPARENTH Exp RPARENTH Statement
   31          | WHILE LPARENTH Exp RPARENTH Statement
   32          | PRINTLN LPARENTH Exp RPARENTH SEMICOLON
   33          | PRINT LPARENTH Exp RPARENTH SEMICOLON
   34          | LeftValue EQUAL Exp SEMICOLON
   35          | RETURN Exp SEMICOLON
   36          | MethodCall SEMICOLON

   37 MethodCall: LeftValue LPARENTH ExpList RPARENTH
   38           | LeftValue LPARENTH RPARENTH

   39 LeftValue: id
   40          | LeftValue Index
   41          | LeftValue DOT id
   42          | LPARENTH NEW id LPARENTH RPARENTH RPARENTH DOT id
   43          | NEW id LPARENTH RPARENTH DOT id
   44          | THIS DOT id

   45 Index: LBRACK Exp RBRACK
   46      | Index LBRACK Exp RBRACK

   47 ExpList: Exp
   48        | Exp COMMA Exp

   49 ExpOp: %empty
   50      | NOT Exp
   51      | PLUS Exp
   52      | MINUS Exp
   53      | LPARENTH Exp RPARENTH
   54      | STRING_LITERAL
   55      | TRUE
   56      | FALSE
   57      | INTEGER_LITERAL
   58      | MethodCall
   59      | NEW id LBRACE RPARENTH
   60      | NEW PRIMETYPE Index
   61      | LeftValue
   62      | LeftValue DOT LENGTH

   63 Exp: ExpOp op Exp
   64    | ExpOp

   65 id: WORD

   66 op: AND
   67   | OR
   68   | LESS
   69   | GREAT
   70   | LESSEQ
   71   | GREATEQ
   72   | EQUIVALENT
   73   | NOTEQUAL
   74   | STAR
   75   | SLASH


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AND (258) 66
    OR (259) 67
    LESS (260) 68
    GREAT (261) 69
    LESSEQ (262) 70
    GREATEQ (263) 71
    EQUAL (264) 15 34
    NOTEQUAL (265) 73
    PLUS (266) 51
    MINUS (267) 52
    STAR (268) 74
    SLASH (269) 75
    LBRACK (270) 2 25 45 46
    RBRACK (271) 2 25 45 46
    LBRACE (272) 2 5 8 18 19 29 59
    RBRACE (273) 2 5 8 18 19 29
    LPARENTH (274) 2 18 19 30 31 32 33 37 38 42 43 53
    RPARENTH (275) 2 18 19 30 31 32 33 37 38 42 43 53 59
    EXTENDS (276) 8
    HEADER (277) 2
    STRING_LITERAL (278) 54
    WORD (279) 65
    CLASS (280) 2 5
    IF (281) 30
    WHILE (282) 31
    NOT (283) 50
    TRUE (284) 55
    FALSE (285) 56
    PRIMETYPE (286) 2 24 60
    PUBLIC (287) 18
    COMMA (288) 14 23 48
    EQUIVALENT (289) 72
    SEMICOLON (290) 11 12 32 33 34 35 36
    PRINT (291) 33
    PRINTLN (292) 32
    DOT (293) 41 42 43 44 62
    NEW (294) 42 43 59 60
    THIS (295) 44
    RETURN (296) 35
    INTEGER_LITERAL (297) 57
    LENGTH (298) 62


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    Program (45)
        on left: 1
        on right: 0
    MainClass (46)
        on left: 2
        on right: 1
    ClassDeclList (47)
        on left: 3 4
        on right: 1 3
    ClassDecl (48)
        on left: 5
        on right: 3
    ParentMaybe (49)
        on left: 6 7
        on right: 5
    Parent (50)
        on left: 8
        on right: 6
    VarDeclList (51)
        on left: 9 10
        on right: 5 9
    VarDecl (52)
        on left: 11 12
        on right: 9 28
    VarInitList (53)
        on left: 13 14
        on right: 11 14
    VarInit (54)
        on left: 15
        on right: 13 14
    MethodDeclList (55)
        on left: 16 17
        on right: 5 16
    MethodDecl (56)
        on left: 18 19
        on right: 16
    FormalListMaybe (57)
        on left: 20 21
        on right: 18 19
    FormalList (58)
        on left: 22 23
        on right: 20 23
    Type (59)
        on left: 24 25
        on right: 11 12 18 19 22 23 25
    StatementList (60)
        on left: 26 27
        on right: 2 18 19 26 29
    Statement (61)
        on left: 28 29 30 31 32 33 34 35 36
        on right: 26 30 31
    MethodCall (62)
        on left: 37 38
        on right: 36 58
    LeftValue (63)
        on left: 39 40 41 42 43 44
        on right: 34 37 38 40 41 61 62
    Index (64)
        on left: 45 46
        on right: 40 46 60
    ExpList (65)
        on left: 47 48
        on right: 37
    ExpOp (66)
        on left: 49 50 51 52 53 54 55 56 57 58 59 60 61 62
        on right: 63 64
    Exp (67)
        on left: 63 64
        on right: 15 30 31 32 33 34 35 45 46 47 48 50 51 52 53 63
    id (68)
        on left: 65
        on right: 2 5 8 11 12 18 19 22 23 39 41 42 43 44 59
    op (69)
        on left: 66 67 68 69 70 71 72 73 74 75
        on right: 63


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program    go to state 2
    MainClass  go to state 3


State 1

    2 MainClass: CLASS . id LBRACE HEADER LPARENTH PRIMETYPE LBRACK RBRACK id RPARENTH LBRACE StatementList RBRACE RBRACE

    WORD  shift, and go to state 4

    id  go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: MainClass . ClassDeclList

    CLASS  shift, and go to state 7

    $default  reduce using rule 4 (ClassDeclList)

    ClassDeclList  go to state 8
    ClassDecl      go to state 9


State 4

   65 id: WORD .

    $default  reduce using rule 65 (id)


State 5

    2 MainClass: CLASS id . LBRACE HEADER LPARENTH PRIMETYPE LBRACK RBRACK id RPARENTH LBRACE StatementList RBRACE RBRACE

    LBRACE  shift, and go to state 10


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    5 ClassDecl: CLASS . id LBRACE ParentMaybe VarDeclList MethodDeclList RBRACE

    WORD  shift, and go to state 4

    id  go to state 11


State 8

    1 Program: MainClass ClassDeclList .

    $default  reduce using rule 1 (Program)


State 9

    3 ClassDeclList: ClassDecl . ClassDeclList

    CLASS  shift, and go to state 7

    $default  reduce using rule 4 (ClassDeclList)

    ClassDeclList  go to state 12
    ClassDecl      go to state 9


State 10

    2 MainClass: CLASS id LBRACE . HEADER LPARENTH PRIMETYPE LBRACK RBRACK id RPARENTH LBRACE StatementList RBRACE RBRACE

    HEADER  shift, and go to state 13


State 11

    5 ClassDecl: CLASS id . LBRACE ParentMaybe VarDeclList MethodDeclList RBRACE

    LBRACE  shift, and go to state 14


State 12

    3 ClassDeclList: ClassDecl ClassDeclList .

    $default  reduce using rule 3 (ClassDeclList)


State 13

    2 MainClass: CLASS id LBRACE HEADER . LPARENTH PRIMETYPE LBRACK RBRACK id RPARENTH LBRACE StatementList RBRACE RBRACE

    LPARENTH  shift, and go to state 15


State 14

    5 ClassDecl: CLASS id LBRACE . ParentMaybe VarDeclList MethodDeclList RBRACE

    EXTENDS  shift, and go to state 16

    $default  reduce using rule 7 (ParentMaybe)

    ParentMaybe  go to state 17
    Parent       go to state 18


State 15

    2 MainClass: CLASS id LBRACE HEADER LPARENTH . PRIMETYPE LBRACK RBRACK id RPARENTH LBRACE StatementList RBRACE RBRACE

    PRIMETYPE  shift, and go to state 19


State 16

    8 Parent: EXTENDS . id RBRACE LBRACE

    WORD  shift, and go to state 4

    id  go to state 20


State 17

    5 ClassDecl: CLASS id LBRACE ParentMaybe . VarDeclList MethodDeclList RBRACE

    PRIMETYPE  shift, and go to state 21

    PRIMETYPE  [reduce using rule 10 (VarDeclList)]
    $default   reduce using rule 10 (VarDeclList)

    VarDeclList  go to state 22
    VarDecl      go to state 23
    Type         go to state 24


State 18

    6 ParentMaybe: Parent .

    $default  reduce using rule 6 (ParentMaybe)


State 19

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE . LBRACK RBRACK id RPARENTH LBRACE StatementList RBRACE RBRACE

    LBRACK  shift, and go to state 25


State 20

    8 Parent: EXTENDS id . RBRACE LBRACE

    RBRACE  shift, and go to state 26


State 21

   24 Type: PRIMETYPE .

    $default  reduce using rule 24 (Type)


State 22

    5 ClassDecl: CLASS id LBRACE ParentMaybe VarDeclList . MethodDeclList RBRACE

    PRIMETYPE  shift, and go to state 21
    PUBLIC     shift, and go to state 27

    $default  reduce using rule 17 (MethodDeclList)

    MethodDeclList  go to state 28
    MethodDecl      go to state 29
    Type            go to state 30


State 23

    9 VarDeclList: VarDecl . VarDeclList

    PRIMETYPE  shift, and go to state 21

    PRIMETYPE  [reduce using rule 10 (VarDeclList)]
    $default   reduce using rule 10 (VarDeclList)

    VarDeclList  go to state 31
    VarDecl      go to state 23
    Type         go to state 24


State 24

   11 VarDecl: Type . id VarInitList SEMICOLON
   12        | Type . id SEMICOLON
   25 Type: Type . LBRACK RBRACK

    LBRACK  shift, and go to state 32
    WORD    shift, and go to state 4

    id  go to state 33


State 25

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE LBRACK . RBRACK id RPARENTH LBRACE StatementList RBRACE RBRACE

    RBRACK  shift, and go to state 34


State 26

    8 Parent: EXTENDS id RBRACE . LBRACE

    LBRACE  shift, and go to state 35


State 27

   18 MethodDecl: PUBLIC . Type id LPARENTH FormalListMaybe RPARENTH LBRACE StatementList RBRACE

    PRIMETYPE  shift, and go to state 21

    Type  go to state 36


State 28

    5 ClassDecl: CLASS id LBRACE ParentMaybe VarDeclList MethodDeclList . RBRACE

    RBRACE  shift, and go to state 37


State 29

   16 MethodDeclList: MethodDecl . MethodDeclList

    PRIMETYPE  shift, and go to state 21
    PUBLIC     shift, and go to state 27

    $default  reduce using rule 17 (MethodDeclList)

    MethodDeclList  go to state 38
    MethodDecl      go to state 29
    Type            go to state 30


State 30

   19 MethodDecl: Type . id LPARENTH FormalListMaybe RPARENTH LBRACE StatementList RBRACE
   25 Type: Type . LBRACK RBRACK

    LBRACK  shift, and go to state 32
    WORD    shift, and go to state 4

    id  go to state 39


State 31

    9 VarDeclList: VarDecl VarDeclList .

    $default  reduce using rule 9 (VarDeclList)


State 32

   25 Type: Type LBRACK . RBRACK

    RBRACK  shift, and go to state 40


State 33

   11 VarDecl: Type id . VarInitList SEMICOLON
   12        | Type id . SEMICOLON

    EQUAL      shift, and go to state 41
    SEMICOLON  shift, and go to state 42

    VarInitList  go to state 43
    VarInit      go to state 44


State 34

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE LBRACK RBRACK . id RPARENTH LBRACE StatementList RBRACE RBRACE

    WORD  shift, and go to state 4

    id  go to state 45


State 35

    8 Parent: EXTENDS id RBRACE LBRACE .

    $default  reduce using rule 8 (Parent)


State 36

   18 MethodDecl: PUBLIC Type . id LPARENTH FormalListMaybe RPARENTH LBRACE StatementList RBRACE
   25 Type: Type . LBRACK RBRACK

    LBRACK  shift, and go to state 32
    WORD    shift, and go to state 4

    id  go to state 46


State 37

    5 ClassDecl: CLASS id LBRACE ParentMaybe VarDeclList MethodDeclList RBRACE .

    $default  reduce using rule 5 (ClassDecl)


State 38

   16 MethodDeclList: MethodDecl MethodDeclList .

    $default  reduce using rule 16 (MethodDeclList)


State 39

   19 MethodDecl: Type id . LPARENTH FormalListMaybe RPARENTH LBRACE StatementList RBRACE

    LPARENTH  shift, and go to state 47


State 40

   25 Type: Type LBRACK RBRACK .

    $default  reduce using rule 25 (Type)


State 41

   15 VarInit: EQUAL . Exp

    PLUS             shift, and go to state 48
    MINUS            shift, and go to state 49
    LPARENTH         shift, and go to state 50
    STRING_LITERAL   shift, and go to state 51
    WORD             shift, and go to state 4
    NOT              shift, and go to state 52
    TRUE             shift, and go to state 53
    FALSE            shift, and go to state 54
    NEW              shift, and go to state 55
    THIS             shift, and go to state 56
    INTEGER_LITERAL  shift, and go to state 57

    $default  reduce using rule 49 (ExpOp)

    MethodCall  go to state 58
    LeftValue   go to state 59
    ExpOp       go to state 60
    Exp         go to state 61
    id          go to state 62


State 42

   12 VarDecl: Type id SEMICOLON .

    $default  reduce using rule 12 (VarDecl)


State 43

   11 VarDecl: Type id VarInitList . SEMICOLON

    SEMICOLON  shift, and go to state 63


State 44

   13 VarInitList: VarInit .
   14            | VarInit . COMMA VarInitList

    COMMA  shift, and go to state 64

    $default  reduce using rule 13 (VarInitList)


State 45

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE LBRACK RBRACK id . RPARENTH LBRACE StatementList RBRACE RBRACE

    RPARENTH  shift, and go to state 65


State 46

   18 MethodDecl: PUBLIC Type id . LPARENTH FormalListMaybe RPARENTH LBRACE StatementList RBRACE

    LPARENTH  shift, and go to state 66


State 47

   19 MethodDecl: Type id LPARENTH . FormalListMaybe RPARENTH LBRACE StatementList RBRACE

    PRIMETYPE  shift, and go to state 21

    $default  reduce using rule 21 (FormalListMaybe)

    FormalListMaybe  go to state 67
    FormalList       go to state 68
    Type             go to state 69


State 48

   51 ExpOp: PLUS . Exp

    PLUS             shift, and go to state 48
    MINUS            shift, and go to state 49
    LPARENTH         shift, and go to state 50
    STRING_LITERAL   shift, and go to state 51
    WORD             shift, and go to state 4
    NOT              shift, and go to state 52
    TRUE             shift, and go to state 53
    FALSE            shift, and go to state 54
    NEW              shift, and go to state 55
    THIS             shift, and go to state 56
    INTEGER_LITERAL  shift, and go to state 57

    $default  reduce using rule 49 (ExpOp)

    MethodCall  go to state 58
    LeftValue   go to state 59
    ExpOp       go to state 60
    Exp         go to state 70
    id          go to state 62


State 49

   52 ExpOp: MINUS . Exp

    PLUS             shift, and go to state 48
    MINUS            shift, and go to state 49
    LPARENTH         shift, and go to state 50
    STRING_LITERAL   shift, and go to state 51
    WORD             shift, and go to state 4
    NOT              shift, and go to state 52
    TRUE             shift, and go to state 53
    FALSE            shift, and go to state 54
    NEW              shift, and go to state 55
    THIS             shift, and go to state 56
    INTEGER_LITERAL  shift, and go to state 57

    $default  reduce using rule 49 (ExpOp)

    MethodCall  go to state 58
    LeftValue   go to state 59
    ExpOp       go to state 60
    Exp         go to state 71
    id          go to state 62


State 50

   42 LeftValue: LPARENTH . NEW id LPARENTH RPARENTH RPARENTH DOT id
   53 ExpOp: LPARENTH . Exp RPARENTH

    PLUS             shift, and go to state 48
    MINUS            shift, and go to state 49
    LPARENTH         shift, and go to state 50
    STRING_LITERAL   shift, and go to state 51
    WORD             shift, and go to state 4
    NOT              shift, and go to state 52
    TRUE             shift, and go to state 53
    FALSE            shift, and go to state 54
    NEW              shift, and go to state 72
    THIS             shift, and go to state 56
    INTEGER_LITERAL  shift, and go to state 57

    $default  reduce using rule 49 (ExpOp)

    MethodCall  go to state 58
    LeftValue   go to state 59
    ExpOp       go to state 60
    Exp         go to state 73
    id          go to state 62


State 51

   54 ExpOp: STRING_LITERAL .

    $default  reduce using rule 54 (ExpOp)


State 52

   50 ExpOp: NOT . Exp

    PLUS             shift, and go to state 48
    MINUS            shift, and go to state 49
    LPARENTH         shift, and go to state 50
    STRING_LITERAL   shift, and go to state 51
    WORD             shift, and go to state 4
    NOT              shift, and go to state 52
    TRUE             shift, and go to state 53
    FALSE            shift, and go to state 54
    NEW              shift, and go to state 55
    THIS             shift, and go to state 56
    INTEGER_LITERAL  shift, and go to state 57

    $default  reduce using rule 49 (ExpOp)

    MethodCall  go to state 58
    LeftValue   go to state 59
    ExpOp       go to state 60
    Exp         go to state 74
    id          go to state 62


State 53

   55 ExpOp: TRUE .

    $default  reduce using rule 55 (ExpOp)


State 54

   56 ExpOp: FALSE .

    $default  reduce using rule 56 (ExpOp)


State 55

   43 LeftValue: NEW . id LPARENTH RPARENTH DOT id
   59 ExpOp: NEW . id LBRACE RPARENTH
   60      | NEW . PRIMETYPE Index

    WORD       shift, and go to state 4
    PRIMETYPE  shift, and go to state 75

    id  go to state 76


State 56

   44 LeftValue: THIS . DOT id

    DOT  shift, and go to state 77


State 57

   57 ExpOp: INTEGER_LITERAL .

    $default  reduce using rule 57 (ExpOp)


State 58

   58 ExpOp: MethodCall .

    $default  reduce using rule 58 (ExpOp)


State 59

   37 MethodCall: LeftValue . LPARENTH ExpList RPARENTH
   38           | LeftValue . LPARENTH RPARENTH
   40 LeftValue: LeftValue . Index
   41          | LeftValue . DOT id
   61 ExpOp: LeftValue .
   62      | LeftValue . DOT LENGTH

    LBRACK    shift, and go to state 78
    LPARENTH  shift, and go to state 79
    DOT       shift, and go to state 80

    $default  reduce using rule 61 (ExpOp)

    Index  go to state 81


State 60

   63 Exp: ExpOp . op Exp
   64    | ExpOp .

    AND         shift, and go to state 82
    OR          shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    LESSEQ      shift, and go to state 86
    GREATEQ     shift, and go to state 87
    NOTEQUAL    shift, and go to state 88
    STAR        shift, and go to state 89
    SLASH       shift, and go to state 90
    EQUIVALENT  shift, and go to state 91

    AND         [reduce using rule 64 (Exp)]
    OR          [reduce using rule 64 (Exp)]
    LESS        [reduce using rule 64 (Exp)]
    GREAT       [reduce using rule 64 (Exp)]
    LESSEQ      [reduce using rule 64 (Exp)]
    GREATEQ     [reduce using rule 64 (Exp)]
    NOTEQUAL    [reduce using rule 64 (Exp)]
    STAR        [reduce using rule 64 (Exp)]
    SLASH       [reduce using rule 64 (Exp)]
    EQUIVALENT  [reduce using rule 64 (Exp)]
    $default    reduce using rule 64 (Exp)

    op  go to state 92


State 61

   15 VarInit: EQUAL Exp .

    $default  reduce using rule 15 (VarInit)


State 62

   39 LeftValue: id .

    $default  reduce using rule 39 (LeftValue)


State 63

   11 VarDecl: Type id VarInitList SEMICOLON .

    $default  reduce using rule 11 (VarDecl)


State 64

   14 VarInitList: VarInit COMMA . VarInitList

    EQUAL  shift, and go to state 41

    VarInitList  go to state 93
    VarInit      go to state 44


State 65

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE LBRACK RBRACK id RPARENTH . LBRACE StatementList RBRACE RBRACE

    LBRACE  shift, and go to state 94


State 66

   18 MethodDecl: PUBLIC Type id LPARENTH . FormalListMaybe RPARENTH LBRACE StatementList RBRACE

    PRIMETYPE  shift, and go to state 21

    $default  reduce using rule 21 (FormalListMaybe)

    FormalListMaybe  go to state 95
    FormalList       go to state 68
    Type             go to state 69


State 67

   19 MethodDecl: Type id LPARENTH FormalListMaybe . RPARENTH LBRACE StatementList RBRACE

    RPARENTH  shift, and go to state 96


State 68

   20 FormalListMaybe: FormalList .

    $default  reduce using rule 20 (FormalListMaybe)


State 69

   22 FormalList: Type . id
   23           | Type . id COMMA FormalList
   25 Type: Type . LBRACK RBRACK

    LBRACK  shift, and go to state 32
    WORD    shift, and go to state 4

    id  go to state 97


State 70

   51 ExpOp: PLUS Exp .

    $default  reduce using rule 51 (ExpOp)


State 71

   52 ExpOp: MINUS Exp .

    $default  reduce using rule 52 (ExpOp)


State 72

   42 LeftValue: LPARENTH NEW . id LPARENTH RPARENTH RPARENTH DOT id
   43          | NEW . id LPARENTH RPARENTH DOT id
   59 ExpOp: NEW . id LBRACE RPARENTH
   60      | NEW . PRIMETYPE Index

    WORD       shift, and go to state 4
    PRIMETYPE  shift, and go to state 75

    id  go to state 98


State 73

   53 ExpOp: LPARENTH Exp . RPARENTH

    RPARENTH  shift, and go to state 99


State 74

   50 ExpOp: NOT Exp .

    $default  reduce using rule 50 (ExpOp)


State 75

   60 ExpOp: NEW PRIMETYPE . Index

    LBRACK  shift, and go to state 78

    Index  go to state 100


State 76

   43 LeftValue: NEW id . LPARENTH RPARENTH DOT id
   59 ExpOp: NEW id . LBRACE RPARENTH

    LBRACE    shift, and go to state 101
    LPARENTH  shift, and go to state 102


State 77

   44 LeftValue: THIS DOT . id

    WORD  shift, and go to state 4

    id  go to state 103


State 78

   45 Index: LBRACK . Exp RBRACK

    PLUS             shift, and go to state 48
    MINUS            shift, and go to state 49
    LPARENTH         shift, and go to state 50
    STRING_LITERAL   shift, and go to state 51
    WORD             shift, and go to state 4
    NOT              shift, and go to state 52
    TRUE             shift, and go to state 53
    FALSE            shift, and go to state 54
    NEW              shift, and go to state 55
    THIS             shift, and go to state 56
    INTEGER_LITERAL  shift, and go to state 57

    $default  reduce using rule 49 (ExpOp)

    MethodCall  go to state 58
    LeftValue   go to state 59
    ExpOp       go to state 60
    Exp         go to state 104
    id          go to state 62


State 79

   37 MethodCall: LeftValue LPARENTH . ExpList RPARENTH
   38           | LeftValue LPARENTH . RPARENTH

    PLUS             shift, and go to state 48
    MINUS            shift, and go to state 49
    LPARENTH         shift, and go to state 50
    RPARENTH         shift, and go to state 105
    STRING_LITERAL   shift, and go to state 51
    WORD             shift, and go to state 4
    NOT              shift, and go to state 52
    TRUE             shift, and go to state 53
    FALSE            shift, and go to state 54
    NEW              shift, and go to state 55
    THIS             shift, and go to state 56
    INTEGER_LITERAL  shift, and go to state 57

    RPARENTH  [reduce using rule 49 (ExpOp)]
    $default  reduce using rule 49 (ExpOp)

    MethodCall  go to state 58
    LeftValue   go to state 59
    ExpList     go to state 106
    ExpOp       go to state 60
    Exp         go to state 107
    id          go to state 62


State 80

   41 LeftValue: LeftValue DOT . id
   62 ExpOp: LeftValue DOT . LENGTH

    WORD    shift, and go to state 4
    LENGTH  shift, and go to state 108

    id  go to state 109


State 81

   40 LeftValue: LeftValue Index .
   46 Index: Index . LBRACK Exp RBRACK

    LBRACK  shift, and go to state 110

    LBRACK    [reduce using rule 40 (LeftValue)]
    $default  reduce using rule 40 (LeftValue)


State 82

   66 op: AND .

    $default  reduce using rule 66 (op)


State 83

   67 op: OR .

    $default  reduce using rule 67 (op)


State 84

   68 op: LESS .

    $default  reduce using rule 68 (op)


State 85

   69 op: GREAT .

    $default  reduce using rule 69 (op)


State 86

   70 op: LESSEQ .

    $default  reduce using rule 70 (op)


State 87

   71 op: GREATEQ .

    $default  reduce using rule 71 (op)


State 88

   73 op: NOTEQUAL .

    $default  reduce using rule 73 (op)


State 89

   74 op: STAR .

    $default  reduce using rule 74 (op)


State 90

   75 op: SLASH .

    $default  reduce using rule 75 (op)


State 91

   72 op: EQUIVALENT .

    $default  reduce using rule 72 (op)


State 92

   63 Exp: ExpOp op . Exp

    PLUS             shift, and go to state 48
    MINUS            shift, and go to state 49
    LPARENTH         shift, and go to state 50
    STRING_LITERAL   shift, and go to state 51
    WORD             shift, and go to state 4
    NOT              shift, and go to state 52
    TRUE             shift, and go to state 53
    FALSE            shift, and go to state 54
    NEW              shift, and go to state 55
    THIS             shift, and go to state 56
    INTEGER_LITERAL  shift, and go to state 57

    $default  reduce using rule 49 (ExpOp)

    MethodCall  go to state 58
    LeftValue   go to state 59
    ExpOp       go to state 60
    Exp         go to state 111
    id          go to state 62


State 93

   14 VarInitList: VarInit COMMA VarInitList .

    $default  reduce using rule 14 (VarInitList)


State 94

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE LBRACK RBRACK id RPARENTH LBRACE . StatementList RBRACE RBRACE

    LBRACE     shift, and go to state 112
    LPARENTH   shift, and go to state 113
    WORD       shift, and go to state 4
    IF         shift, and go to state 114
    WHILE      shift, and go to state 115
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 116
    PRINTLN    shift, and go to state 117
    NEW        shift, and go to state 118
    THIS       shift, and go to state 56
    RETURN     shift, and go to state 119

    $default  reduce using rule 27 (StatementList)

    VarDecl        go to state 120
    Type           go to state 24
    StatementList  go to state 121
    Statement      go to state 122
    MethodCall     go to state 123
    LeftValue      go to state 124
    id             go to state 62


State 95

   18 MethodDecl: PUBLIC Type id LPARENTH FormalListMaybe . RPARENTH LBRACE StatementList RBRACE

    RPARENTH  shift, and go to state 125


State 96

   19 MethodDecl: Type id LPARENTH FormalListMaybe RPARENTH . LBRACE StatementList RBRACE

    LBRACE  shift, and go to state 126


State 97

   22 FormalList: Type id .
   23           | Type id . COMMA FormalList

    COMMA  shift, and go to state 127

    $default  reduce using rule 22 (FormalList)


State 98

   42 LeftValue: LPARENTH NEW id . LPARENTH RPARENTH RPARENTH DOT id
   43          | NEW id . LPARENTH RPARENTH DOT id
   59 ExpOp: NEW id . LBRACE RPARENTH

    LBRACE    shift, and go to state 101
    LPARENTH  shift, and go to state 128


State 99

   53 ExpOp: LPARENTH Exp RPARENTH .

    $default  reduce using rule 53 (ExpOp)


State 100

   46 Index: Index . LBRACK Exp RBRACK
   60 ExpOp: NEW PRIMETYPE Index .

    LBRACK  shift, and go to state 110

    $default  reduce using rule 60 (ExpOp)


State 101

   59 ExpOp: NEW id LBRACE . RPARENTH

    RPARENTH  shift, and go to state 129


State 102

   43 LeftValue: NEW id LPARENTH . RPARENTH DOT id

    RPARENTH  shift, and go to state 130


State 103

   44 LeftValue: THIS DOT id .

    $default  reduce using rule 44 (LeftValue)


State 104

   45 Index: LBRACK Exp . RBRACK

    RBRACK  shift, and go to state 131


State 105

   38 MethodCall: LeftValue LPARENTH RPARENTH .

    $default  reduce using rule 38 (MethodCall)


State 106

   37 MethodCall: LeftValue LPARENTH ExpList . RPARENTH

    RPARENTH  shift, and go to state 132


State 107

   47 ExpList: Exp .
   48        | Exp . COMMA Exp

    COMMA  shift, and go to state 133

    $default  reduce using rule 47 (ExpList)


State 108

   62 ExpOp: LeftValue DOT LENGTH .

    $default  reduce using rule 62 (ExpOp)


State 109

   41 LeftValue: LeftValue DOT id .

    $default  reduce using rule 41 (LeftValue)


State 110

   46 Index: Index LBRACK . Exp RBRACK

    PLUS             shift, and go to state 48
    MINUS            shift, and go to state 49
    LPARENTH         shift, and go to state 50
    STRING_LITERAL   shift, and go to state 51
    WORD             shift, and go to state 4
    NOT              shift, and go to state 52
    TRUE             shift, and go to state 53
    FALSE            shift, and go to state 54
    NEW              shift, and go to state 55
    THIS             shift, and go to state 56
    INTEGER_LITERAL  shift, and go to state 57

    $default  reduce using rule 49 (ExpOp)

    MethodCall  go to state 58
    LeftValue   go to state 59
    ExpOp       go to state 60
    Exp         go to state 134
    id          go to state 62


State 111

   63 Exp: ExpOp op Exp .

    $default  reduce using rule 63 (Exp)


State 112

   29 Statement: LBRACE . StatementList RBRACE

    LBRACE     shift, and go to state 112
    LPARENTH   shift, and go to state 113
    WORD       shift, and go to state 4
    IF         shift, and go to state 114
    WHILE      shift, and go to state 115
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 116
    PRINTLN    shift, and go to state 117
    NEW        shift, and go to state 118
    THIS       shift, and go to state 56
    RETURN     shift, and go to state 119

    $default  reduce using rule 27 (StatementList)

    VarDecl        go to state 120
    Type           go to state 24
    StatementList  go to state 135
    Statement      go to state 122
    MethodCall     go to state 123
    LeftValue      go to state 124
    id             go to state 62


State 113

   42 LeftValue: LPARENTH . NEW id LPARENTH RPARENTH RPARENTH DOT id

    NEW  shift, and go to state 136


State 114

   30 Statement: IF . LPARENTH Exp RPARENTH Statement

    LPARENTH  shift, and go to state 137


State 115

   31 Statement: WHILE . LPARENTH Exp RPARENTH Statement

    LPARENTH  shift, and go to state 138


State 116

   33 Statement: PRINT . LPARENTH Exp RPARENTH SEMICOLON

    LPARENTH  shift, and go to state 139


State 117

   32 Statement: PRINTLN . LPARENTH Exp RPARENTH SEMICOLON

    LPARENTH  shift, and go to state 140


State 118

   43 LeftValue: NEW . id LPARENTH RPARENTH DOT id

    WORD  shift, and go to state 4

    id  go to state 141


State 119

   35 Statement: RETURN . Exp SEMICOLON

    PLUS             shift, and go to state 48
    MINUS            shift, and go to state 49
    LPARENTH         shift, and go to state 50
    STRING_LITERAL   shift, and go to state 51
    WORD             shift, and go to state 4
    NOT              shift, and go to state 52
    TRUE             shift, and go to state 53
    FALSE            shift, and go to state 54
    NEW              shift, and go to state 55
    THIS             shift, and go to state 56
    INTEGER_LITERAL  shift, and go to state 57

    $default  reduce using rule 49 (ExpOp)

    MethodCall  go to state 58
    LeftValue   go to state 59
    ExpOp       go to state 60
    Exp         go to state 142
    id          go to state 62


State 120

   28 Statement: VarDecl .

    $default  reduce using rule 28 (Statement)


State 121

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE LBRACK RBRACK id RPARENTH LBRACE StatementList . RBRACE RBRACE

    RBRACE  shift, and go to state 143


State 122

   26 StatementList: Statement . StatementList

    LBRACE     shift, and go to state 112
    LPARENTH   shift, and go to state 113
    WORD       shift, and go to state 4
    IF         shift, and go to state 114
    WHILE      shift, and go to state 115
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 116
    PRINTLN    shift, and go to state 117
    NEW        shift, and go to state 118
    THIS       shift, and go to state 56
    RETURN     shift, and go to state 119

    $default  reduce using rule 27 (StatementList)

    VarDecl        go to state 120
    Type           go to state 24
    StatementList  go to state 144
    Statement      go to state 122
    MethodCall     go to state 123
    LeftValue      go to state 124
    id             go to state 62


State 123

   36 Statement: MethodCall . SEMICOLON

    SEMICOLON  shift, and go to state 145


State 124

   34 Statement: LeftValue . EQUAL Exp SEMICOLON
   37 MethodCall: LeftValue . LPARENTH ExpList RPARENTH
   38           | LeftValue . LPARENTH RPARENTH
   40 LeftValue: LeftValue . Index
   41          | LeftValue . DOT id

    EQUAL     shift, and go to state 146
    LBRACK    shift, and go to state 78
    LPARENTH  shift, and go to state 79
    DOT       shift, and go to state 147

    Index  go to state 81


State 125

   18 MethodDecl: PUBLIC Type id LPARENTH FormalListMaybe RPARENTH . LBRACE StatementList RBRACE

    LBRACE  shift, and go to state 148


State 126

   19 MethodDecl: Type id LPARENTH FormalListMaybe RPARENTH LBRACE . StatementList RBRACE

    LBRACE     shift, and go to state 112
    LPARENTH   shift, and go to state 113
    WORD       shift, and go to state 4
    IF         shift, and go to state 114
    WHILE      shift, and go to state 115
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 116
    PRINTLN    shift, and go to state 117
    NEW        shift, and go to state 118
    THIS       shift, and go to state 56
    RETURN     shift, and go to state 119

    $default  reduce using rule 27 (StatementList)

    VarDecl        go to state 120
    Type           go to state 24
    StatementList  go to state 149
    Statement      go to state 122
    MethodCall     go to state 123
    LeftValue      go to state 124
    id             go to state 62


State 127

   23 FormalList: Type id COMMA . FormalList

    PRIMETYPE  shift, and go to state 21

    FormalList  go to state 150
    Type        go to state 69


State 128

   42 LeftValue: LPARENTH NEW id LPARENTH . RPARENTH RPARENTH DOT id
   43          | NEW id LPARENTH . RPARENTH DOT id

    RPARENTH  shift, and go to state 151


State 129

   59 ExpOp: NEW id LBRACE RPARENTH .

    $default  reduce using rule 59 (ExpOp)


State 130

   43 LeftValue: NEW id LPARENTH RPARENTH . DOT id

    DOT  shift, and go to state 152


State 131

   45 Index: LBRACK Exp RBRACK .

    $default  reduce using rule 45 (Index)


State 132

   37 MethodCall: LeftValue LPARENTH ExpList RPARENTH .

    $default  reduce using rule 37 (MethodCall)


State 133

   48 ExpList: Exp COMMA . Exp

    PLUS             shift, and go to state 48
    MINUS            shift, and go to state 49
    LPARENTH         shift, and go to state 50
    STRING_LITERAL   shift, and go to state 51
    WORD             shift, and go to state 4
    NOT              shift, and go to state 52
    TRUE             shift, and go to state 53
    FALSE            shift, and go to state 54
    NEW              shift, and go to state 55
    THIS             shift, and go to state 56
    INTEGER_LITERAL  shift, and go to state 57

    $default  reduce using rule 49 (ExpOp)

    MethodCall  go to state 58
    LeftValue   go to state 59
    ExpOp       go to state 60
    Exp         go to state 153
    id          go to state 62


State 134

   46 Index: Index LBRACK Exp . RBRACK

    RBRACK  shift, and go to state 154


State 135

   29 Statement: LBRACE StatementList . RBRACE

    RBRACE  shift, and go to state 155


State 136

   42 LeftValue: LPARENTH NEW . id LPARENTH RPARENTH RPARENTH DOT id

    WORD  shift, and go to state 4

    id  go to state 156


State 137

   30 Statement: IF LPARENTH . Exp RPARENTH Statement

    PLUS             shift, and go to state 48
    MINUS            shift, and go to state 49
    LPARENTH         shift, and go to state 50
    STRING_LITERAL   shift, and go to state 51
    WORD             shift, and go to state 4
    NOT              shift, and go to state 52
    TRUE             shift, and go to state 53
    FALSE            shift, and go to state 54
    NEW              shift, and go to state 55
    THIS             shift, and go to state 56
    INTEGER_LITERAL  shift, and go to state 57

    $default  reduce using rule 49 (ExpOp)

    MethodCall  go to state 58
    LeftValue   go to state 59
    ExpOp       go to state 60
    Exp         go to state 157
    id          go to state 62


State 138

   31 Statement: WHILE LPARENTH . Exp RPARENTH Statement

    PLUS             shift, and go to state 48
    MINUS            shift, and go to state 49
    LPARENTH         shift, and go to state 50
    STRING_LITERAL   shift, and go to state 51
    WORD             shift, and go to state 4
    NOT              shift, and go to state 52
    TRUE             shift, and go to state 53
    FALSE            shift, and go to state 54
    NEW              shift, and go to state 55
    THIS             shift, and go to state 56
    INTEGER_LITERAL  shift, and go to state 57

    $default  reduce using rule 49 (ExpOp)

    MethodCall  go to state 58
    LeftValue   go to state 59
    ExpOp       go to state 60
    Exp         go to state 158
    id          go to state 62


State 139

   33 Statement: PRINT LPARENTH . Exp RPARENTH SEMICOLON

    PLUS             shift, and go to state 48
    MINUS            shift, and go to state 49
    LPARENTH         shift, and go to state 50
    STRING_LITERAL   shift, and go to state 51
    WORD             shift, and go to state 4
    NOT              shift, and go to state 52
    TRUE             shift, and go to state 53
    FALSE            shift, and go to state 54
    NEW              shift, and go to state 55
    THIS             shift, and go to state 56
    INTEGER_LITERAL  shift, and go to state 57

    $default  reduce using rule 49 (ExpOp)

    MethodCall  go to state 58
    LeftValue   go to state 59
    ExpOp       go to state 60
    Exp         go to state 159
    id          go to state 62


State 140

   32 Statement: PRINTLN LPARENTH . Exp RPARENTH SEMICOLON

    PLUS             shift, and go to state 48
    MINUS            shift, and go to state 49
    LPARENTH         shift, and go to state 50
    STRING_LITERAL   shift, and go to state 51
    WORD             shift, and go to state 4
    NOT              shift, and go to state 52
    TRUE             shift, and go to state 53
    FALSE            shift, and go to state 54
    NEW              shift, and go to state 55
    THIS             shift, and go to state 56
    INTEGER_LITERAL  shift, and go to state 57

    $default  reduce using rule 49 (ExpOp)

    MethodCall  go to state 58
    LeftValue   go to state 59
    ExpOp       go to state 60
    Exp         go to state 160
    id          go to state 62


State 141

   43 LeftValue: NEW id . LPARENTH RPARENTH DOT id

    LPARENTH  shift, and go to state 102


State 142

   35 Statement: RETURN Exp . SEMICOLON

    SEMICOLON  shift, and go to state 161


State 143

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE LBRACK RBRACK id RPARENTH LBRACE StatementList RBRACE . RBRACE

    RBRACE  shift, and go to state 162


State 144

   26 StatementList: Statement StatementList .

    $default  reduce using rule 26 (StatementList)


State 145

   36 Statement: MethodCall SEMICOLON .

    $default  reduce using rule 36 (Statement)


State 146

   34 Statement: LeftValue EQUAL . Exp SEMICOLON

    PLUS             shift, and go to state 48
    MINUS            shift, and go to state 49
    LPARENTH         shift, and go to state 50
    STRING_LITERAL   shift, and go to state 51
    WORD             shift, and go to state 4
    NOT              shift, and go to state 52
    TRUE             shift, and go to state 53
    FALSE            shift, and go to state 54
    NEW              shift, and go to state 55
    THIS             shift, and go to state 56
    INTEGER_LITERAL  shift, and go to state 57

    $default  reduce using rule 49 (ExpOp)

    MethodCall  go to state 58
    LeftValue   go to state 59
    ExpOp       go to state 60
    Exp         go to state 163
    id          go to state 62


State 147

   41 LeftValue: LeftValue DOT . id

    WORD  shift, and go to state 4

    id  go to state 109


State 148

   18 MethodDecl: PUBLIC Type id LPARENTH FormalListMaybe RPARENTH LBRACE . StatementList RBRACE

    LBRACE     shift, and go to state 112
    LPARENTH   shift, and go to state 113
    WORD       shift, and go to state 4
    IF         shift, and go to state 114
    WHILE      shift, and go to state 115
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 116
    PRINTLN    shift, and go to state 117
    NEW        shift, and go to state 118
    THIS       shift, and go to state 56
    RETURN     shift, and go to state 119

    $default  reduce using rule 27 (StatementList)

    VarDecl        go to state 120
    Type           go to state 24
    StatementList  go to state 164
    Statement      go to state 122
    MethodCall     go to state 123
    LeftValue      go to state 124
    id             go to state 62


State 149

   19 MethodDecl: Type id LPARENTH FormalListMaybe RPARENTH LBRACE StatementList . RBRACE

    RBRACE  shift, and go to state 165


State 150

   23 FormalList: Type id COMMA FormalList .

    $default  reduce using rule 23 (FormalList)


State 151

   42 LeftValue: LPARENTH NEW id LPARENTH RPARENTH . RPARENTH DOT id
   43          | NEW id LPARENTH RPARENTH . DOT id

    RPARENTH  shift, and go to state 166
    DOT       shift, and go to state 152


State 152

   43 LeftValue: NEW id LPARENTH RPARENTH DOT . id

    WORD  shift, and go to state 4

    id  go to state 167


State 153

   48 ExpList: Exp COMMA Exp .

    $default  reduce using rule 48 (ExpList)


State 154

   46 Index: Index LBRACK Exp RBRACK .

    $default  reduce using rule 46 (Index)


State 155

   29 Statement: LBRACE StatementList RBRACE .

    $default  reduce using rule 29 (Statement)


State 156

   42 LeftValue: LPARENTH NEW id . LPARENTH RPARENTH RPARENTH DOT id

    LPARENTH  shift, and go to state 168


State 157

   30 Statement: IF LPARENTH Exp . RPARENTH Statement

    RPARENTH  shift, and go to state 169


State 158

   31 Statement: WHILE LPARENTH Exp . RPARENTH Statement

    RPARENTH  shift, and go to state 170


State 159

   33 Statement: PRINT LPARENTH Exp . RPARENTH SEMICOLON

    RPARENTH  shift, and go to state 171


State 160

   32 Statement: PRINTLN LPARENTH Exp . RPARENTH SEMICOLON

    RPARENTH  shift, and go to state 172


State 161

   35 Statement: RETURN Exp SEMICOLON .

    $default  reduce using rule 35 (Statement)


State 162

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE LBRACK RBRACK id RPARENTH LBRACE StatementList RBRACE RBRACE .

    $default  reduce using rule 2 (MainClass)


State 163

   34 Statement: LeftValue EQUAL Exp . SEMICOLON

    SEMICOLON  shift, and go to state 173


State 164

   18 MethodDecl: PUBLIC Type id LPARENTH FormalListMaybe RPARENTH LBRACE StatementList . RBRACE

    RBRACE  shift, and go to state 174


State 165

   19 MethodDecl: Type id LPARENTH FormalListMaybe RPARENTH LBRACE StatementList RBRACE .

    $default  reduce using rule 19 (MethodDecl)


State 166

   42 LeftValue: LPARENTH NEW id LPARENTH RPARENTH RPARENTH . DOT id

    DOT  shift, and go to state 175


State 167

   43 LeftValue: NEW id LPARENTH RPARENTH DOT id .

    $default  reduce using rule 43 (LeftValue)


State 168

   42 LeftValue: LPARENTH NEW id LPARENTH . RPARENTH RPARENTH DOT id

    RPARENTH  shift, and go to state 176


State 169

   30 Statement: IF LPARENTH Exp RPARENTH . Statement

    LBRACE     shift, and go to state 112
    LPARENTH   shift, and go to state 113
    WORD       shift, and go to state 4
    IF         shift, and go to state 114
    WHILE      shift, and go to state 115
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 116
    PRINTLN    shift, and go to state 117
    NEW        shift, and go to state 118
    THIS       shift, and go to state 56
    RETURN     shift, and go to state 119

    VarDecl     go to state 120
    Type        go to state 24
    Statement   go to state 177
    MethodCall  go to state 123
    LeftValue   go to state 124
    id          go to state 62


State 170

   31 Statement: WHILE LPARENTH Exp RPARENTH . Statement

    LBRACE     shift, and go to state 112
    LPARENTH   shift, and go to state 113
    WORD       shift, and go to state 4
    IF         shift, and go to state 114
    WHILE      shift, and go to state 115
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 116
    PRINTLN    shift, and go to state 117
    NEW        shift, and go to state 118
    THIS       shift, and go to state 56
    RETURN     shift, and go to state 119

    VarDecl     go to state 120
    Type        go to state 24
    Statement   go to state 178
    MethodCall  go to state 123
    LeftValue   go to state 124
    id          go to state 62


State 171

   33 Statement: PRINT LPARENTH Exp RPARENTH . SEMICOLON

    SEMICOLON  shift, and go to state 179


State 172

   32 Statement: PRINTLN LPARENTH Exp RPARENTH . SEMICOLON

    SEMICOLON  shift, and go to state 180


State 173

   34 Statement: LeftValue EQUAL Exp SEMICOLON .

    $default  reduce using rule 34 (Statement)


State 174

   18 MethodDecl: PUBLIC Type id LPARENTH FormalListMaybe RPARENTH LBRACE StatementList RBRACE .

    $default  reduce using rule 18 (MethodDecl)


State 175

   42 LeftValue: LPARENTH NEW id LPARENTH RPARENTH RPARENTH DOT . id

    WORD  shift, and go to state 4

    id  go to state 181


State 176

   42 LeftValue: LPARENTH NEW id LPARENTH RPARENTH . RPARENTH DOT id

    RPARENTH  shift, and go to state 166


State 177

   30 Statement: IF LPARENTH Exp RPARENTH Statement .

    $default  reduce using rule 30 (Statement)


State 178

   31 Statement: WHILE LPARENTH Exp RPARENTH Statement .

    $default  reduce using rule 31 (Statement)


State 179

   33 Statement: PRINT LPARENTH Exp RPARENTH SEMICOLON .

    $default  reduce using rule 33 (Statement)


State 180

   32 Statement: PRINTLN LPARENTH Exp RPARENTH SEMICOLON .

    $default  reduce using rule 32 (Statement)


State 181

   42 LeftValue: LPARENTH NEW id LPARENTH RPARENTH RPARENTH DOT id .

    $default  reduce using rule 42 (LeftValue)
