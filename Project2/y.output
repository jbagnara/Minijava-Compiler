Grammar

    0 $accept: Program $end

    1 Program: MainClass ClassDeclList

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    3 ClassDeclList: ClassDecl ClassDeclList
    4              | %empty

    5 ClassDecl: CLASS id ParentMaybe LBRACE VarMethodDeclList RBRACE

    6 ParentMaybe: Parent
    7            | %empty

    8 Parent: EXTENDS id

    9 VarMethodDeclList: VarOrMethod VarMethodDeclList
   10                  | %empty

   11 VarOrMethod: Decl VarMethodDecl
   12            | PUBLIC Decl MethodDecl

   13 Decl: Type id

   14 VarMethodDecl: VarDecl
   15              | MethodDecl

   16 VarDecl: VarInitList SEMICOLON

   17 VarInitList: VarInit
   18            | VarInit COMMA id VarInitList

   19 VarInit: EQUAL Exp
   20        | %empty

   21 MethodDecl: LPARENTH FormalListMaybe RPARENTH LBRACE StatementList RBRACE

   22 FormalListMaybe: FormalList
   23                | %empty

   24 FormalList: Type id
   25           | Type id COMMA FormalList

   26 Type: PRIMETYPE BracketsList
   27     | id BracketsList

   28 BracketsList: BracketsList BRACKETS
   29             | %empty

   30 StatementList: Statement StatementList
   31              | %empty

   32 Statement: Decl VarDecl
   33          | LBRACE StatementList RBRACE
   34          | IF LPARENTH Exp RPARENTH Statement ELSE Statement
   35          | WHILE LPARENTH Exp RPARENTH Statement
   36          | PRINTLN LPARENTH Exp RPARENTH SEMICOLON
   37          | PRINT LPARENTH Exp RPARENTH SEMICOLON
   38          | LeftValue EQUAL Exp SEMICOLON
   39          | LeftValue2 EQUAL Exp SEMICOLON
   40          | RETURN Exp SEMICOLON
   41          | MethodCall SEMICOLON

   42 MethodCall: LeftValue LPARENTH ExpList RPARENTH
   43           | LeftValue LPARENTH RPARENTH

   44 LeftValue: id
   45          | LeftValue LBRACK Index
   46          | LeftValue DOT id
   47          | NewFunc DOT id
   48          | THIS DOT id

   49 LeftValue2: %empty
   50           | LeftValue2 LBRACK Index
   51           | LeftValue2 DOT id
   52           | LPARENTH NewFunc RPARENTH DOT id

   53 IndexList: IndexList LBRACK Index
   54          | Index

   55 Index: Exp RBRACK

   56 ExpList: Exp
   57        | ExpList COMMA Exp

   58 ExpOp: NOT ExpOp
   59      | LPARENTH Exp RPARENTH
   60      | STRING_LITERAL
   61      | TRUE
   62      | FALSE
   63      | INTEGER_LITERAL
   64      | MethodCall
   65      | NewFunc
   66      | NEW Type LBRACK IndexList
   67      | LeftValue
   68      | LeftValue DOT LENGTH
   69      | PLUS ExpOp
   70      | MINUS ExpOp

   71 NewFunc: NEW id LPARENTH RPARENTH

   72 Exp: Exp op ExpOp
   73    | ExpOp

   74 id: WORD

   75 op: AND
   76   | OR
   77   | LESS
   78   | GREAT
   79   | LESSEQ
   80   | GREATEQ
   81   | EQUIVALENT
   82   | NOTEQUAL
   83   | STAR
   84   | SLASH
   85   | PLUS
   86   | MINUS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AND <num> (258) 75
    OR <num> (259) 76
    LESS <num> (260) 77
    GREAT <num> (261) 78
    LESSEQ <num> (262) 79
    GREATEQ <num> (263) 80
    EQUAL <num> (264) 19 38 39
    NOTEQUAL <num> (265) 82
    PLUS <num> (266) 69 85
    MINUS <num> (267) 70 86
    STAR <num> (268) 83
    SLASH <num> (269) 84
    LBRACK <num> (270) 45 50 53 66
    RBRACK <num> (271) 55
    LBRACE <num> (272) 2 5 21 33
    RBRACE <num> (273) 2 5 21 33
    LPARENTH <num> (274) 2 21 34 35 36 37 42 43 52 59 71
    RPARENTH <num> (275) 2 21 34 35 36 37 42 43 52 59 71
    EXTENDS <num> (276) 8
    HEADER <num> (277) 2
    STRING_LITERAL <num> (278) 60
    CLASS <num> (279) 2 5
    IF <num> (280) 34
    WHILE <num> (281) 35
    NOT <num> (282) 58
    TRUE <num> (283) 61
    FALSE <num> (284) 62
    PRIMETYPE <num> (285) 2 26
    PUBLIC <num> (286) 12
    COMMA <num> (287) 18 25 57
    EQUIVALENT <num> (288) 81
    SEMICOLON <num> (289) 16 36 37 38 39 40 41
    PRINT <num> (290) 37
    PRINTLN <num> (291) 36
    DOT <num> (292) 46 47 48 51 52 68
    NEW <num> (293) 66 71
    THIS <num> (294) 48
    RETURN <num> (295) 40
    INTEGER_LITERAL <num> (296) 63
    LENGTH <num> (297) 68
    ELSE <num> (298) 34
    BRACKETS <num> (299) 2 28
    WORD <str> (300) 74


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    Program (47)
        on left: 1
        on right: 0
    MainClass (48)
        on left: 2
        on right: 1
    ClassDeclList (49)
        on left: 3 4
        on right: 1 3
    ClassDecl (50)
        on left: 5
        on right: 3
    ParentMaybe (51)
        on left: 6 7
        on right: 5
    Parent (52)
        on left: 8
        on right: 6
    VarMethodDeclList (53)
        on left: 9 10
        on right: 5 9
    VarOrMethod (54)
        on left: 11 12
        on right: 9
    Decl (55)
        on left: 13
        on right: 11 12 32
    VarMethodDecl (56)
        on left: 14 15
        on right: 11
    VarDecl (57)
        on left: 16
        on right: 14 32
    VarInitList (58)
        on left: 17 18
        on right: 16 18
    VarInit (59)
        on left: 19 20
        on right: 17 18
    MethodDecl (60)
        on left: 21
        on right: 12 15
    FormalListMaybe (61)
        on left: 22 23
        on right: 21
    FormalList (62)
        on left: 24 25
        on right: 22 25
    Type (63)
        on left: 26 27
        on right: 13 24 25 66
    BracketsList (64)
        on left: 28 29
        on right: 26 27 28
    StatementList (65)
        on left: 30 31
        on right: 2 21 30 33
    Statement (66)
        on left: 32 33 34 35 36 37 38 39 40 41
        on right: 30 34 35
    MethodCall (67)
        on left: 42 43
        on right: 41 64
    LeftValue (68)
        on left: 44 45 46 47 48
        on right: 38 42 43 45 46 67 68
    LeftValue2 (69)
        on left: 49 50 51 52
        on right: 39 50 51
    IndexList (70)
        on left: 53 54
        on right: 53 66
    Index (71)
        on left: 55
        on right: 45 50 53 54
    ExpList (72)
        on left: 56 57
        on right: 42 57
    ExpOp (73)
        on left: 58 59 60 61 62 63 64 65 66 67 68 69 70
        on right: 58 69 70 72 73
    NewFunc (74)
        on left: 71
        on right: 47 52 65
    Exp (75)
        on left: 72 73
        on right: 19 34 35 36 37 38 39 40 55 56 57 59 72
    id <str> (76)
        on left: 74
        on right: 2 5 8 13 18 24 25 27 44 46 47 48 51 52 71
    op (77)
        on left: 75 76 77 78 79 80 81 82 83 84 85 86
        on right: 72


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program    go to state 2
    MainClass  go to state 3


State 1

    2 MainClass: CLASS . id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    WORD  shift, and go to state 4

    id  go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: MainClass . ClassDeclList

    CLASS  shift, and go to state 7

    $default  reduce using rule 4 (ClassDeclList)

    ClassDeclList  go to state 8
    ClassDecl      go to state 9


State 4

   74 id: WORD .

    $default  reduce using rule 74 (id)


State 5

    2 MainClass: CLASS id . LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    LBRACE  shift, and go to state 10


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    5 ClassDecl: CLASS . id ParentMaybe LBRACE VarMethodDeclList RBRACE

    WORD  shift, and go to state 4

    id  go to state 11


State 8

    1 Program: MainClass ClassDeclList .

    $default  reduce using rule 1 (Program)


State 9

    3 ClassDeclList: ClassDecl . ClassDeclList

    CLASS  shift, and go to state 7

    $default  reduce using rule 4 (ClassDeclList)

    ClassDeclList  go to state 12
    ClassDecl      go to state 9


State 10

    2 MainClass: CLASS id LBRACE . HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    HEADER  shift, and go to state 13


State 11

    5 ClassDecl: CLASS id . ParentMaybe LBRACE VarMethodDeclList RBRACE

    EXTENDS  shift, and go to state 14

    $default  reduce using rule 7 (ParentMaybe)

    ParentMaybe  go to state 15
    Parent       go to state 16


State 12

    3 ClassDeclList: ClassDecl ClassDeclList .

    $default  reduce using rule 3 (ClassDeclList)


State 13

    2 MainClass: CLASS id LBRACE HEADER . LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    LPARENTH  shift, and go to state 17


State 14

    8 Parent: EXTENDS . id

    WORD  shift, and go to state 4

    id  go to state 18


State 15

    5 ClassDecl: CLASS id ParentMaybe . LBRACE VarMethodDeclList RBRACE

    LBRACE  shift, and go to state 19


State 16

    6 ParentMaybe: Parent .

    $default  reduce using rule 6 (ParentMaybe)


State 17

    2 MainClass: CLASS id LBRACE HEADER LPARENTH . PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    PRIMETYPE  shift, and go to state 20


State 18

    8 Parent: EXTENDS id .

    $default  reduce using rule 8 (Parent)


State 19

    5 ClassDecl: CLASS id ParentMaybe LBRACE . VarMethodDeclList RBRACE

    PRIMETYPE  shift, and go to state 21
    PUBLIC     shift, and go to state 22
    WORD       shift, and go to state 4

    $default  reduce using rule 10 (VarMethodDeclList)

    VarMethodDeclList  go to state 23
    VarOrMethod        go to state 24
    Decl               go to state 25
    Type               go to state 26
    id                 go to state 27


State 20

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE . BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    BRACKETS  shift, and go to state 28


State 21

   26 Type: PRIMETYPE . BracketsList

    $default  reduce using rule 29 (BracketsList)

    BracketsList  go to state 29


State 22

   12 VarOrMethod: PUBLIC . Decl MethodDecl

    PRIMETYPE  shift, and go to state 21
    WORD       shift, and go to state 4

    Decl  go to state 30
    Type  go to state 26
    id    go to state 27


State 23

    5 ClassDecl: CLASS id ParentMaybe LBRACE VarMethodDeclList . RBRACE

    RBRACE  shift, and go to state 31


State 24

    9 VarMethodDeclList: VarOrMethod . VarMethodDeclList

    PRIMETYPE  shift, and go to state 21
    PUBLIC     shift, and go to state 22
    WORD       shift, and go to state 4

    $default  reduce using rule 10 (VarMethodDeclList)

    VarMethodDeclList  go to state 32
    VarOrMethod        go to state 24
    Decl               go to state 25
    Type               go to state 26
    id                 go to state 27


State 25

   11 VarOrMethod: Decl . VarMethodDecl

    EQUAL     shift, and go to state 33
    LPARENTH  shift, and go to state 34

    $default  reduce using rule 20 (VarInit)

    VarMethodDecl  go to state 35
    VarDecl        go to state 36
    VarInitList    go to state 37
    VarInit        go to state 38
    MethodDecl     go to state 39


State 26

   13 Decl: Type . id

    WORD  shift, and go to state 4

    id  go to state 40


State 27

   27 Type: id . BracketsList

    $default  reduce using rule 29 (BracketsList)

    BracketsList  go to state 41


State 28

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS . id RPARENTH LBRACE StatementList RBRACE RBRACE

    WORD  shift, and go to state 4

    id  go to state 42


State 29

   26 Type: PRIMETYPE BracketsList .
   28 BracketsList: BracketsList . BRACKETS

    BRACKETS  shift, and go to state 43

    $default  reduce using rule 26 (Type)


State 30

   12 VarOrMethod: PUBLIC Decl . MethodDecl

    LPARENTH  shift, and go to state 34

    MethodDecl  go to state 44


State 31

    5 ClassDecl: CLASS id ParentMaybe LBRACE VarMethodDeclList RBRACE .

    $default  reduce using rule 5 (ClassDecl)


State 32

    9 VarMethodDeclList: VarOrMethod VarMethodDeclList .

    $default  reduce using rule 9 (VarMethodDeclList)


State 33

   19 VarInit: EQUAL . Exp

    PLUS             shift, and go to state 45
    MINUS            shift, and go to state 46
    LPARENTH         shift, and go to state 47
    STRING_LITERAL   shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54
    WORD             shift, and go to state 4

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 59
    id          go to state 60


State 34

   21 MethodDecl: LPARENTH . FormalListMaybe RPARENTH LBRACE StatementList RBRACE

    PRIMETYPE  shift, and go to state 21
    WORD       shift, and go to state 4

    $default  reduce using rule 23 (FormalListMaybe)

    FormalListMaybe  go to state 61
    FormalList       go to state 62
    Type             go to state 63
    id               go to state 27


State 35

   11 VarOrMethod: Decl VarMethodDecl .

    $default  reduce using rule 11 (VarOrMethod)


State 36

   14 VarMethodDecl: VarDecl .

    $default  reduce using rule 14 (VarMethodDecl)


State 37

   16 VarDecl: VarInitList . SEMICOLON

    SEMICOLON  shift, and go to state 64


State 38

   17 VarInitList: VarInit .
   18            | VarInit . COMMA id VarInitList

    COMMA  shift, and go to state 65

    $default  reduce using rule 17 (VarInitList)


State 39

   15 VarMethodDecl: MethodDecl .

    $default  reduce using rule 15 (VarMethodDecl)


State 40

   13 Decl: Type id .

    $default  reduce using rule 13 (Decl)


State 41

   27 Type: id BracketsList .
   28 BracketsList: BracketsList . BRACKETS

    BRACKETS  shift, and go to state 43

    $default  reduce using rule 27 (Type)


State 42

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id . RPARENTH LBRACE StatementList RBRACE RBRACE

    RPARENTH  shift, and go to state 66


State 43

   28 BracketsList: BracketsList BRACKETS .

    $default  reduce using rule 28 (BracketsList)


State 44

   12 VarOrMethod: PUBLIC Decl MethodDecl .

    $default  reduce using rule 12 (VarOrMethod)


State 45

   69 ExpOp: PLUS . ExpOp

    PLUS             shift, and go to state 45
    MINUS            shift, and go to state 46
    LPARENTH         shift, and go to state 47
    STRING_LITERAL   shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54
    WORD             shift, and go to state 4

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 67
    NewFunc     go to state 58
    id          go to state 60


State 46

   70 ExpOp: MINUS . ExpOp

    PLUS             shift, and go to state 45
    MINUS            shift, and go to state 46
    LPARENTH         shift, and go to state 47
    STRING_LITERAL   shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54
    WORD             shift, and go to state 4

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 68
    NewFunc     go to state 58
    id          go to state 60


State 47

   59 ExpOp: LPARENTH . Exp RPARENTH

    PLUS             shift, and go to state 45
    MINUS            shift, and go to state 46
    LPARENTH         shift, and go to state 47
    STRING_LITERAL   shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54
    WORD             shift, and go to state 4

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 69
    id          go to state 60


State 48

   60 ExpOp: STRING_LITERAL .

    $default  reduce using rule 60 (ExpOp)


State 49

   58 ExpOp: NOT . ExpOp

    PLUS             shift, and go to state 45
    MINUS            shift, and go to state 46
    LPARENTH         shift, and go to state 47
    STRING_LITERAL   shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54
    WORD             shift, and go to state 4

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 70
    NewFunc     go to state 58
    id          go to state 60


State 50

   61 ExpOp: TRUE .

    $default  reduce using rule 61 (ExpOp)


State 51

   62 ExpOp: FALSE .

    $default  reduce using rule 62 (ExpOp)


State 52

   66 ExpOp: NEW . Type LBRACK IndexList
   71 NewFunc: NEW . id LPARENTH RPARENTH

    PRIMETYPE  shift, and go to state 21
    WORD       shift, and go to state 4

    Type  go to state 71
    id    go to state 72


State 53

   48 LeftValue: THIS . DOT id

    DOT  shift, and go to state 73


State 54

   63 ExpOp: INTEGER_LITERAL .

    $default  reduce using rule 63 (ExpOp)


State 55

   64 ExpOp: MethodCall .

    $default  reduce using rule 64 (ExpOp)


State 56

   42 MethodCall: LeftValue . LPARENTH ExpList RPARENTH
   43           | LeftValue . LPARENTH RPARENTH
   45 LeftValue: LeftValue . LBRACK Index
   46          | LeftValue . DOT id
   67 ExpOp: LeftValue .
   68      | LeftValue . DOT LENGTH

    LBRACK    shift, and go to state 74
    LPARENTH  shift, and go to state 75
    DOT       shift, and go to state 76

    $default  reduce using rule 67 (ExpOp)


State 57

   73 Exp: ExpOp .

    $default  reduce using rule 73 (Exp)


State 58

   47 LeftValue: NewFunc . DOT id
   65 ExpOp: NewFunc .

    DOT  shift, and go to state 77

    $default  reduce using rule 65 (ExpOp)


State 59

   19 VarInit: EQUAL Exp .
   72 Exp: Exp . op ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    EQUIVALENT  shift, and go to state 89

    $default  reduce using rule 19 (VarInit)

    op  go to state 90


State 60

   44 LeftValue: id .

    $default  reduce using rule 44 (LeftValue)


State 61

   21 MethodDecl: LPARENTH FormalListMaybe . RPARENTH LBRACE StatementList RBRACE

    RPARENTH  shift, and go to state 91


State 62

   22 FormalListMaybe: FormalList .

    $default  reduce using rule 22 (FormalListMaybe)


State 63

   24 FormalList: Type . id
   25           | Type . id COMMA FormalList

    WORD  shift, and go to state 4

    id  go to state 92


State 64

   16 VarDecl: VarInitList SEMICOLON .

    $default  reduce using rule 16 (VarDecl)


State 65

   18 VarInitList: VarInit COMMA . id VarInitList

    WORD  shift, and go to state 4

    id  go to state 93


State 66

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH . LBRACE StatementList RBRACE RBRACE

    LBRACE  shift, and go to state 94


State 67

   69 ExpOp: PLUS ExpOp .

    $default  reduce using rule 69 (ExpOp)


State 68

   70 ExpOp: MINUS ExpOp .

    $default  reduce using rule 70 (ExpOp)


State 69

   59 ExpOp: LPARENTH Exp . RPARENTH
   72 Exp: Exp . op ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    RPARENTH    shift, and go to state 95
    EQUIVALENT  shift, and go to state 89

    op  go to state 90


State 70

   58 ExpOp: NOT ExpOp .

    $default  reduce using rule 58 (ExpOp)


State 71

   66 ExpOp: NEW Type . LBRACK IndexList

    LBRACK  shift, and go to state 96


State 72

   27 Type: id . BracketsList
   71 NewFunc: NEW id . LPARENTH RPARENTH

    LPARENTH  shift, and go to state 97

    $default  reduce using rule 29 (BracketsList)

    BracketsList  go to state 41


State 73

   48 LeftValue: THIS DOT . id

    WORD  shift, and go to state 4

    id  go to state 98


State 74

   45 LeftValue: LeftValue LBRACK . Index

    PLUS             shift, and go to state 45
    MINUS            shift, and go to state 46
    LPARENTH         shift, and go to state 47
    STRING_LITERAL   shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54
    WORD             shift, and go to state 4

    MethodCall  go to state 55
    LeftValue   go to state 56
    Index       go to state 99
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 100
    id          go to state 60


State 75

   42 MethodCall: LeftValue LPARENTH . ExpList RPARENTH
   43           | LeftValue LPARENTH . RPARENTH

    PLUS             shift, and go to state 45
    MINUS            shift, and go to state 46
    LPARENTH         shift, and go to state 47
    RPARENTH         shift, and go to state 101
    STRING_LITERAL   shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54
    WORD             shift, and go to state 4

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpList     go to state 102
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 103
    id          go to state 60


State 76

   46 LeftValue: LeftValue DOT . id
   68 ExpOp: LeftValue DOT . LENGTH

    LENGTH  shift, and go to state 104
    WORD    shift, and go to state 4

    id  go to state 105


State 77

   47 LeftValue: NewFunc DOT . id

    WORD  shift, and go to state 4

    id  go to state 106


State 78

   75 op: AND .

    $default  reduce using rule 75 (op)


State 79

   76 op: OR .

    $default  reduce using rule 76 (op)


State 80

   77 op: LESS .

    $default  reduce using rule 77 (op)


State 81

   78 op: GREAT .

    $default  reduce using rule 78 (op)


State 82

   79 op: LESSEQ .

    $default  reduce using rule 79 (op)


State 83

   80 op: GREATEQ .

    $default  reduce using rule 80 (op)


State 84

   82 op: NOTEQUAL .

    $default  reduce using rule 82 (op)


State 85

   85 op: PLUS .

    $default  reduce using rule 85 (op)


State 86

   86 op: MINUS .

    $default  reduce using rule 86 (op)


State 87

   83 op: STAR .

    $default  reduce using rule 83 (op)


State 88

   84 op: SLASH .

    $default  reduce using rule 84 (op)


State 89

   81 op: EQUIVALENT .

    $default  reduce using rule 81 (op)


State 90

   72 Exp: Exp op . ExpOp

    PLUS             shift, and go to state 45
    MINUS            shift, and go to state 46
    LPARENTH         shift, and go to state 47
    STRING_LITERAL   shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54
    WORD             shift, and go to state 4

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 107
    NewFunc     go to state 58
    id          go to state 60


State 91

   21 MethodDecl: LPARENTH FormalListMaybe RPARENTH . LBRACE StatementList RBRACE

    LBRACE  shift, and go to state 108


State 92

   24 FormalList: Type id .
   25           | Type id . COMMA FormalList

    COMMA  shift, and go to state 109

    $default  reduce using rule 24 (FormalList)


State 93

   18 VarInitList: VarInit COMMA id . VarInitList

    EQUAL  shift, and go to state 33

    $default  reduce using rule 20 (VarInit)

    VarInitList  go to state 110
    VarInit      go to state 38


State 94

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE . StatementList RBRACE RBRACE

    LBRACE     shift, and go to state 111
    LPARENTH   shift, and go to state 112
    IF         shift, and go to state 113
    WHILE      shift, and go to state 114
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 115
    PRINTLN    shift, and go to state 116
    NEW        shift, and go to state 117
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 118
    WORD       shift, and go to state 4

    RBRACE    reduce using rule 31 (StatementList)
    $default  reduce using rule 49 (LeftValue2)

    Decl           go to state 119
    Type           go to state 26
    StatementList  go to state 120
    Statement      go to state 121
    MethodCall     go to state 122
    LeftValue      go to state 123
    LeftValue2     go to state 124
    NewFunc        go to state 125
    id             go to state 126


State 95

   59 ExpOp: LPARENTH Exp RPARENTH .

    $default  reduce using rule 59 (ExpOp)


State 96

   66 ExpOp: NEW Type LBRACK . IndexList

    PLUS             shift, and go to state 45
    MINUS            shift, and go to state 46
    LPARENTH         shift, and go to state 47
    STRING_LITERAL   shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54
    WORD             shift, and go to state 4

    MethodCall  go to state 55
    LeftValue   go to state 56
    IndexList   go to state 127
    Index       go to state 128
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 100
    id          go to state 60


State 97

   71 NewFunc: NEW id LPARENTH . RPARENTH

    RPARENTH  shift, and go to state 129


State 98

   48 LeftValue: THIS DOT id .

    $default  reduce using rule 48 (LeftValue)


State 99

   45 LeftValue: LeftValue LBRACK Index .

    $default  reduce using rule 45 (LeftValue)


State 100

   55 Index: Exp . RBRACK
   72 Exp: Exp . op ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    RBRACK      shift, and go to state 130
    EQUIVALENT  shift, and go to state 89

    op  go to state 90


State 101

   43 MethodCall: LeftValue LPARENTH RPARENTH .

    $default  reduce using rule 43 (MethodCall)


State 102

   42 MethodCall: LeftValue LPARENTH ExpList . RPARENTH
   57 ExpList: ExpList . COMMA Exp

    RPARENTH  shift, and go to state 131
    COMMA     shift, and go to state 132


State 103

   56 ExpList: Exp .
   72 Exp: Exp . op ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    EQUIVALENT  shift, and go to state 89

    $default  reduce using rule 56 (ExpList)

    op  go to state 90


State 104

   68 ExpOp: LeftValue DOT LENGTH .

    $default  reduce using rule 68 (ExpOp)


State 105

   46 LeftValue: LeftValue DOT id .

    $default  reduce using rule 46 (LeftValue)


State 106

   47 LeftValue: NewFunc DOT id .

    $default  reduce using rule 47 (LeftValue)


State 107

   72 Exp: Exp op ExpOp .

    $default  reduce using rule 72 (Exp)


State 108

   21 MethodDecl: LPARENTH FormalListMaybe RPARENTH LBRACE . StatementList RBRACE

    LBRACE     shift, and go to state 111
    LPARENTH   shift, and go to state 112
    IF         shift, and go to state 113
    WHILE      shift, and go to state 114
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 115
    PRINTLN    shift, and go to state 116
    NEW        shift, and go to state 117
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 118
    WORD       shift, and go to state 4

    RBRACE    reduce using rule 31 (StatementList)
    $default  reduce using rule 49 (LeftValue2)

    Decl           go to state 119
    Type           go to state 26
    StatementList  go to state 133
    Statement      go to state 121
    MethodCall     go to state 122
    LeftValue      go to state 123
    LeftValue2     go to state 124
    NewFunc        go to state 125
    id             go to state 126


State 109

   25 FormalList: Type id COMMA . FormalList

    PRIMETYPE  shift, and go to state 21
    WORD       shift, and go to state 4

    FormalList  go to state 134
    Type        go to state 63
    id          go to state 27


State 110

   18 VarInitList: VarInit COMMA id VarInitList .

    $default  reduce using rule 18 (VarInitList)


State 111

   33 Statement: LBRACE . StatementList RBRACE

    LBRACE     shift, and go to state 111
    LPARENTH   shift, and go to state 112
    IF         shift, and go to state 113
    WHILE      shift, and go to state 114
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 115
    PRINTLN    shift, and go to state 116
    NEW        shift, and go to state 117
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 118
    WORD       shift, and go to state 4

    RBRACE    reduce using rule 31 (StatementList)
    $default  reduce using rule 49 (LeftValue2)

    Decl           go to state 119
    Type           go to state 26
    StatementList  go to state 135
    Statement      go to state 121
    MethodCall     go to state 122
    LeftValue      go to state 123
    LeftValue2     go to state 124
    NewFunc        go to state 125
    id             go to state 126


State 112

   52 LeftValue2: LPARENTH . NewFunc RPARENTH DOT id

    NEW  shift, and go to state 117

    NewFunc  go to state 136


State 113

   34 Statement: IF . LPARENTH Exp RPARENTH Statement ELSE Statement

    LPARENTH  shift, and go to state 137


State 114

   35 Statement: WHILE . LPARENTH Exp RPARENTH Statement

    LPARENTH  shift, and go to state 138


State 115

   37 Statement: PRINT . LPARENTH Exp RPARENTH SEMICOLON

    LPARENTH  shift, and go to state 139


State 116

   36 Statement: PRINTLN . LPARENTH Exp RPARENTH SEMICOLON

    LPARENTH  shift, and go to state 140


State 117

   71 NewFunc: NEW . id LPARENTH RPARENTH

    WORD  shift, and go to state 4

    id  go to state 141


State 118

   40 Statement: RETURN . Exp SEMICOLON

    PLUS             shift, and go to state 45
    MINUS            shift, and go to state 46
    LPARENTH         shift, and go to state 47
    STRING_LITERAL   shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54
    WORD             shift, and go to state 4

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 142
    id          go to state 60


State 119

   32 Statement: Decl . VarDecl

    EQUAL  shift, and go to state 33

    $default  reduce using rule 20 (VarInit)

    VarDecl      go to state 143
    VarInitList  go to state 37
    VarInit      go to state 38


State 120

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList . RBRACE RBRACE

    RBRACE  shift, and go to state 144


State 121

   30 StatementList: Statement . StatementList

    LBRACE     shift, and go to state 111
    LPARENTH   shift, and go to state 112
    IF         shift, and go to state 113
    WHILE      shift, and go to state 114
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 115
    PRINTLN    shift, and go to state 116
    NEW        shift, and go to state 117
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 118
    WORD       shift, and go to state 4

    RBRACE    reduce using rule 31 (StatementList)
    $default  reduce using rule 49 (LeftValue2)

    Decl           go to state 119
    Type           go to state 26
    StatementList  go to state 145
    Statement      go to state 121
    MethodCall     go to state 122
    LeftValue      go to state 123
    LeftValue2     go to state 124
    NewFunc        go to state 125
    id             go to state 126


State 122

   41 Statement: MethodCall . SEMICOLON

    SEMICOLON  shift, and go to state 146


State 123

   38 Statement: LeftValue . EQUAL Exp SEMICOLON
   42 MethodCall: LeftValue . LPARENTH ExpList RPARENTH
   43           | LeftValue . LPARENTH RPARENTH
   45 LeftValue: LeftValue . LBRACK Index
   46          | LeftValue . DOT id

    EQUAL     shift, and go to state 147
    LBRACK    shift, and go to state 74
    LPARENTH  shift, and go to state 75
    DOT       shift, and go to state 148


State 124

   39 Statement: LeftValue2 . EQUAL Exp SEMICOLON
   50 LeftValue2: LeftValue2 . LBRACK Index
   51           | LeftValue2 . DOT id

    EQUAL   shift, and go to state 149
    LBRACK  shift, and go to state 150
    DOT     shift, and go to state 151


State 125

   47 LeftValue: NewFunc . DOT id

    DOT  shift, and go to state 77


State 126

   27 Type: id . BracketsList
   44 LeftValue: id .

    BRACKETS  reduce using rule 29 (BracketsList)
    WORD      reduce using rule 29 (BracketsList)
    $default  reduce using rule 44 (LeftValue)

    BracketsList  go to state 41


State 127

   53 IndexList: IndexList . LBRACK Index
   66 ExpOp: NEW Type LBRACK IndexList .

    LBRACK  shift, and go to state 152

    $default  reduce using rule 66 (ExpOp)


State 128

   54 IndexList: Index .

    $default  reduce using rule 54 (IndexList)


State 129

   71 NewFunc: NEW id LPARENTH RPARENTH .

    $default  reduce using rule 71 (NewFunc)


State 130

   55 Index: Exp RBRACK .

    $default  reduce using rule 55 (Index)


State 131

   42 MethodCall: LeftValue LPARENTH ExpList RPARENTH .

    $default  reduce using rule 42 (MethodCall)


State 132

   57 ExpList: ExpList COMMA . Exp

    PLUS             shift, and go to state 45
    MINUS            shift, and go to state 46
    LPARENTH         shift, and go to state 47
    STRING_LITERAL   shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54
    WORD             shift, and go to state 4

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 153
    id          go to state 60


State 133

   21 MethodDecl: LPARENTH FormalListMaybe RPARENTH LBRACE StatementList . RBRACE

    RBRACE  shift, and go to state 154


State 134

   25 FormalList: Type id COMMA FormalList .

    $default  reduce using rule 25 (FormalList)


State 135

   33 Statement: LBRACE StatementList . RBRACE

    RBRACE  shift, and go to state 155


State 136

   52 LeftValue2: LPARENTH NewFunc . RPARENTH DOT id

    RPARENTH  shift, and go to state 156


State 137

   34 Statement: IF LPARENTH . Exp RPARENTH Statement ELSE Statement

    PLUS             shift, and go to state 45
    MINUS            shift, and go to state 46
    LPARENTH         shift, and go to state 47
    STRING_LITERAL   shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54
    WORD             shift, and go to state 4

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 157
    id          go to state 60


State 138

   35 Statement: WHILE LPARENTH . Exp RPARENTH Statement

    PLUS             shift, and go to state 45
    MINUS            shift, and go to state 46
    LPARENTH         shift, and go to state 47
    STRING_LITERAL   shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54
    WORD             shift, and go to state 4

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 158
    id          go to state 60


State 139

   37 Statement: PRINT LPARENTH . Exp RPARENTH SEMICOLON

    PLUS             shift, and go to state 45
    MINUS            shift, and go to state 46
    LPARENTH         shift, and go to state 47
    STRING_LITERAL   shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54
    WORD             shift, and go to state 4

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 159
    id          go to state 60


State 140

   36 Statement: PRINTLN LPARENTH . Exp RPARENTH SEMICOLON

    PLUS             shift, and go to state 45
    MINUS            shift, and go to state 46
    LPARENTH         shift, and go to state 47
    STRING_LITERAL   shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54
    WORD             shift, and go to state 4

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 160
    id          go to state 60


State 141

   71 NewFunc: NEW id . LPARENTH RPARENTH

    LPARENTH  shift, and go to state 97


State 142

   40 Statement: RETURN Exp . SEMICOLON
   72 Exp: Exp . op ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    EQUIVALENT  shift, and go to state 89
    SEMICOLON   shift, and go to state 161

    op  go to state 90


State 143

   32 Statement: Decl VarDecl .

    $default  reduce using rule 32 (Statement)


State 144

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE . RBRACE

    RBRACE  shift, and go to state 162


State 145

   30 StatementList: Statement StatementList .

    $default  reduce using rule 30 (StatementList)


State 146

   41 Statement: MethodCall SEMICOLON .

    $default  reduce using rule 41 (Statement)


State 147

   38 Statement: LeftValue EQUAL . Exp SEMICOLON

    PLUS             shift, and go to state 45
    MINUS            shift, and go to state 46
    LPARENTH         shift, and go to state 47
    STRING_LITERAL   shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54
    WORD             shift, and go to state 4

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 163
    id          go to state 60


State 148

   46 LeftValue: LeftValue DOT . id

    WORD  shift, and go to state 4

    id  go to state 105


State 149

   39 Statement: LeftValue2 EQUAL . Exp SEMICOLON

    PLUS             shift, and go to state 45
    MINUS            shift, and go to state 46
    LPARENTH         shift, and go to state 47
    STRING_LITERAL   shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54
    WORD             shift, and go to state 4

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 164
    id          go to state 60


State 150

   50 LeftValue2: LeftValue2 LBRACK . Index

    PLUS             shift, and go to state 45
    MINUS            shift, and go to state 46
    LPARENTH         shift, and go to state 47
    STRING_LITERAL   shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54
    WORD             shift, and go to state 4

    MethodCall  go to state 55
    LeftValue   go to state 56
    Index       go to state 165
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 100
    id          go to state 60


State 151

   51 LeftValue2: LeftValue2 DOT . id

    WORD  shift, and go to state 4

    id  go to state 166


State 152

   53 IndexList: IndexList LBRACK . Index

    PLUS             shift, and go to state 45
    MINUS            shift, and go to state 46
    LPARENTH         shift, and go to state 47
    STRING_LITERAL   shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54
    WORD             shift, and go to state 4

    MethodCall  go to state 55
    LeftValue   go to state 56
    Index       go to state 167
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 100
    id          go to state 60


State 153

   57 ExpList: ExpList COMMA Exp .
   72 Exp: Exp . op ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    EQUIVALENT  shift, and go to state 89

    $default  reduce using rule 57 (ExpList)

    op  go to state 90


State 154

   21 MethodDecl: LPARENTH FormalListMaybe RPARENTH LBRACE StatementList RBRACE .

    $default  reduce using rule 21 (MethodDecl)


State 155

   33 Statement: LBRACE StatementList RBRACE .

    $default  reduce using rule 33 (Statement)


State 156

   52 LeftValue2: LPARENTH NewFunc RPARENTH . DOT id

    DOT  shift, and go to state 168


State 157

   34 Statement: IF LPARENTH Exp . RPARENTH Statement ELSE Statement
   72 Exp: Exp . op ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    RPARENTH    shift, and go to state 169
    EQUIVALENT  shift, and go to state 89

    op  go to state 90


State 158

   35 Statement: WHILE LPARENTH Exp . RPARENTH Statement
   72 Exp: Exp . op ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    RPARENTH    shift, and go to state 170
    EQUIVALENT  shift, and go to state 89

    op  go to state 90


State 159

   37 Statement: PRINT LPARENTH Exp . RPARENTH SEMICOLON
   72 Exp: Exp . op ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    RPARENTH    shift, and go to state 171
    EQUIVALENT  shift, and go to state 89

    op  go to state 90


State 160

   36 Statement: PRINTLN LPARENTH Exp . RPARENTH SEMICOLON
   72 Exp: Exp . op ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    RPARENTH    shift, and go to state 172
    EQUIVALENT  shift, and go to state 89

    op  go to state 90


State 161

   40 Statement: RETURN Exp SEMICOLON .

    $default  reduce using rule 40 (Statement)


State 162

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE .

    $default  reduce using rule 2 (MainClass)


State 163

   38 Statement: LeftValue EQUAL Exp . SEMICOLON
   72 Exp: Exp . op ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    EQUIVALENT  shift, and go to state 89
    SEMICOLON   shift, and go to state 173

    op  go to state 90


State 164

   39 Statement: LeftValue2 EQUAL Exp . SEMICOLON
   72 Exp: Exp . op ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    EQUIVALENT  shift, and go to state 89
    SEMICOLON   shift, and go to state 174

    op  go to state 90


State 165

   50 LeftValue2: LeftValue2 LBRACK Index .

    $default  reduce using rule 50 (LeftValue2)


State 166

   51 LeftValue2: LeftValue2 DOT id .

    $default  reduce using rule 51 (LeftValue2)


State 167

   53 IndexList: IndexList LBRACK Index .

    $default  reduce using rule 53 (IndexList)


State 168

   52 LeftValue2: LPARENTH NewFunc RPARENTH DOT . id

    WORD  shift, and go to state 4

    id  go to state 175


State 169

   34 Statement: IF LPARENTH Exp RPARENTH . Statement ELSE Statement

    LBRACE     shift, and go to state 111
    LPARENTH   shift, and go to state 112
    IF         shift, and go to state 113
    WHILE      shift, and go to state 114
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 115
    PRINTLN    shift, and go to state 116
    NEW        shift, and go to state 117
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 118
    WORD       shift, and go to state 4

    $default  reduce using rule 49 (LeftValue2)

    Decl        go to state 119
    Type        go to state 26
    Statement   go to state 176
    MethodCall  go to state 122
    LeftValue   go to state 123
    LeftValue2  go to state 124
    NewFunc     go to state 125
    id          go to state 126


State 170

   35 Statement: WHILE LPARENTH Exp RPARENTH . Statement

    LBRACE     shift, and go to state 111
    LPARENTH   shift, and go to state 112
    IF         shift, and go to state 113
    WHILE      shift, and go to state 114
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 115
    PRINTLN    shift, and go to state 116
    NEW        shift, and go to state 117
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 118
    WORD       shift, and go to state 4

    $default  reduce using rule 49 (LeftValue2)

    Decl        go to state 119
    Type        go to state 26
    Statement   go to state 177
    MethodCall  go to state 122
    LeftValue   go to state 123
    LeftValue2  go to state 124
    NewFunc     go to state 125
    id          go to state 126


State 171

   37 Statement: PRINT LPARENTH Exp RPARENTH . SEMICOLON

    SEMICOLON  shift, and go to state 178


State 172

   36 Statement: PRINTLN LPARENTH Exp RPARENTH . SEMICOLON

    SEMICOLON  shift, and go to state 179


State 173

   38 Statement: LeftValue EQUAL Exp SEMICOLON .

    $default  reduce using rule 38 (Statement)


State 174

   39 Statement: LeftValue2 EQUAL Exp SEMICOLON .

    $default  reduce using rule 39 (Statement)


State 175

   52 LeftValue2: LPARENTH NewFunc RPARENTH DOT id .

    $default  reduce using rule 52 (LeftValue2)


State 176

   34 Statement: IF LPARENTH Exp RPARENTH Statement . ELSE Statement

    ELSE  shift, and go to state 180


State 177

   35 Statement: WHILE LPARENTH Exp RPARENTH Statement .

    $default  reduce using rule 35 (Statement)


State 178

   37 Statement: PRINT LPARENTH Exp RPARENTH SEMICOLON .

    $default  reduce using rule 37 (Statement)


State 179

   36 Statement: PRINTLN LPARENTH Exp RPARENTH SEMICOLON .

    $default  reduce using rule 36 (Statement)


State 180

   34 Statement: IF LPARENTH Exp RPARENTH Statement ELSE . Statement

    LBRACE     shift, and go to state 111
    LPARENTH   shift, and go to state 112
    IF         shift, and go to state 113
    WHILE      shift, and go to state 114
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 115
    PRINTLN    shift, and go to state 116
    NEW        shift, and go to state 117
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 118
    WORD       shift, and go to state 4

    $default  reduce using rule 49 (LeftValue2)

    Decl        go to state 119
    Type        go to state 26
    Statement   go to state 181
    MethodCall  go to state 122
    LeftValue   go to state 123
    LeftValue2  go to state 124
    NewFunc     go to state 125
    id          go to state 126


State 181

   34 Statement: IF LPARENTH Exp RPARENTH Statement ELSE Statement .

    $default  reduce using rule 34 (Statement)
