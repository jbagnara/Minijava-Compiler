Grammar

    0 $accept: Program $end

    1 Program: MainClass ClassDeclList

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    3 ClassDeclList: ClassDecl ClassDeclList
    4              | %empty

    5 ClassDecl: CLASS WORD ParentMaybe LBRACE VarMethodDeclList RBRACE

    6 ParentMaybe: Parent
    7            | %empty

    8 Parent: EXTENDS id

    9 VarMethodDeclList: VarOrMethod VarMethodDeclList
   10                  | %empty

   11 VarOrMethod: Type WORD VarMethodDecl
   12            | PUBLIC Type WORD MethodDecl

   13 VarMethodDecl: VarDecl
   14              | MethodDecl

   15 VarDecl: VarInitList SEMICOLON

   16 VarInitList: VarInit
   17            | VarInit COMMA WORD VarInitList

   18 VarInit: EQUAL Exp
   19        | %empty

   20 MethodDecl: LPARENTH FormalListMaybe RPARENTH LBRACE StatementList RBRACE

   21 FormalListMaybe: FormalList
   22                | %empty

   23 FormalList: Type WORD
   24           | Type WORD COMMA FormalList

   25 Type: PRIMETYPE BracketsList
   26     | id BracketsList

   27 BracketsList: BracketsList BRACKETS
   28             | %empty

   29 StatementList: Statement StatementList
   30              | %empty

   31 Statement: Type WORD VarDecl
   32          | LBRACE StatementList RBRACE
   33          | IF LPARENTH Exp RPARENTH Statement ELSE Statement
   34          | WHILE LPARENTH Exp RPARENTH Statement
   35          | PRINTLN LPARENTH Exp RPARENTH SEMICOLON
   36          | PRINT LPARENTH Exp RPARENTH SEMICOLON
   37          | LeftValue EQUAL Exp SEMICOLON
   38          | LeftValue2 EQUAL Exp SEMICOLON
   39          | RETURN Exp SEMICOLON
   40          | MethodCall SEMICOLON

   41 MethodCall: LeftValue LPARENTH ExpList RPARENTH
   42           | LeftValue LPARENTH RPARENTH

   43 LeftValue: WORD
   44          | LeftValue LBRACK Index
   45          | LeftValue DOT WORD
   46          | NewFunc DOT WORD
   47          | THIS DOT WORD

   48 NewFunc: NEW WORD LPARENTH RPARENTH

   49 LeftValue2: LeftValue2 LBRACK Index
   50           | LeftValue2 DOT id
   51           | LPARENTH NewFunc RPARENTH DOT id

   52 IndexList: Index LBRACK IndexList
   53          | Index

   54 Index: Exp RBRACK

   55 ExpList: Exp
   56        | Exp COMMA ExpList

   57 ExpOp: NOT ExpOp
   58      | LPARENTH Exp RPARENTH
   59      | STRING_LITERAL
   60      | TRUE
   61      | FALSE
   62      | INTEGER_LITERAL
   63      | MethodCall
   64      | NewFunc
   65      | NEW Type LBRACK IndexList
   66      | LeftValue
   67      | LeftValue DOT LENGTH
   68      | MINUS ExpOp
   69      | PLUS ExpOp

   70 ExpP2: ExpP2 STAR ExpOp
   71      | ExpP2 SLASH ExpOp
   72      | ExpOp

   73 ExpP: ExpP PLUS ExpP2
   74     | ExpP MINUS ExpP2
   75     | ExpP2

   76 Exp: Exp AND ExpP
   77    | Exp OR ExpP
   78    | Exp LESS ExpP
   79    | Exp GREAT ExpP
   80    | Exp LESSEQ ExpP
   81    | Exp GREATEQ ExpP
   82    | Exp EQUIVALENT ExpP
   83    | Exp NOTEQUAL ExpP
   84    | ExpP

   85 id: WORD


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AND <num> (258) 76
    OR <num> (259) 77
    LESS <num> (260) 78
    GREAT <num> (261) 79
    LESSEQ <num> (262) 80
    GREATEQ <num> (263) 81
    EQUAL <num> (264) 18 37 38
    NOTEQUAL <num> (265) 83
    PLUS <num> (266) 69 73
    MINUS <num> (267) 68 74
    STAR <num> (268) 70
    SLASH <num> (269) 71
    LBRACK <num> (270) 44 49 52 65
    RBRACK <num> (271) 54
    LBRACE <num> (272) 2 5 20 32
    RBRACE <num> (273) 2 5 20 32
    LPARENTH <num> (274) 2 20 33 34 35 36 41 42 48 51 58
    RPARENTH <num> (275) 2 20 33 34 35 36 41 42 48 51 58
    EXTENDS <num> (276) 8
    HEADER <num> (277) 2
    CLASS <num> (278) 2 5
    IF <num> (279) 33
    WHILE <num> (280) 34
    NOT <num> (281) 57
    TRUE <num> (282) 60
    FALSE <num> (283) 61
    PUBLIC <num> (284) 12
    COMMA <num> (285) 17 24 56
    EQUIVALENT <num> (286) 82
    SEMICOLON <num> (287) 15 35 36 37 38 39 40
    PRINT <num> (288) 36
    PRINTLN <num> (289) 35
    DOT <num> (290) 45 46 47 50 51 67
    NEW <num> (291) 48 65
    THIS <num> (292) 47
    RETURN <num> (293) 39
    LENGTH <num> (294) 67
    ELSE <num> (295) 33
    BRACKETS <num> (296) 2 27
    WORD <str> (297) 5 11 12 17 23 24 31 43 45 46 47 48 85
    STRING_LITERAL <str> (298) 59
    PRIMETYPE <str> (299) 2 25
    INTEGER_LITERAL <num> (300) 62


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    Program <statem> (47)
        on left: 1
        on right: 0
    MainClass <statem> (48)
        on left: 2
        on right: 1
    ClassDeclList <clList> (49)
        on left: 3 4
        on right: 1 3
    ClassDecl <clEntry> (50)
        on left: 5
        on right: 3
    ParentMaybe (51)
        on left: 6 7
        on right: 5
    Parent (52)
        on left: 8
        on right: 6
    VarMethodDeclList <varMethList> (53)
        on left: 9 10
        on right: 5 9
    VarOrMethod <varMethList> (54)
        on left: 11 12
        on right: 9
    VarMethodDecl <varMethList> (55)
        on left: 13 14
        on right: 11
    VarDecl <termList> (56)
        on left: 15
        on right: 13 31
    VarInitList <termList> (57)
        on left: 16 17
        on right: 15 17
    VarInit <termList> (58)
        on left: 18 19
        on right: 16 17
    MethodDecl <methList> (59)
        on left: 20
        on right: 12 14
    FormalListMaybe <termList> (60)
        on left: 21 22
        on right: 20
    FormalList <termList> (61)
        on left: 23 24
        on right: 21 24
    Type <type> (62)
        on left: 25 26
        on right: 11 12 23 24 31 65
    BracketsList <num> (63)
        on left: 27 28
        on right: 25 26 27
    StatementList <statem> (64)
        on left: 29 30
        on right: 2 20 29 32
    Statement <statem> (65)
        on left: 31 32 33 34 35 36 37 38 39 40
        on right: 29 33 34
    MethodCall <strarr> (66)
        on left: 41 42
        on right: 40 63
    LeftValue <strarr> (67)
        on left: 43 44 45 46 47
        on right: 37 41 42 44 45 66 67
    NewFunc <strarr> (68)
        on left: 48
        on right: 46 51 64
    LeftValue2 <strarr> (69)
        on left: 49 50 51
        on right: 38 49 50
    IndexList <numList> (70)
        on left: 52 53
        on right: 52 65
    Index <tree> (71)
        on left: 54
        on right: 44 49 52 53
    ExpList <numList> (72)
        on left: 55 56
        on right: 41 56
    ExpOp <tree> (73)
        on left: 57 58 59 60 61 62 63 64 65 66 67 68 69
        on right: 57 68 69 70 71 72
    ExpP2 <tree> (74)
        on left: 70 71 72
        on right: 70 71 73 74 75
    ExpP <tree> (75)
        on left: 73 74 75
        on right: 73 74 76 77 78 79 80 81 82 83 84
    Exp <tree> (76)
        on left: 76 77 78 79 80 81 82 83 84
        on right: 18 33 34 35 36 37 38 39 54 55 56 58 76 77 78 79 80 81 82 83
    id <term> (77)
        on left: 85
        on right: 2 8 26 50 51


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program    go to state 2
    MainClass  go to state 3


State 1

    2 MainClass: CLASS . id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    WORD  shift, and go to state 4

    id  go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: MainClass . ClassDeclList

    CLASS  shift, and go to state 7

    $default  reduce using rule 4 (ClassDeclList)

    ClassDeclList  go to state 8
    ClassDecl      go to state 9


State 4

   85 id: WORD .

    $default  reduce using rule 85 (id)


State 5

    2 MainClass: CLASS id . LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    LBRACE  shift, and go to state 10


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    5 ClassDecl: CLASS . WORD ParentMaybe LBRACE VarMethodDeclList RBRACE

    WORD  shift, and go to state 11


State 8

    1 Program: MainClass ClassDeclList .

    $default  reduce using rule 1 (Program)


State 9

    3 ClassDeclList: ClassDecl . ClassDeclList

    CLASS  shift, and go to state 7

    $default  reduce using rule 4 (ClassDeclList)

    ClassDeclList  go to state 12
    ClassDecl      go to state 9


State 10

    2 MainClass: CLASS id LBRACE . HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    HEADER  shift, and go to state 13


State 11

    5 ClassDecl: CLASS WORD . ParentMaybe LBRACE VarMethodDeclList RBRACE

    EXTENDS  shift, and go to state 14

    $default  reduce using rule 7 (ParentMaybe)

    ParentMaybe  go to state 15
    Parent       go to state 16


State 12

    3 ClassDeclList: ClassDecl ClassDeclList .

    $default  reduce using rule 3 (ClassDeclList)


State 13

    2 MainClass: CLASS id LBRACE HEADER . LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    LPARENTH  shift, and go to state 17


State 14

    8 Parent: EXTENDS . id

    WORD  shift, and go to state 4

    id  go to state 18


State 15

    5 ClassDecl: CLASS WORD ParentMaybe . LBRACE VarMethodDeclList RBRACE

    LBRACE  shift, and go to state 19


State 16

    6 ParentMaybe: Parent .

    $default  reduce using rule 6 (ParentMaybe)


State 17

    2 MainClass: CLASS id LBRACE HEADER LPARENTH . PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    PRIMETYPE  shift, and go to state 20


State 18

    8 Parent: EXTENDS id .

    $default  reduce using rule 8 (Parent)


State 19

    5 ClassDecl: CLASS WORD ParentMaybe LBRACE . VarMethodDeclList RBRACE

    PUBLIC     shift, and go to state 21
    WORD       shift, and go to state 4
    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 10 (VarMethodDeclList)

    VarMethodDeclList  go to state 23
    VarOrMethod        go to state 24
    Type               go to state 25
    id                 go to state 26


State 20

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE . BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    BRACKETS  shift, and go to state 27


State 21

   12 VarOrMethod: PUBLIC . Type WORD MethodDecl

    WORD       shift, and go to state 4
    PRIMETYPE  shift, and go to state 22

    Type  go to state 28
    id    go to state 26


State 22

   25 Type: PRIMETYPE . BracketsList

    $default  reduce using rule 28 (BracketsList)

    BracketsList  go to state 29


State 23

    5 ClassDecl: CLASS WORD ParentMaybe LBRACE VarMethodDeclList . RBRACE

    RBRACE  shift, and go to state 30


State 24

    9 VarMethodDeclList: VarOrMethod . VarMethodDeclList

    PUBLIC     shift, and go to state 21
    WORD       shift, and go to state 4
    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 10 (VarMethodDeclList)

    VarMethodDeclList  go to state 31
    VarOrMethod        go to state 24
    Type               go to state 25
    id                 go to state 26


State 25

   11 VarOrMethod: Type . WORD VarMethodDecl

    WORD  shift, and go to state 32


State 26

   26 Type: id . BracketsList

    $default  reduce using rule 28 (BracketsList)

    BracketsList  go to state 33


State 27

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS . id RPARENTH LBRACE StatementList RBRACE RBRACE

    WORD  shift, and go to state 4

    id  go to state 34


State 28

   12 VarOrMethod: PUBLIC Type . WORD MethodDecl

    WORD  shift, and go to state 35


State 29

   25 Type: PRIMETYPE BracketsList .
   27 BracketsList: BracketsList . BRACKETS

    BRACKETS  shift, and go to state 36

    $default  reduce using rule 25 (Type)


State 30

    5 ClassDecl: CLASS WORD ParentMaybe LBRACE VarMethodDeclList RBRACE .

    $default  reduce using rule 5 (ClassDecl)


State 31

    9 VarMethodDeclList: VarOrMethod VarMethodDeclList .

    $default  reduce using rule 9 (VarMethodDeclList)


State 32

   11 VarOrMethod: Type WORD . VarMethodDecl

    EQUAL     shift, and go to state 37
    LPARENTH  shift, and go to state 38

    $default  reduce using rule 19 (VarInit)

    VarMethodDecl  go to state 39
    VarDecl        go to state 40
    VarInitList    go to state 41
    VarInit        go to state 42
    MethodDecl     go to state 43


State 33

   26 Type: id BracketsList .
   27 BracketsList: BracketsList . BRACKETS

    BRACKETS  shift, and go to state 36

    $default  reduce using rule 26 (Type)


State 34

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id . RPARENTH LBRACE StatementList RBRACE RBRACE

    RPARENTH  shift, and go to state 44


State 35

   12 VarOrMethod: PUBLIC Type WORD . MethodDecl

    LPARENTH  shift, and go to state 38

    MethodDecl  go to state 45


State 36

   27 BracketsList: BracketsList BRACKETS .

    $default  reduce using rule 27 (BracketsList)


State 37

   18 VarInit: EQUAL . Exp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 62
    Exp         go to state 63


State 38

   20 MethodDecl: LPARENTH . FormalListMaybe RPARENTH LBRACE StatementList RBRACE

    WORD       shift, and go to state 4
    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 22 (FormalListMaybe)

    FormalListMaybe  go to state 64
    FormalList       go to state 65
    Type             go to state 66
    id               go to state 26


State 39

   11 VarOrMethod: Type WORD VarMethodDecl .

    $default  reduce using rule 11 (VarOrMethod)


State 40

   13 VarMethodDecl: VarDecl .

    $default  reduce using rule 13 (VarMethodDecl)


State 41

   15 VarDecl: VarInitList . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 42

   16 VarInitList: VarInit .
   17            | VarInit . COMMA WORD VarInitList

    COMMA  shift, and go to state 68

    $default  reduce using rule 16 (VarInitList)


State 43

   14 VarMethodDecl: MethodDecl .

    $default  reduce using rule 14 (VarMethodDecl)


State 44

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH . LBRACE StatementList RBRACE RBRACE

    LBRACE  shift, and go to state 69


State 45

   12 VarOrMethod: PUBLIC Type WORD MethodDecl .

    $default  reduce using rule 12 (VarOrMethod)


State 46

   69 ExpOp: PLUS . ExpOp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 70


State 47

   68 ExpOp: MINUS . ExpOp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 71


State 48

   58 ExpOp: LPARENTH . Exp RPARENTH

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 62
    Exp         go to state 72


State 49

   57 ExpOp: NOT . ExpOp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 73


State 50

   60 ExpOp: TRUE .

    $default  reduce using rule 60 (ExpOp)


State 51

   61 ExpOp: FALSE .

    $default  reduce using rule 61 (ExpOp)


State 52

   48 NewFunc: NEW . WORD LPARENTH RPARENTH
   65 ExpOp: NEW . Type LBRACK IndexList

    WORD       shift, and go to state 74
    PRIMETYPE  shift, and go to state 22

    Type  go to state 75
    id    go to state 26


State 53

   47 LeftValue: THIS . DOT WORD

    DOT  shift, and go to state 76


State 54

   43 LeftValue: WORD .

    $default  reduce using rule 43 (LeftValue)


State 55

   59 ExpOp: STRING_LITERAL .

    $default  reduce using rule 59 (ExpOp)


State 56

   62 ExpOp: INTEGER_LITERAL .

    $default  reduce using rule 62 (ExpOp)


State 57

   63 ExpOp: MethodCall .

    $default  reduce using rule 63 (ExpOp)


State 58

   41 MethodCall: LeftValue . LPARENTH ExpList RPARENTH
   42           | LeftValue . LPARENTH RPARENTH
   44 LeftValue: LeftValue . LBRACK Index
   45          | LeftValue . DOT WORD
   66 ExpOp: LeftValue .
   67      | LeftValue . DOT LENGTH

    LBRACK    shift, and go to state 77
    LPARENTH  shift, and go to state 78
    DOT       shift, and go to state 79

    $default  reduce using rule 66 (ExpOp)


State 59

   46 LeftValue: NewFunc . DOT WORD
   64 ExpOp: NewFunc .

    DOT  shift, and go to state 80

    $default  reduce using rule 64 (ExpOp)


State 60

   72 ExpP2: ExpOp .

    $default  reduce using rule 72 (ExpP2)


State 61

   70 ExpP2: ExpP2 . STAR ExpOp
   71      | ExpP2 . SLASH ExpOp
   75 ExpP: ExpP2 .

    STAR   shift, and go to state 81
    SLASH  shift, and go to state 82

    $default  reduce using rule 75 (ExpP)


State 62

   73 ExpP: ExpP . PLUS ExpP2
   74     | ExpP . MINUS ExpP2
   84 Exp: ExpP .

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 84 (Exp)


State 63

   18 VarInit: EQUAL Exp .
   76 Exp: Exp . AND ExpP
   77    | Exp . OR ExpP
   78    | Exp . LESS ExpP
   79    | Exp . GREAT ExpP
   80    | Exp . LESSEQ ExpP
   81    | Exp . GREATEQ ExpP
   82    | Exp . EQUIVALENT ExpP
   83    | Exp . NOTEQUAL ExpP

    AND         shift, and go to state 85
    OR          shift, and go to state 86
    LESS        shift, and go to state 87
    GREAT       shift, and go to state 88
    LESSEQ      shift, and go to state 89
    GREATEQ     shift, and go to state 90
    NOTEQUAL    shift, and go to state 91
    EQUIVALENT  shift, and go to state 92

    $default  reduce using rule 18 (VarInit)


State 64

   20 MethodDecl: LPARENTH FormalListMaybe . RPARENTH LBRACE StatementList RBRACE

    RPARENTH  shift, and go to state 93


State 65

   21 FormalListMaybe: FormalList .

    $default  reduce using rule 21 (FormalListMaybe)


State 66

   23 FormalList: Type . WORD
   24           | Type . WORD COMMA FormalList

    WORD  shift, and go to state 94


State 67

   15 VarDecl: VarInitList SEMICOLON .

    $default  reduce using rule 15 (VarDecl)


State 68

   17 VarInitList: VarInit COMMA . WORD VarInitList

    WORD  shift, and go to state 95


State 69

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE . StatementList RBRACE RBRACE

    LBRACE     shift, and go to state 96
    LPARENTH   shift, and go to state 97
    IF         shift, and go to state 98
    WHILE      shift, and go to state 99
    PRINT      shift, and go to state 100
    PRINTLN    shift, and go to state 101
    NEW        shift, and go to state 102
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 103
    WORD       shift, and go to state 104
    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 30 (StatementList)

    Type           go to state 105
    StatementList  go to state 106
    Statement      go to state 107
    MethodCall     go to state 108
    LeftValue      go to state 109
    NewFunc        go to state 110
    LeftValue2     go to state 111
    id             go to state 26


State 70

   69 ExpOp: PLUS ExpOp .

    $default  reduce using rule 69 (ExpOp)


State 71

   68 ExpOp: MINUS ExpOp .

    $default  reduce using rule 68 (ExpOp)


State 72

   58 ExpOp: LPARENTH Exp . RPARENTH
   76 Exp: Exp . AND ExpP
   77    | Exp . OR ExpP
   78    | Exp . LESS ExpP
   79    | Exp . GREAT ExpP
   80    | Exp . LESSEQ ExpP
   81    | Exp . GREATEQ ExpP
   82    | Exp . EQUIVALENT ExpP
   83    | Exp . NOTEQUAL ExpP

    AND         shift, and go to state 85
    OR          shift, and go to state 86
    LESS        shift, and go to state 87
    GREAT       shift, and go to state 88
    LESSEQ      shift, and go to state 89
    GREATEQ     shift, and go to state 90
    NOTEQUAL    shift, and go to state 91
    RPARENTH    shift, and go to state 112
    EQUIVALENT  shift, and go to state 92


State 73

   57 ExpOp: NOT ExpOp .

    $default  reduce using rule 57 (ExpOp)


State 74

   48 NewFunc: NEW WORD . LPARENTH RPARENTH
   85 id: WORD .

    LPARENTH  shift, and go to state 113

    $default  reduce using rule 85 (id)


State 75

   65 ExpOp: NEW Type . LBRACK IndexList

    LBRACK  shift, and go to state 114


State 76

   47 LeftValue: THIS DOT . WORD

    WORD  shift, and go to state 115


State 77

   44 LeftValue: LeftValue LBRACK . Index

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    Index       go to state 116
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 62
    Exp         go to state 117


State 78

   41 MethodCall: LeftValue LPARENTH . ExpList RPARENTH
   42           | LeftValue LPARENTH . RPARENTH

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    RPARENTH         shift, and go to state 118
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpList     go to state 119
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 62
    Exp         go to state 120


State 79

   45 LeftValue: LeftValue DOT . WORD
   67 ExpOp: LeftValue DOT . LENGTH

    LENGTH  shift, and go to state 121
    WORD    shift, and go to state 122


State 80

   46 LeftValue: NewFunc DOT . WORD

    WORD  shift, and go to state 123


State 81

   70 ExpP2: ExpP2 STAR . ExpOp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 124


State 82

   71 ExpP2: ExpP2 SLASH . ExpOp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 125


State 83

   73 ExpP: ExpP PLUS . ExpP2

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 60
    ExpP2       go to state 126


State 84

   74 ExpP: ExpP MINUS . ExpP2

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 60
    ExpP2       go to state 127


State 85

   76 Exp: Exp AND . ExpP

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 128


State 86

   77 Exp: Exp OR . ExpP

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 129


State 87

   78 Exp: Exp LESS . ExpP

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 130


State 88

   79 Exp: Exp GREAT . ExpP

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 131


State 89

   80 Exp: Exp LESSEQ . ExpP

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 132


State 90

   81 Exp: Exp GREATEQ . ExpP

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 133


State 91

   83 Exp: Exp NOTEQUAL . ExpP

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 134


State 92

   82 Exp: Exp EQUIVALENT . ExpP

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 135


State 93

   20 MethodDecl: LPARENTH FormalListMaybe RPARENTH . LBRACE StatementList RBRACE

    LBRACE  shift, and go to state 136


State 94

   23 FormalList: Type WORD .
   24           | Type WORD . COMMA FormalList

    COMMA  shift, and go to state 137

    $default  reduce using rule 23 (FormalList)


State 95

   17 VarInitList: VarInit COMMA WORD . VarInitList

    EQUAL  shift, and go to state 37

    $default  reduce using rule 19 (VarInit)

    VarInitList  go to state 138
    VarInit      go to state 42


State 96

   32 Statement: LBRACE . StatementList RBRACE

    LBRACE     shift, and go to state 96
    LPARENTH   shift, and go to state 97
    IF         shift, and go to state 98
    WHILE      shift, and go to state 99
    PRINT      shift, and go to state 100
    PRINTLN    shift, and go to state 101
    NEW        shift, and go to state 102
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 103
    WORD       shift, and go to state 104
    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 30 (StatementList)

    Type           go to state 105
    StatementList  go to state 139
    Statement      go to state 107
    MethodCall     go to state 108
    LeftValue      go to state 109
    NewFunc        go to state 110
    LeftValue2     go to state 111
    id             go to state 26


State 97

   51 LeftValue2: LPARENTH . NewFunc RPARENTH DOT id

    NEW  shift, and go to state 102

    NewFunc  go to state 140


State 98

   33 Statement: IF . LPARENTH Exp RPARENTH Statement ELSE Statement

    LPARENTH  shift, and go to state 141


State 99

   34 Statement: WHILE . LPARENTH Exp RPARENTH Statement

    LPARENTH  shift, and go to state 142


State 100

   36 Statement: PRINT . LPARENTH Exp RPARENTH SEMICOLON

    LPARENTH  shift, and go to state 143


State 101

   35 Statement: PRINTLN . LPARENTH Exp RPARENTH SEMICOLON

    LPARENTH  shift, and go to state 144


State 102

   48 NewFunc: NEW . WORD LPARENTH RPARENTH

    WORD  shift, and go to state 145


State 103

   39 Statement: RETURN . Exp SEMICOLON

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 62
    Exp         go to state 146


State 104

   43 LeftValue: WORD .
   85 id: WORD .

    BRACKETS  reduce using rule 85 (id)
    WORD      reduce using rule 85 (id)
    $default  reduce using rule 43 (LeftValue)


State 105

   31 Statement: Type . WORD VarDecl

    WORD  shift, and go to state 147


State 106

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList . RBRACE RBRACE

    RBRACE  shift, and go to state 148


State 107

   29 StatementList: Statement . StatementList

    LBRACE     shift, and go to state 96
    LPARENTH   shift, and go to state 97
    IF         shift, and go to state 98
    WHILE      shift, and go to state 99
    PRINT      shift, and go to state 100
    PRINTLN    shift, and go to state 101
    NEW        shift, and go to state 102
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 103
    WORD       shift, and go to state 104
    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 30 (StatementList)

    Type           go to state 105
    StatementList  go to state 149
    Statement      go to state 107
    MethodCall     go to state 108
    LeftValue      go to state 109
    NewFunc        go to state 110
    LeftValue2     go to state 111
    id             go to state 26


State 108

   40 Statement: MethodCall . SEMICOLON

    SEMICOLON  shift, and go to state 150


State 109

   37 Statement: LeftValue . EQUAL Exp SEMICOLON
   41 MethodCall: LeftValue . LPARENTH ExpList RPARENTH
   42           | LeftValue . LPARENTH RPARENTH
   44 LeftValue: LeftValue . LBRACK Index
   45          | LeftValue . DOT WORD

    EQUAL     shift, and go to state 151
    LBRACK    shift, and go to state 77
    LPARENTH  shift, and go to state 78
    DOT       shift, and go to state 152


State 110

   46 LeftValue: NewFunc . DOT WORD

    DOT  shift, and go to state 80


State 111

   38 Statement: LeftValue2 . EQUAL Exp SEMICOLON
   49 LeftValue2: LeftValue2 . LBRACK Index
   50           | LeftValue2 . DOT id

    EQUAL   shift, and go to state 153
    LBRACK  shift, and go to state 154
    DOT     shift, and go to state 155


State 112

   58 ExpOp: LPARENTH Exp RPARENTH .

    $default  reduce using rule 58 (ExpOp)


State 113

   48 NewFunc: NEW WORD LPARENTH . RPARENTH

    RPARENTH  shift, and go to state 156


State 114

   65 ExpOp: NEW Type LBRACK . IndexList

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    IndexList   go to state 157
    Index       go to state 158
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 62
    Exp         go to state 117


State 115

   47 LeftValue: THIS DOT WORD .

    $default  reduce using rule 47 (LeftValue)


State 116

   44 LeftValue: LeftValue LBRACK Index .

    $default  reduce using rule 44 (LeftValue)


State 117

   54 Index: Exp . RBRACK
   76 Exp: Exp . AND ExpP
   77    | Exp . OR ExpP
   78    | Exp . LESS ExpP
   79    | Exp . GREAT ExpP
   80    | Exp . LESSEQ ExpP
   81    | Exp . GREATEQ ExpP
   82    | Exp . EQUIVALENT ExpP
   83    | Exp . NOTEQUAL ExpP

    AND         shift, and go to state 85
    OR          shift, and go to state 86
    LESS        shift, and go to state 87
    GREAT       shift, and go to state 88
    LESSEQ      shift, and go to state 89
    GREATEQ     shift, and go to state 90
    NOTEQUAL    shift, and go to state 91
    RBRACK      shift, and go to state 159
    EQUIVALENT  shift, and go to state 92


State 118

   42 MethodCall: LeftValue LPARENTH RPARENTH .

    $default  reduce using rule 42 (MethodCall)


State 119

   41 MethodCall: LeftValue LPARENTH ExpList . RPARENTH

    RPARENTH  shift, and go to state 160


State 120

   55 ExpList: Exp .
   56        | Exp . COMMA ExpList
   76 Exp: Exp . AND ExpP
   77    | Exp . OR ExpP
   78    | Exp . LESS ExpP
   79    | Exp . GREAT ExpP
   80    | Exp . LESSEQ ExpP
   81    | Exp . GREATEQ ExpP
   82    | Exp . EQUIVALENT ExpP
   83    | Exp . NOTEQUAL ExpP

    AND         shift, and go to state 85
    OR          shift, and go to state 86
    LESS        shift, and go to state 87
    GREAT       shift, and go to state 88
    LESSEQ      shift, and go to state 89
    GREATEQ     shift, and go to state 90
    NOTEQUAL    shift, and go to state 91
    COMMA       shift, and go to state 161
    EQUIVALENT  shift, and go to state 92

    $default  reduce using rule 55 (ExpList)


State 121

   67 ExpOp: LeftValue DOT LENGTH .

    $default  reduce using rule 67 (ExpOp)


State 122

   45 LeftValue: LeftValue DOT WORD .

    $default  reduce using rule 45 (LeftValue)


State 123

   46 LeftValue: NewFunc DOT WORD .

    $default  reduce using rule 46 (LeftValue)


State 124

   70 ExpP2: ExpP2 STAR ExpOp .

    $default  reduce using rule 70 (ExpP2)


State 125

   71 ExpP2: ExpP2 SLASH ExpOp .

    $default  reduce using rule 71 (ExpP2)


State 126

   70 ExpP2: ExpP2 . STAR ExpOp
   71      | ExpP2 . SLASH ExpOp
   73 ExpP: ExpP PLUS ExpP2 .

    STAR   shift, and go to state 81
    SLASH  shift, and go to state 82

    $default  reduce using rule 73 (ExpP)


State 127

   70 ExpP2: ExpP2 . STAR ExpOp
   71      | ExpP2 . SLASH ExpOp
   74 ExpP: ExpP MINUS ExpP2 .

    STAR   shift, and go to state 81
    SLASH  shift, and go to state 82

    $default  reduce using rule 74 (ExpP)


State 128

   73 ExpP: ExpP . PLUS ExpP2
   74     | ExpP . MINUS ExpP2
   76 Exp: Exp AND ExpP .

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 76 (Exp)


State 129

   73 ExpP: ExpP . PLUS ExpP2
   74     | ExpP . MINUS ExpP2
   77 Exp: Exp OR ExpP .

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 77 (Exp)


State 130

   73 ExpP: ExpP . PLUS ExpP2
   74     | ExpP . MINUS ExpP2
   78 Exp: Exp LESS ExpP .

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 78 (Exp)


State 131

   73 ExpP: ExpP . PLUS ExpP2
   74     | ExpP . MINUS ExpP2
   79 Exp: Exp GREAT ExpP .

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 79 (Exp)


State 132

   73 ExpP: ExpP . PLUS ExpP2
   74     | ExpP . MINUS ExpP2
   80 Exp: Exp LESSEQ ExpP .

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 80 (Exp)


State 133

   73 ExpP: ExpP . PLUS ExpP2
   74     | ExpP . MINUS ExpP2
   81 Exp: Exp GREATEQ ExpP .

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 81 (Exp)


State 134

   73 ExpP: ExpP . PLUS ExpP2
   74     | ExpP . MINUS ExpP2
   83 Exp: Exp NOTEQUAL ExpP .

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 83 (Exp)


State 135

   73 ExpP: ExpP . PLUS ExpP2
   74     | ExpP . MINUS ExpP2
   82 Exp: Exp EQUIVALENT ExpP .

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 82 (Exp)


State 136

   20 MethodDecl: LPARENTH FormalListMaybe RPARENTH LBRACE . StatementList RBRACE

    LBRACE     shift, and go to state 96
    LPARENTH   shift, and go to state 97
    IF         shift, and go to state 98
    WHILE      shift, and go to state 99
    PRINT      shift, and go to state 100
    PRINTLN    shift, and go to state 101
    NEW        shift, and go to state 102
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 103
    WORD       shift, and go to state 104
    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 30 (StatementList)

    Type           go to state 105
    StatementList  go to state 162
    Statement      go to state 107
    MethodCall     go to state 108
    LeftValue      go to state 109
    NewFunc        go to state 110
    LeftValue2     go to state 111
    id             go to state 26


State 137

   24 FormalList: Type WORD COMMA . FormalList

    WORD       shift, and go to state 4
    PRIMETYPE  shift, and go to state 22

    FormalList  go to state 163
    Type        go to state 66
    id          go to state 26


State 138

   17 VarInitList: VarInit COMMA WORD VarInitList .

    $default  reduce using rule 17 (VarInitList)


State 139

   32 Statement: LBRACE StatementList . RBRACE

    RBRACE  shift, and go to state 164


State 140

   51 LeftValue2: LPARENTH NewFunc . RPARENTH DOT id

    RPARENTH  shift, and go to state 165


State 141

   33 Statement: IF LPARENTH . Exp RPARENTH Statement ELSE Statement

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 62
    Exp         go to state 166


State 142

   34 Statement: WHILE LPARENTH . Exp RPARENTH Statement

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 62
    Exp         go to state 167


State 143

   36 Statement: PRINT LPARENTH . Exp RPARENTH SEMICOLON

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 62
    Exp         go to state 168


State 144

   35 Statement: PRINTLN LPARENTH . Exp RPARENTH SEMICOLON

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 62
    Exp         go to state 169


State 145

   48 NewFunc: NEW WORD . LPARENTH RPARENTH

    LPARENTH  shift, and go to state 113


State 146

   39 Statement: RETURN Exp . SEMICOLON
   76 Exp: Exp . AND ExpP
   77    | Exp . OR ExpP
   78    | Exp . LESS ExpP
   79    | Exp . GREAT ExpP
   80    | Exp . LESSEQ ExpP
   81    | Exp . GREATEQ ExpP
   82    | Exp . EQUIVALENT ExpP
   83    | Exp . NOTEQUAL ExpP

    AND         shift, and go to state 85
    OR          shift, and go to state 86
    LESS        shift, and go to state 87
    GREAT       shift, and go to state 88
    LESSEQ      shift, and go to state 89
    GREATEQ     shift, and go to state 90
    NOTEQUAL    shift, and go to state 91
    EQUIVALENT  shift, and go to state 92
    SEMICOLON   shift, and go to state 170


State 147

   31 Statement: Type WORD . VarDecl

    EQUAL  shift, and go to state 37

    $default  reduce using rule 19 (VarInit)

    VarDecl      go to state 171
    VarInitList  go to state 41
    VarInit      go to state 42


State 148

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE . RBRACE

    RBRACE  shift, and go to state 172


State 149

   29 StatementList: Statement StatementList .

    $default  reduce using rule 29 (StatementList)


State 150

   40 Statement: MethodCall SEMICOLON .

    $default  reduce using rule 40 (Statement)


State 151

   37 Statement: LeftValue EQUAL . Exp SEMICOLON

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 62
    Exp         go to state 173


State 152

   45 LeftValue: LeftValue DOT . WORD

    WORD  shift, and go to state 122


State 153

   38 Statement: LeftValue2 EQUAL . Exp SEMICOLON

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 62
    Exp         go to state 174


State 154

   49 LeftValue2: LeftValue2 LBRACK . Index

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    Index       go to state 175
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 62
    Exp         go to state 117


State 155

   50 LeftValue2: LeftValue2 DOT . id

    WORD  shift, and go to state 4

    id  go to state 176


State 156

   48 NewFunc: NEW WORD LPARENTH RPARENTH .

    $default  reduce using rule 48 (NewFunc)


State 157

   65 ExpOp: NEW Type LBRACK IndexList .

    $default  reduce using rule 65 (ExpOp)


State 158

   52 IndexList: Index . LBRACK IndexList
   53          | Index .

    LBRACK  shift, and go to state 177

    $default  reduce using rule 53 (IndexList)


State 159

   54 Index: Exp RBRACK .

    $default  reduce using rule 54 (Index)


State 160

   41 MethodCall: LeftValue LPARENTH ExpList RPARENTH .

    $default  reduce using rule 41 (MethodCall)


State 161

   56 ExpList: Exp COMMA . ExpList

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    ExpList     go to state 178
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 62
    Exp         go to state 120


State 162

   20 MethodDecl: LPARENTH FormalListMaybe RPARENTH LBRACE StatementList . RBRACE

    RBRACE  shift, and go to state 179


State 163

   24 FormalList: Type WORD COMMA FormalList .

    $default  reduce using rule 24 (FormalList)


State 164

   32 Statement: LBRACE StatementList RBRACE .

    $default  reduce using rule 32 (Statement)


State 165

   51 LeftValue2: LPARENTH NewFunc RPARENTH . DOT id

    DOT  shift, and go to state 180


State 166

   33 Statement: IF LPARENTH Exp . RPARENTH Statement ELSE Statement
   76 Exp: Exp . AND ExpP
   77    | Exp . OR ExpP
   78    | Exp . LESS ExpP
   79    | Exp . GREAT ExpP
   80    | Exp . LESSEQ ExpP
   81    | Exp . GREATEQ ExpP
   82    | Exp . EQUIVALENT ExpP
   83    | Exp . NOTEQUAL ExpP

    AND         shift, and go to state 85
    OR          shift, and go to state 86
    LESS        shift, and go to state 87
    GREAT       shift, and go to state 88
    LESSEQ      shift, and go to state 89
    GREATEQ     shift, and go to state 90
    NOTEQUAL    shift, and go to state 91
    RPARENTH    shift, and go to state 181
    EQUIVALENT  shift, and go to state 92


State 167

   34 Statement: WHILE LPARENTH Exp . RPARENTH Statement
   76 Exp: Exp . AND ExpP
   77    | Exp . OR ExpP
   78    | Exp . LESS ExpP
   79    | Exp . GREAT ExpP
   80    | Exp . LESSEQ ExpP
   81    | Exp . GREATEQ ExpP
   82    | Exp . EQUIVALENT ExpP
   83    | Exp . NOTEQUAL ExpP

    AND         shift, and go to state 85
    OR          shift, and go to state 86
    LESS        shift, and go to state 87
    GREAT       shift, and go to state 88
    LESSEQ      shift, and go to state 89
    GREATEQ     shift, and go to state 90
    NOTEQUAL    shift, and go to state 91
    RPARENTH    shift, and go to state 182
    EQUIVALENT  shift, and go to state 92


State 168

   36 Statement: PRINT LPARENTH Exp . RPARENTH SEMICOLON
   76 Exp: Exp . AND ExpP
   77    | Exp . OR ExpP
   78    | Exp . LESS ExpP
   79    | Exp . GREAT ExpP
   80    | Exp . LESSEQ ExpP
   81    | Exp . GREATEQ ExpP
   82    | Exp . EQUIVALENT ExpP
   83    | Exp . NOTEQUAL ExpP

    AND         shift, and go to state 85
    OR          shift, and go to state 86
    LESS        shift, and go to state 87
    GREAT       shift, and go to state 88
    LESSEQ      shift, and go to state 89
    GREATEQ     shift, and go to state 90
    NOTEQUAL    shift, and go to state 91
    RPARENTH    shift, and go to state 183
    EQUIVALENT  shift, and go to state 92


State 169

   35 Statement: PRINTLN LPARENTH Exp . RPARENTH SEMICOLON
   76 Exp: Exp . AND ExpP
   77    | Exp . OR ExpP
   78    | Exp . LESS ExpP
   79    | Exp . GREAT ExpP
   80    | Exp . LESSEQ ExpP
   81    | Exp . GREATEQ ExpP
   82    | Exp . EQUIVALENT ExpP
   83    | Exp . NOTEQUAL ExpP

    AND         shift, and go to state 85
    OR          shift, and go to state 86
    LESS        shift, and go to state 87
    GREAT       shift, and go to state 88
    LESSEQ      shift, and go to state 89
    GREATEQ     shift, and go to state 90
    NOTEQUAL    shift, and go to state 91
    RPARENTH    shift, and go to state 184
    EQUIVALENT  shift, and go to state 92


State 170

   39 Statement: RETURN Exp SEMICOLON .

    $default  reduce using rule 39 (Statement)


State 171

   31 Statement: Type WORD VarDecl .

    $default  reduce using rule 31 (Statement)


State 172

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE .

    $default  reduce using rule 2 (MainClass)


State 173

   37 Statement: LeftValue EQUAL Exp . SEMICOLON
   76 Exp: Exp . AND ExpP
   77    | Exp . OR ExpP
   78    | Exp . LESS ExpP
   79    | Exp . GREAT ExpP
   80    | Exp . LESSEQ ExpP
   81    | Exp . GREATEQ ExpP
   82    | Exp . EQUIVALENT ExpP
   83    | Exp . NOTEQUAL ExpP

    AND         shift, and go to state 85
    OR          shift, and go to state 86
    LESS        shift, and go to state 87
    GREAT       shift, and go to state 88
    LESSEQ      shift, and go to state 89
    GREATEQ     shift, and go to state 90
    NOTEQUAL    shift, and go to state 91
    EQUIVALENT  shift, and go to state 92
    SEMICOLON   shift, and go to state 185


State 174

   38 Statement: LeftValue2 EQUAL Exp . SEMICOLON
   76 Exp: Exp . AND ExpP
   77    | Exp . OR ExpP
   78    | Exp . LESS ExpP
   79    | Exp . GREAT ExpP
   80    | Exp . LESSEQ ExpP
   81    | Exp . GREATEQ ExpP
   82    | Exp . EQUIVALENT ExpP
   83    | Exp . NOTEQUAL ExpP

    AND         shift, and go to state 85
    OR          shift, and go to state 86
    LESS        shift, and go to state 87
    GREAT       shift, and go to state 88
    LESSEQ      shift, and go to state 89
    GREATEQ     shift, and go to state 90
    NOTEQUAL    shift, and go to state 91
    EQUIVALENT  shift, and go to state 92
    SEMICOLON   shift, and go to state 186


State 175

   49 LeftValue2: LeftValue2 LBRACK Index .

    $default  reduce using rule 49 (LeftValue2)


State 176

   50 LeftValue2: LeftValue2 DOT id .

    $default  reduce using rule 50 (LeftValue2)


State 177

   52 IndexList: Index LBRACK . IndexList

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 55
    INTEGER_LITERAL  shift, and go to state 56

    MethodCall  go to state 57
    LeftValue   go to state 58
    NewFunc     go to state 59
    IndexList   go to state 187
    Index       go to state 158
    ExpOp       go to state 60
    ExpP2       go to state 61
    ExpP        go to state 62
    Exp         go to state 117


State 178

   56 ExpList: Exp COMMA ExpList .

    $default  reduce using rule 56 (ExpList)


State 179

   20 MethodDecl: LPARENTH FormalListMaybe RPARENTH LBRACE StatementList RBRACE .

    $default  reduce using rule 20 (MethodDecl)


State 180

   51 LeftValue2: LPARENTH NewFunc RPARENTH DOT . id

    WORD  shift, and go to state 4

    id  go to state 188


State 181

   33 Statement: IF LPARENTH Exp RPARENTH . Statement ELSE Statement

    LBRACE     shift, and go to state 96
    LPARENTH   shift, and go to state 97
    IF         shift, and go to state 98
    WHILE      shift, and go to state 99
    PRINT      shift, and go to state 100
    PRINTLN    shift, and go to state 101
    NEW        shift, and go to state 102
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 103
    WORD       shift, and go to state 104
    PRIMETYPE  shift, and go to state 22

    Type        go to state 105
    Statement   go to state 189
    MethodCall  go to state 108
    LeftValue   go to state 109
    NewFunc     go to state 110
    LeftValue2  go to state 111
    id          go to state 26


State 182

   34 Statement: WHILE LPARENTH Exp RPARENTH . Statement

    LBRACE     shift, and go to state 96
    LPARENTH   shift, and go to state 97
    IF         shift, and go to state 98
    WHILE      shift, and go to state 99
    PRINT      shift, and go to state 100
    PRINTLN    shift, and go to state 101
    NEW        shift, and go to state 102
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 103
    WORD       shift, and go to state 104
    PRIMETYPE  shift, and go to state 22

    Type        go to state 105
    Statement   go to state 190
    MethodCall  go to state 108
    LeftValue   go to state 109
    NewFunc     go to state 110
    LeftValue2  go to state 111
    id          go to state 26


State 183

   36 Statement: PRINT LPARENTH Exp RPARENTH . SEMICOLON

    SEMICOLON  shift, and go to state 191


State 184

   35 Statement: PRINTLN LPARENTH Exp RPARENTH . SEMICOLON

    SEMICOLON  shift, and go to state 192


State 185

   37 Statement: LeftValue EQUAL Exp SEMICOLON .

    $default  reduce using rule 37 (Statement)


State 186

   38 Statement: LeftValue2 EQUAL Exp SEMICOLON .

    $default  reduce using rule 38 (Statement)


State 187

   52 IndexList: Index LBRACK IndexList .

    $default  reduce using rule 52 (IndexList)


State 188

   51 LeftValue2: LPARENTH NewFunc RPARENTH DOT id .

    $default  reduce using rule 51 (LeftValue2)


State 189

   33 Statement: IF LPARENTH Exp RPARENTH Statement . ELSE Statement

    ELSE  shift, and go to state 193


State 190

   34 Statement: WHILE LPARENTH Exp RPARENTH Statement .

    $default  reduce using rule 34 (Statement)


State 191

   36 Statement: PRINT LPARENTH Exp RPARENTH SEMICOLON .

    $default  reduce using rule 36 (Statement)


State 192

   35 Statement: PRINTLN LPARENTH Exp RPARENTH SEMICOLON .

    $default  reduce using rule 35 (Statement)


State 193

   33 Statement: IF LPARENTH Exp RPARENTH Statement ELSE . Statement

    LBRACE     shift, and go to state 96
    LPARENTH   shift, and go to state 97
    IF         shift, and go to state 98
    WHILE      shift, and go to state 99
    PRINT      shift, and go to state 100
    PRINTLN    shift, and go to state 101
    NEW        shift, and go to state 102
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 103
    WORD       shift, and go to state 104
    PRIMETYPE  shift, and go to state 22

    Type        go to state 105
    Statement   go to state 194
    MethodCall  go to state 108
    LeftValue   go to state 109
    NewFunc     go to state 110
    LeftValue2  go to state 111
    id          go to state 26


State 194

   33 Statement: IF LPARENTH Exp RPARENTH Statement ELSE Statement .

    $default  reduce using rule 33 (Statement)
