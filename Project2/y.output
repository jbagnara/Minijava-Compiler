Grammar

    0 $accept: Program $end

    1 Program: MainClass ClassDeclList

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    3 ClassDeclList: ClassDecl ClassDeclList
    4              | %empty

    5 ClassDecl: CLASS id ParentMaybe LBRACE VarMethodDeclList RBRACE

    6 ParentMaybe: Parent
    7            | %empty

    8 Parent: EXTENDS id

    9 VarMethodDeclList: VarOrMethod VarMethodDeclList
   10                  | %empty

   11 VarOrMethod: Type WORD VarMethodDecl
   12            | PUBLIC Type WORD MethodDecl

   13 VarMethodDecl: VarDecl
   14              | MethodDecl

   15 VarDecl: VarInitList SEMICOLON

   16 VarInitList: VarInit
   17            | VarInit COMMA WORD VarInitList

   18 VarInit: EQUAL Exp
   19        | %empty

   20 MethodDecl: LPARENTH FormalListMaybe RPARENTH LBRACE StatementList RBRACE

   21 FormalListMaybe: FormalList
   22                | %empty

   23 FormalList: Type id
   24           | Type id COMMA FormalList

   25 Type: PRIMETYPE BracketsList
   26     | id BracketsList

   27 BracketsList: BracketsList BRACKETS
   28             | %empty

   29 StatementList: Statement StatementList
   30              | %empty

   31 Statement: Type WORD VarDecl
   32          | LBRACE StatementList RBRACE
   33          | IF LPARENTH Exp RPARENTH Statement ELSE Statement
   34          | WHILE LPARENTH Exp RPARENTH Statement
   35          | PRINTLN LPARENTH Exp RPARENTH SEMICOLON
   36          | PRINT LPARENTH Exp RPARENTH SEMICOLON
   37          | LeftValue EQUAL Exp SEMICOLON
   38          | LeftValue2 EQUAL Exp SEMICOLON
   39          | RETURN Exp SEMICOLON
   40          | MethodCall SEMICOLON

   41 MethodCall: LeftValue LPARENTH ExpList RPARENTH
   42           | LeftValue LPARENTH RPARENTH

   43 LeftValue: WORD
   44          | LeftValue LBRACK Index
   45          | LeftValue DOT id
   46          | NewFunc DOT id
   47          | THIS DOT id

   48 LeftValue2: LeftValue2 LBRACK Index
   49           | LeftValue2 DOT id
   50           | LPARENTH NewFunc RPARENTH DOT id

   51 IndexList: Index LBRACK IndexList
   52          | Index

   53 Index: Exp RBRACK

   54 ExpList: Exp
   55        | ExpList COMMA Exp

   56 ExpOp: NOT ExpOp
   57      | LPARENTH Exp RPARENTH
   58      | STRING_LITERAL
   59      | TRUE
   60      | FALSE
   61      | INTEGER_LITERAL
   62      | MethodCall
   63      | NewFunc
   64      | NEW Type LBRACK IndexList
   65      | LeftValue
   66      | LeftValue DOT LENGTH

   67 NewFunc: NEW id LPARENTH RPARENTH

   68 ExpP2: ExpP2 AND ExpOp
   69      | ExpP2 OR ExpOp
   70      | ExpP2 LESS ExpOp
   71      | ExpP2 GREAT ExpOp
   72      | ExpP2 LESSEQ ExpOp
   73      | ExpP2 GREATEQ ExpOp
   74      | ExpP2 EQUIVALENT ExpOp
   75      | ExpP2 NOTEQUAL ExpOp
   76      | ExpOp

   77 ExpP: ExpP STAR ExpP2
   78     | ExpP SLASH ExpP2
   79     | ExpP2

   80 Exp: Exp PLUS ExpP
   81    | Exp MINUS ExpP
   82    | ExpP

   83 id: WORD


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AND <num> (258) 68
    OR <num> (259) 69
    LESS <num> (260) 70
    GREAT <num> (261) 71
    LESSEQ <num> (262) 72
    GREATEQ <num> (263) 73
    EQUAL <num> (264) 18 37 38
    NOTEQUAL <num> (265) 75
    PLUS <num> (266) 80
    MINUS <num> (267) 81
    STAR <num> (268) 77
    SLASH <num> (269) 78
    LBRACK <num> (270) 44 48 51 64
    RBRACK <num> (271) 53
    LBRACE <num> (272) 2 5 20 32
    RBRACE <num> (273) 2 5 20 32
    LPARENTH <num> (274) 2 20 33 34 35 36 41 42 50 57 67
    RPARENTH <num> (275) 2 20 33 34 35 36 41 42 50 57 67
    EXTENDS <num> (276) 8
    HEADER <num> (277) 2
    CLASS <num> (278) 2 5
    IF <num> (279) 33
    WHILE <num> (280) 34
    NOT <num> (281) 56
    TRUE <num> (282) 59
    FALSE <num> (283) 60
    PUBLIC <num> (284) 12
    COMMA <num> (285) 17 24 55
    EQUIVALENT <num> (286) 74
    SEMICOLON <num> (287) 15 35 36 37 38 39 40
    PRINT <num> (288) 36
    PRINTLN <num> (289) 35
    DOT <num> (290) 45 46 47 49 50 66
    NEW <num> (291) 64 67
    THIS <num> (292) 47
    RETURN <num> (293) 39
    LENGTH <num> (294) 66
    ELSE <num> (295) 33
    BRACKETS <num> (296) 2 27
    WORD <str> (297) 11 12 17 31 43 83
    STRING_LITERAL <str> (298) 58
    PRIMETYPE <str> (299) 2 25
    INTEGER_LITERAL <num> (300) 61


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    Program (47)
        on left: 1
        on right: 0
    MainClass (48)
        on left: 2
        on right: 1
    ClassDeclList (49)
        on left: 3 4
        on right: 1 3
    ClassDecl (50)
        on left: 5
        on right: 3
    ParentMaybe (51)
        on left: 6 7
        on right: 5
    Parent (52)
        on left: 8
        on right: 6
    VarMethodDeclList (53)
        on left: 9 10
        on right: 5 9
    VarOrMethod <term> (54)
        on left: 11 12
        on right: 9
    VarMethodDecl <termList> (55)
        on left: 13 14
        on right: 11
    VarDecl <termList> (56)
        on left: 15
        on right: 13 31
    VarInitList <termList> (57)
        on left: 16 17
        on right: 15 17
    VarInit <termList> (58)
        on left: 18 19
        on right: 16 17
    MethodDecl <termList> (59)
        on left: 20
        on right: 12 14
    FormalListMaybe (60)
        on left: 21 22
        on right: 20
    FormalList (61)
        on left: 23 24
        on right: 21 24
    Type <type> (62)
        on left: 25 26
        on right: 11 12 23 24 31 64
    BracketsList <num> (63)
        on left: 27 28
        on right: 25 26 27
    StatementList <statem> (64)
        on left: 29 30
        on right: 2 20 29 32
    Statement <statem> (65)
        on left: 31 32 33 34 35 36 37 38 39 40
        on right: 29 33 34
    MethodCall <term> (66)
        on left: 41 42
        on right: 40 62
    LeftValue <strarr> (67)
        on left: 43 44 45 46 47
        on right: 37 41 42 44 45 65 66
    LeftValue2 <strarr> (68)
        on left: 48 49 50
        on right: 38 48 49
    IndexList <numList> (69)
        on left: 51 52
        on right: 51 64
    Index <tree> (70)
        on left: 53
        on right: 44 48 51 52
    ExpList (71)
        on left: 54 55
        on right: 41 55
    ExpOp <tree> (72)
        on left: 56 57 58 59 60 61 62 63 64 65 66
        on right: 56 68 69 70 71 72 73 74 75 76
    NewFunc <term> (73)
        on left: 67
        on right: 46 50 63
    ExpP2 <tree> (74)
        on left: 68 69 70 71 72 73 74 75 76
        on right: 68 69 70 71 72 73 74 75 77 78 79
    ExpP <tree> (75)
        on left: 77 78 79
        on right: 77 78 80 81 82
    Exp <tree> (76)
        on left: 80 81 82
        on right: 18 33 34 35 36 37 38 39 53 54 55 57 80 81
    id <term> (77)
        on left: 83
        on right: 2 5 8 23 24 26 45 46 47 49 50 67


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program    go to state 2
    MainClass  go to state 3


State 1

    2 MainClass: CLASS . id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    WORD  shift, and go to state 4

    id  go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: MainClass . ClassDeclList

    CLASS  shift, and go to state 7

    $default  reduce using rule 4 (ClassDeclList)

    ClassDeclList  go to state 8
    ClassDecl      go to state 9


State 4

   83 id: WORD .

    $default  reduce using rule 83 (id)


State 5

    2 MainClass: CLASS id . LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    LBRACE  shift, and go to state 10


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    5 ClassDecl: CLASS . id ParentMaybe LBRACE VarMethodDeclList RBRACE

    WORD  shift, and go to state 4

    id  go to state 11


State 8

    1 Program: MainClass ClassDeclList .

    $default  reduce using rule 1 (Program)


State 9

    3 ClassDeclList: ClassDecl . ClassDeclList

    CLASS  shift, and go to state 7

    $default  reduce using rule 4 (ClassDeclList)

    ClassDeclList  go to state 12
    ClassDecl      go to state 9


State 10

    2 MainClass: CLASS id LBRACE . HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    HEADER  shift, and go to state 13


State 11

    5 ClassDecl: CLASS id . ParentMaybe LBRACE VarMethodDeclList RBRACE

    EXTENDS  shift, and go to state 14

    $default  reduce using rule 7 (ParentMaybe)

    ParentMaybe  go to state 15
    Parent       go to state 16


State 12

    3 ClassDeclList: ClassDecl ClassDeclList .

    $default  reduce using rule 3 (ClassDeclList)


State 13

    2 MainClass: CLASS id LBRACE HEADER . LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    LPARENTH  shift, and go to state 17


State 14

    8 Parent: EXTENDS . id

    WORD  shift, and go to state 4

    id  go to state 18


State 15

    5 ClassDecl: CLASS id ParentMaybe . LBRACE VarMethodDeclList RBRACE

    LBRACE  shift, and go to state 19


State 16

    6 ParentMaybe: Parent .

    $default  reduce using rule 6 (ParentMaybe)


State 17

    2 MainClass: CLASS id LBRACE HEADER LPARENTH . PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    PRIMETYPE  shift, and go to state 20


State 18

    8 Parent: EXTENDS id .

    $default  reduce using rule 8 (Parent)


State 19

    5 ClassDecl: CLASS id ParentMaybe LBRACE . VarMethodDeclList RBRACE

    PUBLIC     shift, and go to state 21
    WORD       shift, and go to state 4
    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 10 (VarMethodDeclList)

    VarMethodDeclList  go to state 23
    VarOrMethod        go to state 24
    Type               go to state 25
    id                 go to state 26


State 20

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE . BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    BRACKETS  shift, and go to state 27


State 21

   12 VarOrMethod: PUBLIC . Type WORD MethodDecl

    WORD       shift, and go to state 4
    PRIMETYPE  shift, and go to state 22

    Type  go to state 28
    id    go to state 26


State 22

   25 Type: PRIMETYPE . BracketsList

    $default  reduce using rule 28 (BracketsList)

    BracketsList  go to state 29


State 23

    5 ClassDecl: CLASS id ParentMaybe LBRACE VarMethodDeclList . RBRACE

    RBRACE  shift, and go to state 30


State 24

    9 VarMethodDeclList: VarOrMethod . VarMethodDeclList

    PUBLIC     shift, and go to state 21
    WORD       shift, and go to state 4
    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 10 (VarMethodDeclList)

    VarMethodDeclList  go to state 31
    VarOrMethod        go to state 24
    Type               go to state 25
    id                 go to state 26


State 25

   11 VarOrMethod: Type . WORD VarMethodDecl

    WORD  shift, and go to state 32


State 26

   26 Type: id . BracketsList

    $default  reduce using rule 28 (BracketsList)

    BracketsList  go to state 33


State 27

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS . id RPARENTH LBRACE StatementList RBRACE RBRACE

    WORD  shift, and go to state 4

    id  go to state 34


State 28

   12 VarOrMethod: PUBLIC Type . WORD MethodDecl

    WORD  shift, and go to state 35


State 29

   25 Type: PRIMETYPE BracketsList .
   27 BracketsList: BracketsList . BRACKETS

    BRACKETS  shift, and go to state 36

    $default  reduce using rule 25 (Type)


State 30

    5 ClassDecl: CLASS id ParentMaybe LBRACE VarMethodDeclList RBRACE .

    $default  reduce using rule 5 (ClassDecl)


State 31

    9 VarMethodDeclList: VarOrMethod VarMethodDeclList .

    $default  reduce using rule 9 (VarMethodDeclList)


State 32

   11 VarOrMethod: Type WORD . VarMethodDecl

    EQUAL     shift, and go to state 37
    LPARENTH  shift, and go to state 38

    $default  reduce using rule 19 (VarInit)

    VarMethodDecl  go to state 39
    VarDecl        go to state 40
    VarInitList    go to state 41
    VarInit        go to state 42
    MethodDecl     go to state 43


State 33

   26 Type: id BracketsList .
   27 BracketsList: BracketsList . BRACKETS

    BRACKETS  shift, and go to state 36

    $default  reduce using rule 26 (Type)


State 34

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id . RPARENTH LBRACE StatementList RBRACE RBRACE

    RPARENTH  shift, and go to state 44


State 35

   12 VarOrMethod: PUBLIC Type WORD . MethodDecl

    LPARENTH  shift, and go to state 38

    MethodDecl  go to state 45


State 36

   27 BracketsList: BracketsList BRACKETS .

    $default  reduce using rule 27 (BracketsList)


State 37

   18 VarInit: EQUAL . Exp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    ExpP2       go to state 59
    ExpP        go to state 60
    Exp         go to state 61


State 38

   20 MethodDecl: LPARENTH . FormalListMaybe RPARENTH LBRACE StatementList RBRACE

    WORD       shift, and go to state 4
    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 22 (FormalListMaybe)

    FormalListMaybe  go to state 62
    FormalList       go to state 63
    Type             go to state 64
    id               go to state 26


State 39

   11 VarOrMethod: Type WORD VarMethodDecl .

    $default  reduce using rule 11 (VarOrMethod)


State 40

   13 VarMethodDecl: VarDecl .

    $default  reduce using rule 13 (VarMethodDecl)


State 41

   15 VarDecl: VarInitList . SEMICOLON

    SEMICOLON  shift, and go to state 65


State 42

   16 VarInitList: VarInit .
   17            | VarInit . COMMA WORD VarInitList

    COMMA  shift, and go to state 66

    $default  reduce using rule 16 (VarInitList)


State 43

   14 VarMethodDecl: MethodDecl .

    $default  reduce using rule 14 (VarMethodDecl)


State 44

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH . LBRACE StatementList RBRACE RBRACE

    LBRACE  shift, and go to state 67


State 45

   12 VarOrMethod: PUBLIC Type WORD MethodDecl .

    $default  reduce using rule 12 (VarOrMethod)


State 46

   57 ExpOp: LPARENTH . Exp RPARENTH

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    ExpP2       go to state 59
    ExpP        go to state 60
    Exp         go to state 68


State 47

   56 ExpOp: NOT . ExpOp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 69
    NewFunc     go to state 58


State 48

   59 ExpOp: TRUE .

    $default  reduce using rule 59 (ExpOp)


State 49

   60 ExpOp: FALSE .

    $default  reduce using rule 60 (ExpOp)


State 50

   64 ExpOp: NEW . Type LBRACK IndexList
   67 NewFunc: NEW . id LPARENTH RPARENTH

    WORD       shift, and go to state 4
    PRIMETYPE  shift, and go to state 22

    Type  go to state 70
    id    go to state 71


State 51

   47 LeftValue: THIS . DOT id

    DOT  shift, and go to state 72


State 52

   43 LeftValue: WORD .

    $default  reduce using rule 43 (LeftValue)


State 53

   58 ExpOp: STRING_LITERAL .

    $default  reduce using rule 58 (ExpOp)


State 54

   61 ExpOp: INTEGER_LITERAL .

    $default  reduce using rule 61 (ExpOp)


State 55

   62 ExpOp: MethodCall .

    $default  reduce using rule 62 (ExpOp)


State 56

   41 MethodCall: LeftValue . LPARENTH ExpList RPARENTH
   42           | LeftValue . LPARENTH RPARENTH
   44 LeftValue: LeftValue . LBRACK Index
   45          | LeftValue . DOT id
   65 ExpOp: LeftValue .
   66      | LeftValue . DOT LENGTH

    LBRACK    shift, and go to state 73
    LPARENTH  shift, and go to state 74
    DOT       shift, and go to state 75

    $default  reduce using rule 65 (ExpOp)


State 57

   76 ExpP2: ExpOp .

    $default  reduce using rule 76 (ExpP2)


State 58

   46 LeftValue: NewFunc . DOT id
   63 ExpOp: NewFunc .

    DOT  shift, and go to state 76

    $default  reduce using rule 63 (ExpOp)


State 59

   68 ExpP2: ExpP2 . AND ExpOp
   69      | ExpP2 . OR ExpOp
   70      | ExpP2 . LESS ExpOp
   71      | ExpP2 . GREAT ExpOp
   72      | ExpP2 . LESSEQ ExpOp
   73      | ExpP2 . GREATEQ ExpOp
   74      | ExpP2 . EQUIVALENT ExpOp
   75      | ExpP2 . NOTEQUAL ExpOp
   79 ExpP: ExpP2 .

    AND         shift, and go to state 77
    OR          shift, and go to state 78
    LESS        shift, and go to state 79
    GREAT       shift, and go to state 80
    LESSEQ      shift, and go to state 81
    GREATEQ     shift, and go to state 82
    NOTEQUAL    shift, and go to state 83
    EQUIVALENT  shift, and go to state 84

    $default  reduce using rule 79 (ExpP)


State 60

   77 ExpP: ExpP . STAR ExpP2
   78     | ExpP . SLASH ExpP2
   82 Exp: ExpP .

    STAR   shift, and go to state 85
    SLASH  shift, and go to state 86

    $default  reduce using rule 82 (Exp)


State 61

   18 VarInit: EQUAL Exp .
   80 Exp: Exp . PLUS ExpP
   81    | Exp . MINUS ExpP

    PLUS   shift, and go to state 87
    MINUS  shift, and go to state 88

    $default  reduce using rule 18 (VarInit)


State 62

   20 MethodDecl: LPARENTH FormalListMaybe . RPARENTH LBRACE StatementList RBRACE

    RPARENTH  shift, and go to state 89


State 63

   21 FormalListMaybe: FormalList .

    $default  reduce using rule 21 (FormalListMaybe)


State 64

   23 FormalList: Type . id
   24           | Type . id COMMA FormalList

    WORD  shift, and go to state 4

    id  go to state 90


State 65

   15 VarDecl: VarInitList SEMICOLON .

    $default  reduce using rule 15 (VarDecl)


State 66

   17 VarInitList: VarInit COMMA . WORD VarInitList

    WORD  shift, and go to state 91


State 67

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE . StatementList RBRACE RBRACE

    LBRACE     shift, and go to state 92
    LPARENTH   shift, and go to state 93
    IF         shift, and go to state 94
    WHILE      shift, and go to state 95
    PRINT      shift, and go to state 96
    PRINTLN    shift, and go to state 97
    NEW        shift, and go to state 98
    THIS       shift, and go to state 51
    RETURN     shift, and go to state 99
    WORD       shift, and go to state 100
    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 30 (StatementList)

    Type           go to state 101
    StatementList  go to state 102
    Statement      go to state 103
    MethodCall     go to state 104
    LeftValue      go to state 105
    LeftValue2     go to state 106
    NewFunc        go to state 107
    id             go to state 26


State 68

   57 ExpOp: LPARENTH Exp . RPARENTH
   80 Exp: Exp . PLUS ExpP
   81    | Exp . MINUS ExpP

    PLUS      shift, and go to state 87
    MINUS     shift, and go to state 88
    RPARENTH  shift, and go to state 108


State 69

   56 ExpOp: NOT ExpOp .

    $default  reduce using rule 56 (ExpOp)


State 70

   64 ExpOp: NEW Type . LBRACK IndexList

    LBRACK  shift, and go to state 109


State 71

   26 Type: id . BracketsList
   67 NewFunc: NEW id . LPARENTH RPARENTH

    LPARENTH  shift, and go to state 110

    $default  reduce using rule 28 (BracketsList)

    BracketsList  go to state 33


State 72

   47 LeftValue: THIS DOT . id

    WORD  shift, and go to state 4

    id  go to state 111


State 73

   44 LeftValue: LeftValue LBRACK . Index

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    Index       go to state 112
    ExpOp       go to state 57
    NewFunc     go to state 58
    ExpP2       go to state 59
    ExpP        go to state 60
    Exp         go to state 113


State 74

   41 MethodCall: LeftValue LPARENTH . ExpList RPARENTH
   42           | LeftValue LPARENTH . RPARENTH

    LPARENTH         shift, and go to state 46
    RPARENTH         shift, and go to state 114
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpList     go to state 115
    ExpOp       go to state 57
    NewFunc     go to state 58
    ExpP2       go to state 59
    ExpP        go to state 60
    Exp         go to state 116


State 75

   45 LeftValue: LeftValue DOT . id
   66 ExpOp: LeftValue DOT . LENGTH

    LENGTH  shift, and go to state 117
    WORD    shift, and go to state 4

    id  go to state 118


State 76

   46 LeftValue: NewFunc DOT . id

    WORD  shift, and go to state 4

    id  go to state 119


State 77

   68 ExpP2: ExpP2 AND . ExpOp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 120
    NewFunc     go to state 58


State 78

   69 ExpP2: ExpP2 OR . ExpOp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 121
    NewFunc     go to state 58


State 79

   70 ExpP2: ExpP2 LESS . ExpOp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 122
    NewFunc     go to state 58


State 80

   71 ExpP2: ExpP2 GREAT . ExpOp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 123
    NewFunc     go to state 58


State 81

   72 ExpP2: ExpP2 LESSEQ . ExpOp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 124
    NewFunc     go to state 58


State 82

   73 ExpP2: ExpP2 GREATEQ . ExpOp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 125
    NewFunc     go to state 58


State 83

   75 ExpP2: ExpP2 NOTEQUAL . ExpOp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 126
    NewFunc     go to state 58


State 84

   74 ExpP2: ExpP2 EQUIVALENT . ExpOp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 127
    NewFunc     go to state 58


State 85

   77 ExpP: ExpP STAR . ExpP2

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    ExpP2       go to state 128


State 86

   78 ExpP: ExpP SLASH . ExpP2

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    ExpP2       go to state 129


State 87

   80 Exp: Exp PLUS . ExpP

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    ExpP2       go to state 59
    ExpP        go to state 130


State 88

   81 Exp: Exp MINUS . ExpP

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    ExpP2       go to state 59
    ExpP        go to state 131


State 89

   20 MethodDecl: LPARENTH FormalListMaybe RPARENTH . LBRACE StatementList RBRACE

    LBRACE  shift, and go to state 132


State 90

   23 FormalList: Type id .
   24           | Type id . COMMA FormalList

    COMMA  shift, and go to state 133

    $default  reduce using rule 23 (FormalList)


State 91

   17 VarInitList: VarInit COMMA WORD . VarInitList

    EQUAL  shift, and go to state 37

    $default  reduce using rule 19 (VarInit)

    VarInitList  go to state 134
    VarInit      go to state 42


State 92

   32 Statement: LBRACE . StatementList RBRACE

    LBRACE     shift, and go to state 92
    LPARENTH   shift, and go to state 93
    IF         shift, and go to state 94
    WHILE      shift, and go to state 95
    PRINT      shift, and go to state 96
    PRINTLN    shift, and go to state 97
    NEW        shift, and go to state 98
    THIS       shift, and go to state 51
    RETURN     shift, and go to state 99
    WORD       shift, and go to state 100
    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 30 (StatementList)

    Type           go to state 101
    StatementList  go to state 135
    Statement      go to state 103
    MethodCall     go to state 104
    LeftValue      go to state 105
    LeftValue2     go to state 106
    NewFunc        go to state 107
    id             go to state 26


State 93

   50 LeftValue2: LPARENTH . NewFunc RPARENTH DOT id

    NEW  shift, and go to state 98

    NewFunc  go to state 136


State 94

   33 Statement: IF . LPARENTH Exp RPARENTH Statement ELSE Statement

    LPARENTH  shift, and go to state 137


State 95

   34 Statement: WHILE . LPARENTH Exp RPARENTH Statement

    LPARENTH  shift, and go to state 138


State 96

   36 Statement: PRINT . LPARENTH Exp RPARENTH SEMICOLON

    LPARENTH  shift, and go to state 139


State 97

   35 Statement: PRINTLN . LPARENTH Exp RPARENTH SEMICOLON

    LPARENTH  shift, and go to state 140


State 98

   67 NewFunc: NEW . id LPARENTH RPARENTH

    WORD  shift, and go to state 4

    id  go to state 141


State 99

   39 Statement: RETURN . Exp SEMICOLON

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    ExpP2       go to state 59
    ExpP        go to state 60
    Exp         go to state 142


State 100

   43 LeftValue: WORD .
   83 id: WORD .

    BRACKETS  reduce using rule 83 (id)
    WORD      reduce using rule 83 (id)
    $default  reduce using rule 43 (LeftValue)


State 101

   31 Statement: Type . WORD VarDecl

    WORD  shift, and go to state 143


State 102

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList . RBRACE RBRACE

    RBRACE  shift, and go to state 144


State 103

   29 StatementList: Statement . StatementList

    LBRACE     shift, and go to state 92
    LPARENTH   shift, and go to state 93
    IF         shift, and go to state 94
    WHILE      shift, and go to state 95
    PRINT      shift, and go to state 96
    PRINTLN    shift, and go to state 97
    NEW        shift, and go to state 98
    THIS       shift, and go to state 51
    RETURN     shift, and go to state 99
    WORD       shift, and go to state 100
    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 30 (StatementList)

    Type           go to state 101
    StatementList  go to state 145
    Statement      go to state 103
    MethodCall     go to state 104
    LeftValue      go to state 105
    LeftValue2     go to state 106
    NewFunc        go to state 107
    id             go to state 26


State 104

   40 Statement: MethodCall . SEMICOLON

    SEMICOLON  shift, and go to state 146


State 105

   37 Statement: LeftValue . EQUAL Exp SEMICOLON
   41 MethodCall: LeftValue . LPARENTH ExpList RPARENTH
   42           | LeftValue . LPARENTH RPARENTH
   44 LeftValue: LeftValue . LBRACK Index
   45          | LeftValue . DOT id

    EQUAL     shift, and go to state 147
    LBRACK    shift, and go to state 73
    LPARENTH  shift, and go to state 74
    DOT       shift, and go to state 148


State 106

   38 Statement: LeftValue2 . EQUAL Exp SEMICOLON
   48 LeftValue2: LeftValue2 . LBRACK Index
   49           | LeftValue2 . DOT id

    EQUAL   shift, and go to state 149
    LBRACK  shift, and go to state 150
    DOT     shift, and go to state 151


State 107

   46 LeftValue: NewFunc . DOT id

    DOT  shift, and go to state 76


State 108

   57 ExpOp: LPARENTH Exp RPARENTH .

    $default  reduce using rule 57 (ExpOp)


State 109

   64 ExpOp: NEW Type LBRACK . IndexList

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    IndexList   go to state 152
    Index       go to state 153
    ExpOp       go to state 57
    NewFunc     go to state 58
    ExpP2       go to state 59
    ExpP        go to state 60
    Exp         go to state 113


State 110

   67 NewFunc: NEW id LPARENTH . RPARENTH

    RPARENTH  shift, and go to state 154


State 111

   47 LeftValue: THIS DOT id .

    $default  reduce using rule 47 (LeftValue)


State 112

   44 LeftValue: LeftValue LBRACK Index .

    $default  reduce using rule 44 (LeftValue)


State 113

   53 Index: Exp . RBRACK
   80 Exp: Exp . PLUS ExpP
   81    | Exp . MINUS ExpP

    PLUS    shift, and go to state 87
    MINUS   shift, and go to state 88
    RBRACK  shift, and go to state 155


State 114

   42 MethodCall: LeftValue LPARENTH RPARENTH .

    $default  reduce using rule 42 (MethodCall)


State 115

   41 MethodCall: LeftValue LPARENTH ExpList . RPARENTH
   55 ExpList: ExpList . COMMA Exp

    RPARENTH  shift, and go to state 156
    COMMA     shift, and go to state 157


State 116

   54 ExpList: Exp .
   80 Exp: Exp . PLUS ExpP
   81    | Exp . MINUS ExpP

    PLUS   shift, and go to state 87
    MINUS  shift, and go to state 88

    $default  reduce using rule 54 (ExpList)


State 117

   66 ExpOp: LeftValue DOT LENGTH .

    $default  reduce using rule 66 (ExpOp)


State 118

   45 LeftValue: LeftValue DOT id .

    $default  reduce using rule 45 (LeftValue)


State 119

   46 LeftValue: NewFunc DOT id .

    $default  reduce using rule 46 (LeftValue)


State 120

   68 ExpP2: ExpP2 AND ExpOp .

    $default  reduce using rule 68 (ExpP2)


State 121

   69 ExpP2: ExpP2 OR ExpOp .

    $default  reduce using rule 69 (ExpP2)


State 122

   70 ExpP2: ExpP2 LESS ExpOp .

    $default  reduce using rule 70 (ExpP2)


State 123

   71 ExpP2: ExpP2 GREAT ExpOp .

    $default  reduce using rule 71 (ExpP2)


State 124

   72 ExpP2: ExpP2 LESSEQ ExpOp .

    $default  reduce using rule 72 (ExpP2)


State 125

   73 ExpP2: ExpP2 GREATEQ ExpOp .

    $default  reduce using rule 73 (ExpP2)


State 126

   75 ExpP2: ExpP2 NOTEQUAL ExpOp .

    $default  reduce using rule 75 (ExpP2)


State 127

   74 ExpP2: ExpP2 EQUIVALENT ExpOp .

    $default  reduce using rule 74 (ExpP2)


State 128

   68 ExpP2: ExpP2 . AND ExpOp
   69      | ExpP2 . OR ExpOp
   70      | ExpP2 . LESS ExpOp
   71      | ExpP2 . GREAT ExpOp
   72      | ExpP2 . LESSEQ ExpOp
   73      | ExpP2 . GREATEQ ExpOp
   74      | ExpP2 . EQUIVALENT ExpOp
   75      | ExpP2 . NOTEQUAL ExpOp
   77 ExpP: ExpP STAR ExpP2 .

    AND         shift, and go to state 77
    OR          shift, and go to state 78
    LESS        shift, and go to state 79
    GREAT       shift, and go to state 80
    LESSEQ      shift, and go to state 81
    GREATEQ     shift, and go to state 82
    NOTEQUAL    shift, and go to state 83
    EQUIVALENT  shift, and go to state 84

    $default  reduce using rule 77 (ExpP)


State 129

   68 ExpP2: ExpP2 . AND ExpOp
   69      | ExpP2 . OR ExpOp
   70      | ExpP2 . LESS ExpOp
   71      | ExpP2 . GREAT ExpOp
   72      | ExpP2 . LESSEQ ExpOp
   73      | ExpP2 . GREATEQ ExpOp
   74      | ExpP2 . EQUIVALENT ExpOp
   75      | ExpP2 . NOTEQUAL ExpOp
   78 ExpP: ExpP SLASH ExpP2 .

    AND         shift, and go to state 77
    OR          shift, and go to state 78
    LESS        shift, and go to state 79
    GREAT       shift, and go to state 80
    LESSEQ      shift, and go to state 81
    GREATEQ     shift, and go to state 82
    NOTEQUAL    shift, and go to state 83
    EQUIVALENT  shift, and go to state 84

    $default  reduce using rule 78 (ExpP)


State 130

   77 ExpP: ExpP . STAR ExpP2
   78     | ExpP . SLASH ExpP2
   80 Exp: Exp PLUS ExpP .

    STAR   shift, and go to state 85
    SLASH  shift, and go to state 86

    $default  reduce using rule 80 (Exp)


State 131

   77 ExpP: ExpP . STAR ExpP2
   78     | ExpP . SLASH ExpP2
   81 Exp: Exp MINUS ExpP .

    STAR   shift, and go to state 85
    SLASH  shift, and go to state 86

    $default  reduce using rule 81 (Exp)


State 132

   20 MethodDecl: LPARENTH FormalListMaybe RPARENTH LBRACE . StatementList RBRACE

    LBRACE     shift, and go to state 92
    LPARENTH   shift, and go to state 93
    IF         shift, and go to state 94
    WHILE      shift, and go to state 95
    PRINT      shift, and go to state 96
    PRINTLN    shift, and go to state 97
    NEW        shift, and go to state 98
    THIS       shift, and go to state 51
    RETURN     shift, and go to state 99
    WORD       shift, and go to state 100
    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 30 (StatementList)

    Type           go to state 101
    StatementList  go to state 158
    Statement      go to state 103
    MethodCall     go to state 104
    LeftValue      go to state 105
    LeftValue2     go to state 106
    NewFunc        go to state 107
    id             go to state 26


State 133

   24 FormalList: Type id COMMA . FormalList

    WORD       shift, and go to state 4
    PRIMETYPE  shift, and go to state 22

    FormalList  go to state 159
    Type        go to state 64
    id          go to state 26


State 134

   17 VarInitList: VarInit COMMA WORD VarInitList .

    $default  reduce using rule 17 (VarInitList)


State 135

   32 Statement: LBRACE StatementList . RBRACE

    RBRACE  shift, and go to state 160


State 136

   50 LeftValue2: LPARENTH NewFunc . RPARENTH DOT id

    RPARENTH  shift, and go to state 161


State 137

   33 Statement: IF LPARENTH . Exp RPARENTH Statement ELSE Statement

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    ExpP2       go to state 59
    ExpP        go to state 60
    Exp         go to state 162


State 138

   34 Statement: WHILE LPARENTH . Exp RPARENTH Statement

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    ExpP2       go to state 59
    ExpP        go to state 60
    Exp         go to state 163


State 139

   36 Statement: PRINT LPARENTH . Exp RPARENTH SEMICOLON

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    ExpP2       go to state 59
    ExpP        go to state 60
    Exp         go to state 164


State 140

   35 Statement: PRINTLN LPARENTH . Exp RPARENTH SEMICOLON

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    ExpP2       go to state 59
    ExpP        go to state 60
    Exp         go to state 165


State 141

   67 NewFunc: NEW id . LPARENTH RPARENTH

    LPARENTH  shift, and go to state 110


State 142

   39 Statement: RETURN Exp . SEMICOLON
   80 Exp: Exp . PLUS ExpP
   81    | Exp . MINUS ExpP

    PLUS       shift, and go to state 87
    MINUS      shift, and go to state 88
    SEMICOLON  shift, and go to state 166


State 143

   31 Statement: Type WORD . VarDecl

    EQUAL  shift, and go to state 37

    $default  reduce using rule 19 (VarInit)

    VarDecl      go to state 167
    VarInitList  go to state 41
    VarInit      go to state 42


State 144

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE . RBRACE

    RBRACE  shift, and go to state 168


State 145

   29 StatementList: Statement StatementList .

    $default  reduce using rule 29 (StatementList)


State 146

   40 Statement: MethodCall SEMICOLON .

    $default  reduce using rule 40 (Statement)


State 147

   37 Statement: LeftValue EQUAL . Exp SEMICOLON

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    ExpP2       go to state 59
    ExpP        go to state 60
    Exp         go to state 169


State 148

   45 LeftValue: LeftValue DOT . id

    WORD  shift, and go to state 4

    id  go to state 118


State 149

   38 Statement: LeftValue2 EQUAL . Exp SEMICOLON

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    ExpP2       go to state 59
    ExpP        go to state 60
    Exp         go to state 170


State 150

   48 LeftValue2: LeftValue2 LBRACK . Index

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    Index       go to state 171
    ExpOp       go to state 57
    NewFunc     go to state 58
    ExpP2       go to state 59
    ExpP        go to state 60
    Exp         go to state 113


State 151

   49 LeftValue2: LeftValue2 DOT . id

    WORD  shift, and go to state 4

    id  go to state 172


State 152

   64 ExpOp: NEW Type LBRACK IndexList .

    $default  reduce using rule 64 (ExpOp)


State 153

   51 IndexList: Index . LBRACK IndexList
   52          | Index .

    LBRACK  shift, and go to state 173

    $default  reduce using rule 52 (IndexList)


State 154

   67 NewFunc: NEW id LPARENTH RPARENTH .

    $default  reduce using rule 67 (NewFunc)


State 155

   53 Index: Exp RBRACK .

    $default  reduce using rule 53 (Index)


State 156

   41 MethodCall: LeftValue LPARENTH ExpList RPARENTH .

    $default  reduce using rule 41 (MethodCall)


State 157

   55 ExpList: ExpList COMMA . Exp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    ExpP2       go to state 59
    ExpP        go to state 60
    Exp         go to state 174


State 158

   20 MethodDecl: LPARENTH FormalListMaybe RPARENTH LBRACE StatementList . RBRACE

    RBRACE  shift, and go to state 175


State 159

   24 FormalList: Type id COMMA FormalList .

    $default  reduce using rule 24 (FormalList)


State 160

   32 Statement: LBRACE StatementList RBRACE .

    $default  reduce using rule 32 (Statement)


State 161

   50 LeftValue2: LPARENTH NewFunc RPARENTH . DOT id

    DOT  shift, and go to state 176


State 162

   33 Statement: IF LPARENTH Exp . RPARENTH Statement ELSE Statement
   80 Exp: Exp . PLUS ExpP
   81    | Exp . MINUS ExpP

    PLUS      shift, and go to state 87
    MINUS     shift, and go to state 88
    RPARENTH  shift, and go to state 177


State 163

   34 Statement: WHILE LPARENTH Exp . RPARENTH Statement
   80 Exp: Exp . PLUS ExpP
   81    | Exp . MINUS ExpP

    PLUS      shift, and go to state 87
    MINUS     shift, and go to state 88
    RPARENTH  shift, and go to state 178


State 164

   36 Statement: PRINT LPARENTH Exp . RPARENTH SEMICOLON
   80 Exp: Exp . PLUS ExpP
   81    | Exp . MINUS ExpP

    PLUS      shift, and go to state 87
    MINUS     shift, and go to state 88
    RPARENTH  shift, and go to state 179


State 165

   35 Statement: PRINTLN LPARENTH Exp . RPARENTH SEMICOLON
   80 Exp: Exp . PLUS ExpP
   81    | Exp . MINUS ExpP

    PLUS      shift, and go to state 87
    MINUS     shift, and go to state 88
    RPARENTH  shift, and go to state 180


State 166

   39 Statement: RETURN Exp SEMICOLON .

    $default  reduce using rule 39 (Statement)


State 167

   31 Statement: Type WORD VarDecl .

    $default  reduce using rule 31 (Statement)


State 168

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE .

    $default  reduce using rule 2 (MainClass)


State 169

   37 Statement: LeftValue EQUAL Exp . SEMICOLON
   80 Exp: Exp . PLUS ExpP
   81    | Exp . MINUS ExpP

    PLUS       shift, and go to state 87
    MINUS      shift, and go to state 88
    SEMICOLON  shift, and go to state 181


State 170

   38 Statement: LeftValue2 EQUAL Exp . SEMICOLON
   80 Exp: Exp . PLUS ExpP
   81    | Exp . MINUS ExpP

    PLUS       shift, and go to state 87
    MINUS      shift, and go to state 88
    SEMICOLON  shift, and go to state 182


State 171

   48 LeftValue2: LeftValue2 LBRACK Index .

    $default  reduce using rule 48 (LeftValue2)


State 172

   49 LeftValue2: LeftValue2 DOT id .

    $default  reduce using rule 49 (LeftValue2)


State 173

   51 IndexList: Index LBRACK . IndexList

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    IndexList   go to state 183
    Index       go to state 153
    ExpOp       go to state 57
    NewFunc     go to state 58
    ExpP2       go to state 59
    ExpP        go to state 60
    Exp         go to state 113


State 174

   55 ExpList: ExpList COMMA Exp .
   80 Exp: Exp . PLUS ExpP
   81    | Exp . MINUS ExpP

    PLUS   shift, and go to state 87
    MINUS  shift, and go to state 88

    $default  reduce using rule 55 (ExpList)


State 175

   20 MethodDecl: LPARENTH FormalListMaybe RPARENTH LBRACE StatementList RBRACE .

    $default  reduce using rule 20 (MethodDecl)


State 176

   50 LeftValue2: LPARENTH NewFunc RPARENTH DOT . id

    WORD  shift, and go to state 4

    id  go to state 184


State 177

   33 Statement: IF LPARENTH Exp RPARENTH . Statement ELSE Statement

    LBRACE     shift, and go to state 92
    LPARENTH   shift, and go to state 93
    IF         shift, and go to state 94
    WHILE      shift, and go to state 95
    PRINT      shift, and go to state 96
    PRINTLN    shift, and go to state 97
    NEW        shift, and go to state 98
    THIS       shift, and go to state 51
    RETURN     shift, and go to state 99
    WORD       shift, and go to state 100
    PRIMETYPE  shift, and go to state 22

    Type        go to state 101
    Statement   go to state 185
    MethodCall  go to state 104
    LeftValue   go to state 105
    LeftValue2  go to state 106
    NewFunc     go to state 107
    id          go to state 26


State 178

   34 Statement: WHILE LPARENTH Exp RPARENTH . Statement

    LBRACE     shift, and go to state 92
    LPARENTH   shift, and go to state 93
    IF         shift, and go to state 94
    WHILE      shift, and go to state 95
    PRINT      shift, and go to state 96
    PRINTLN    shift, and go to state 97
    NEW        shift, and go to state 98
    THIS       shift, and go to state 51
    RETURN     shift, and go to state 99
    WORD       shift, and go to state 100
    PRIMETYPE  shift, and go to state 22

    Type        go to state 101
    Statement   go to state 186
    MethodCall  go to state 104
    LeftValue   go to state 105
    LeftValue2  go to state 106
    NewFunc     go to state 107
    id          go to state 26


State 179

   36 Statement: PRINT LPARENTH Exp RPARENTH . SEMICOLON

    SEMICOLON  shift, and go to state 187


State 180

   35 Statement: PRINTLN LPARENTH Exp RPARENTH . SEMICOLON

    SEMICOLON  shift, and go to state 188


State 181

   37 Statement: LeftValue EQUAL Exp SEMICOLON .

    $default  reduce using rule 37 (Statement)


State 182

   38 Statement: LeftValue2 EQUAL Exp SEMICOLON .

    $default  reduce using rule 38 (Statement)


State 183

   51 IndexList: Index LBRACK IndexList .

    $default  reduce using rule 51 (IndexList)


State 184

   50 LeftValue2: LPARENTH NewFunc RPARENTH DOT id .

    $default  reduce using rule 50 (LeftValue2)


State 185

   33 Statement: IF LPARENTH Exp RPARENTH Statement . ELSE Statement

    ELSE  shift, and go to state 189


State 186

   34 Statement: WHILE LPARENTH Exp RPARENTH Statement .

    $default  reduce using rule 34 (Statement)


State 187

   36 Statement: PRINT LPARENTH Exp RPARENTH SEMICOLON .

    $default  reduce using rule 36 (Statement)


State 188

   35 Statement: PRINTLN LPARENTH Exp RPARENTH SEMICOLON .

    $default  reduce using rule 35 (Statement)


State 189

   33 Statement: IF LPARENTH Exp RPARENTH Statement ELSE . Statement

    LBRACE     shift, and go to state 92
    LPARENTH   shift, and go to state 93
    IF         shift, and go to state 94
    WHILE      shift, and go to state 95
    PRINT      shift, and go to state 96
    PRINTLN    shift, and go to state 97
    NEW        shift, and go to state 98
    THIS       shift, and go to state 51
    RETURN     shift, and go to state 99
    WORD       shift, and go to state 100
    PRIMETYPE  shift, and go to state 22

    Type        go to state 101
    Statement   go to state 190
    MethodCall  go to state 104
    LeftValue   go to state 105
    LeftValue2  go to state 106
    NewFunc     go to state 107
    id          go to state 26


State 190

   33 Statement: IF LPARENTH Exp RPARENTH Statement ELSE Statement .

    $default  reduce using rule 33 (Statement)
