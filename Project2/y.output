Grammar

    0 $accept: Program $end

    1 Program: MainClass ClassDeclList

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    3 ClassDeclList: ClassDecl ClassDeclList
    4              | %empty

    5 ClassDecl: CLASS id ParentMaybe LBRACE VarMethodDeclList RBRACE

    6 ParentMaybe: Parent
    7            | %empty

    8 Parent: EXTENDS id

    9 VarMethodDeclList: VarOrMethod VarMethodDeclList
   10                  | %empty

   11 VarOrMethod: Type WORD VarMethodDecl
   12            | PUBLIC Type WORD MethodDecl

   13 VarMethodDecl: VarDecl
   14              | MethodDecl

   15 VarDecl: VarInitList SEMICOLON

   16 VarInitList: VarInit
   17            | VarInit COMMA WORD VarInitList

   18 VarInit: EQUAL Exp
   19        | %empty

   20 MethodDecl: LPARENTH FormalListMaybe RPARENTH LBRACE StatementList RBRACE

   21 FormalListMaybe: FormalList
   22                | %empty

   23 FormalList: Type id
   24           | Type id COMMA FormalList

   25 Type: PRIMETYPE BracketsList
   26     | id BracketsList

   27 BracketsList: BracketsList BRACKETS
   28             | %empty

   29 StatementList: Statement StatementList
   30              | %empty

   31 Statement: Type WORD VarDecl
   32          | LBRACE StatementList RBRACE
   33          | IF LPARENTH Exp RPARENTH Statement ELSE Statement
   34          | WHILE LPARENTH Exp RPARENTH Statement
   35          | PRINTLN LPARENTH Exp RPARENTH SEMICOLON
   36          | PRINTLN LPARENTH STRING_LITERAL RPARENTH SEMICOLON
   37          | PRINT LPARENTH STRING_LITERAL RPARENTH SEMICOLON
   38          | PRINT LPARENTH Exp RPARENTH SEMICOLON
   39          | LeftValue EQUAL Exp SEMICOLON
   40          | LeftValue2 EQUAL Exp SEMICOLON
   41          | RETURN Exp SEMICOLON
   42          | MethodCall SEMICOLON

   43 MethodCall: LeftValue LPARENTH ExpList RPARENTH
   44           | LeftValue LPARENTH RPARENTH

   45 LeftValue: WORD
   46          | LeftValue LBRACK Index
   47          | LeftValue DOT id
   48          | NewFunc DOT id
   49          | THIS DOT id

   50 LeftValue2: %empty
   51           | LeftValue2 LBRACK Index
   52           | LeftValue2 DOT id
   53           | LPARENTH NewFunc RPARENTH DOT id

   54 IndexList: IndexList LBRACK Index
   55          | Index

   56 Index: Exp RBRACK

   57 ExpList: Exp
   58        | ExpList COMMA Exp

   59 ExpOp: NOT ExpOp
   60      | LPARENTH Exp RPARENTH
   61      | TRUE
   62      | FALSE
   63      | INTEGER_LITERAL
   64      | MethodCall
   65      | NewFunc
   66      | NEW Type LBRACK IndexList
   67      | LeftValue
   68      | LeftValue DOT LENGTH
   69      | PLUS ExpOp
   70      | MINUS ExpOp

   71 NewFunc: NEW id LPARENTH RPARENTH

   72 Exp: Exp AND ExpOp
   73    | Exp OR ExpOp
   74    | Exp LESS ExpOp
   75    | Exp GREAT ExpOp
   76    | Exp LESSEQ ExpOp
   77    | Exp GREATEQ ExpOp
   78    | Exp EQUIVALENT ExpOp
   79    | Exp NOTEQUAL ExpOp
   80    | Exp STAR ExpOp
   81    | Exp SLASH ExpOp
   82    | Exp PLUS ExpOp
   83    | Exp MINUS ExpOp
   84    | ExpOp

   85 id: WORD


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AND <num> (258) 72
    OR <num> (259) 73
    LESS <num> (260) 74
    GREAT <num> (261) 75
    LESSEQ <num> (262) 76
    GREATEQ <num> (263) 77
    EQUAL <num> (264) 18 39 40
    NOTEQUAL <num> (265) 79
    PLUS <num> (266) 69 82
    MINUS <num> (267) 70 83
    STAR <num> (268) 80
    SLASH <num> (269) 81
    LBRACK <num> (270) 46 51 54 66
    RBRACK <num> (271) 56
    LBRACE <num> (272) 2 5 20 32
    RBRACE <num> (273) 2 5 20 32
    LPARENTH <num> (274) 2 20 33 34 35 36 37 38 43 44 53 60 71
    RPARENTH <num> (275) 2 20 33 34 35 36 37 38 43 44 53 60 71
    EXTENDS <num> (276) 8
    HEADER <num> (277) 2
    CLASS <num> (278) 2 5
    IF <num> (279) 33
    WHILE <num> (280) 34
    NOT <num> (281) 59
    TRUE <num> (282) 61
    FALSE <num> (283) 62
    PRIMETYPE <num> (284) 2 25
    PUBLIC <num> (285) 12
    COMMA <num> (286) 17 24 58
    EQUIVALENT <num> (287) 78
    SEMICOLON <num> (288) 15 35 36 37 38 39 40 41 42
    PRINT <num> (289) 37 38
    PRINTLN <num> (290) 35 36
    DOT <num> (291) 47 48 49 52 53 68
    NEW <num> (292) 66 71
    THIS <num> (293) 49
    RETURN <num> (294) 41
    LENGTH <num> (295) 68
    ELSE <num> (296) 33
    BRACKETS <num> (297) 2 27
    WORD <str> (298) 11 12 17 31 45 85
    STRING_LITERAL <str> (299) 36 37
    INTEGER_LITERAL <num> (300) 63


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    Program (47)
        on left: 1
        on right: 0
    MainClass (48)
        on left: 2
        on right: 1
    ClassDeclList (49)
        on left: 3 4
        on right: 1 3
    ClassDecl (50)
        on left: 5
        on right: 3
    ParentMaybe (51)
        on left: 6 7
        on right: 5
    Parent (52)
        on left: 8
        on right: 6
    VarMethodDeclList (53)
        on left: 9 10
        on right: 5 9
    VarOrMethod <num> (54)
        on left: 11 12
        on right: 9
    VarMethodDecl <num> (55)
        on left: 13 14
        on right: 11
    VarDecl <num> (56)
        on left: 15
        on right: 13 31
    VarInitList <num> (57)
        on left: 16 17
        on right: 15 17
    VarInit <num> (58)
        on left: 18 19
        on right: 16 17
    MethodDecl <num> (59)
        on left: 20
        on right: 12 14
    FormalListMaybe (60)
        on left: 21 22
        on right: 20
    FormalList (61)
        on left: 23 24
        on right: 21 24
    Type (62)
        on left: 25 26
        on right: 11 12 23 24 31 66
    BracketsList (63)
        on left: 27 28
        on right: 25 26 27
    StatementList (64)
        on left: 29 30
        on right: 2 20 29 32
    Statement (65)
        on left: 31 32 33 34 35 36 37 38 39 40 41 42
        on right: 29 33 34
    MethodCall <num> (66)
        on left: 43 44
        on right: 42 64
    LeftValue <str> (67)
        on left: 45 46 47 48 49
        on right: 39 43 44 46 47 67 68
    LeftValue2 (68)
        on left: 50 51 52 53
        on right: 40 51 52
    IndexList (69)
        on left: 54 55
        on right: 54 66
    Index (70)
        on left: 56
        on right: 46 51 54 55
    ExpList (71)
        on left: 57 58
        on right: 43 58
    ExpOp <num> (72)
        on left: 59 60 61 62 63 64 65 66 67 68 69 70
        on right: 59 69 70 72 73 74 75 76 77 78 79 80 81 82 83 84
    NewFunc <num> (73)
        on left: 71
        on right: 48 53 65
    Exp <num> (74)
        on left: 72 73 74 75 76 77 78 79 80 81 82 83 84
        on right: 18 33 34 35 38 39 40 41 56 57 58 60 72 73 74 75 76 77 78 79 80 81 82 83
    id <num> (75)
        on left: 85
        on right: 2 5 8 23 24 26 47 48 49 52 53 71


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program    go to state 2
    MainClass  go to state 3


State 1

    2 MainClass: CLASS . id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    WORD  shift, and go to state 4

    id  go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: MainClass . ClassDeclList

    CLASS  shift, and go to state 7

    $default  reduce using rule 4 (ClassDeclList)

    ClassDeclList  go to state 8
    ClassDecl      go to state 9


State 4

   85 id: WORD .

    $default  reduce using rule 85 (id)


State 5

    2 MainClass: CLASS id . LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    LBRACE  shift, and go to state 10


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    5 ClassDecl: CLASS . id ParentMaybe LBRACE VarMethodDeclList RBRACE

    WORD  shift, and go to state 4

    id  go to state 11


State 8

    1 Program: MainClass ClassDeclList .

    $default  reduce using rule 1 (Program)


State 9

    3 ClassDeclList: ClassDecl . ClassDeclList

    CLASS  shift, and go to state 7

    $default  reduce using rule 4 (ClassDeclList)

    ClassDeclList  go to state 12
    ClassDecl      go to state 9


State 10

    2 MainClass: CLASS id LBRACE . HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    HEADER  shift, and go to state 13


State 11

    5 ClassDecl: CLASS id . ParentMaybe LBRACE VarMethodDeclList RBRACE

    EXTENDS  shift, and go to state 14

    $default  reduce using rule 7 (ParentMaybe)

    ParentMaybe  go to state 15
    Parent       go to state 16


State 12

    3 ClassDeclList: ClassDecl ClassDeclList .

    $default  reduce using rule 3 (ClassDeclList)


State 13

    2 MainClass: CLASS id LBRACE HEADER . LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    LPARENTH  shift, and go to state 17


State 14

    8 Parent: EXTENDS . id

    WORD  shift, and go to state 4

    id  go to state 18


State 15

    5 ClassDecl: CLASS id ParentMaybe . LBRACE VarMethodDeclList RBRACE

    LBRACE  shift, and go to state 19


State 16

    6 ParentMaybe: Parent .

    $default  reduce using rule 6 (ParentMaybe)


State 17

    2 MainClass: CLASS id LBRACE HEADER LPARENTH . PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    PRIMETYPE  shift, and go to state 20


State 18

    8 Parent: EXTENDS id .

    $default  reduce using rule 8 (Parent)


State 19

    5 ClassDecl: CLASS id ParentMaybe LBRACE . VarMethodDeclList RBRACE

    PRIMETYPE  shift, and go to state 21
    PUBLIC     shift, and go to state 22
    WORD       shift, and go to state 4

    $default  reduce using rule 10 (VarMethodDeclList)

    VarMethodDeclList  go to state 23
    VarOrMethod        go to state 24
    Type               go to state 25
    id                 go to state 26


State 20

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE . BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    BRACKETS  shift, and go to state 27


State 21

   25 Type: PRIMETYPE . BracketsList

    $default  reduce using rule 28 (BracketsList)

    BracketsList  go to state 28


State 22

   12 VarOrMethod: PUBLIC . Type WORD MethodDecl

    PRIMETYPE  shift, and go to state 21
    WORD       shift, and go to state 4

    Type  go to state 29
    id    go to state 26


State 23

    5 ClassDecl: CLASS id ParentMaybe LBRACE VarMethodDeclList . RBRACE

    RBRACE  shift, and go to state 30


State 24

    9 VarMethodDeclList: VarOrMethod . VarMethodDeclList

    PRIMETYPE  shift, and go to state 21
    PUBLIC     shift, and go to state 22
    WORD       shift, and go to state 4

    $default  reduce using rule 10 (VarMethodDeclList)

    VarMethodDeclList  go to state 31
    VarOrMethod        go to state 24
    Type               go to state 25
    id                 go to state 26


State 25

   11 VarOrMethod: Type . WORD VarMethodDecl

    WORD  shift, and go to state 32


State 26

   26 Type: id . BracketsList

    $default  reduce using rule 28 (BracketsList)

    BracketsList  go to state 33


State 27

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS . id RPARENTH LBRACE StatementList RBRACE RBRACE

    WORD  shift, and go to state 4

    id  go to state 34


State 28

   25 Type: PRIMETYPE BracketsList .
   27 BracketsList: BracketsList . BRACKETS

    BRACKETS  shift, and go to state 35

    $default  reduce using rule 25 (Type)


State 29

   12 VarOrMethod: PUBLIC Type . WORD MethodDecl

    WORD  shift, and go to state 36


State 30

    5 ClassDecl: CLASS id ParentMaybe LBRACE VarMethodDeclList RBRACE .

    $default  reduce using rule 5 (ClassDecl)


State 31

    9 VarMethodDeclList: VarOrMethod VarMethodDeclList .

    $default  reduce using rule 9 (VarMethodDeclList)


State 32

   11 VarOrMethod: Type WORD . VarMethodDecl

    EQUAL     shift, and go to state 37
    LPARENTH  shift, and go to state 38

    $default  reduce using rule 19 (VarInit)

    VarMethodDecl  go to state 39
    VarDecl        go to state 40
    VarInitList    go to state 41
    VarInit        go to state 42
    MethodDecl     go to state 43


State 33

   26 Type: id BracketsList .
   27 BracketsList: BracketsList . BRACKETS

    BRACKETS  shift, and go to state 35

    $default  reduce using rule 26 (Type)


State 34

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id . RPARENTH LBRACE StatementList RBRACE RBRACE

    RPARENTH  shift, and go to state 44


State 35

   27 BracketsList: BracketsList BRACKETS .

    $default  reduce using rule 27 (BracketsList)


State 36

   12 VarOrMethod: PUBLIC Type WORD . MethodDecl

    LPARENTH  shift, and go to state 38

    MethodDecl  go to state 45


State 37

   18 VarInit: EQUAL . Exp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 58
    NewFunc     go to state 59
    Exp         go to state 60


State 38

   20 MethodDecl: LPARENTH . FormalListMaybe RPARENTH LBRACE StatementList RBRACE

    PRIMETYPE  shift, and go to state 21
    WORD       shift, and go to state 4

    $default  reduce using rule 22 (FormalListMaybe)

    FormalListMaybe  go to state 61
    FormalList       go to state 62
    Type             go to state 63
    id               go to state 26


State 39

   11 VarOrMethod: Type WORD VarMethodDecl .

    $default  reduce using rule 11 (VarOrMethod)


State 40

   13 VarMethodDecl: VarDecl .

    $default  reduce using rule 13 (VarMethodDecl)


State 41

   15 VarDecl: VarInitList . SEMICOLON

    SEMICOLON  shift, and go to state 64


State 42

   16 VarInitList: VarInit .
   17            | VarInit . COMMA WORD VarInitList

    COMMA  shift, and go to state 65

    $default  reduce using rule 16 (VarInitList)


State 43

   14 VarMethodDecl: MethodDecl .

    $default  reduce using rule 14 (VarMethodDecl)


State 44

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH . LBRACE StatementList RBRACE RBRACE

    LBRACE  shift, and go to state 66


State 45

   12 VarOrMethod: PUBLIC Type WORD MethodDecl .

    $default  reduce using rule 12 (VarOrMethod)


State 46

   69 ExpOp: PLUS . ExpOp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 67
    NewFunc     go to state 59


State 47

   70 ExpOp: MINUS . ExpOp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 68
    NewFunc     go to state 59


State 48

   60 ExpOp: LPARENTH . Exp RPARENTH

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 58
    NewFunc     go to state 59
    Exp         go to state 69


State 49

   59 ExpOp: NOT . ExpOp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 70
    NewFunc     go to state 59


State 50

   61 ExpOp: TRUE .

    $default  reduce using rule 61 (ExpOp)


State 51

   62 ExpOp: FALSE .

    $default  reduce using rule 62 (ExpOp)


State 52

   66 ExpOp: NEW . Type LBRACK IndexList
   71 NewFunc: NEW . id LPARENTH RPARENTH

    PRIMETYPE  shift, and go to state 21
    WORD       shift, and go to state 4

    Type  go to state 71
    id    go to state 72


State 53

   49 LeftValue: THIS . DOT id

    DOT  shift, and go to state 73


State 54

   45 LeftValue: WORD .

    $default  reduce using rule 45 (LeftValue)


State 55

   63 ExpOp: INTEGER_LITERAL .

    $default  reduce using rule 63 (ExpOp)


State 56

   64 ExpOp: MethodCall .

    $default  reduce using rule 64 (ExpOp)


State 57

   43 MethodCall: LeftValue . LPARENTH ExpList RPARENTH
   44           | LeftValue . LPARENTH RPARENTH
   46 LeftValue: LeftValue . LBRACK Index
   47          | LeftValue . DOT id
   67 ExpOp: LeftValue .
   68      | LeftValue . DOT LENGTH

    LBRACK    shift, and go to state 74
    LPARENTH  shift, and go to state 75
    DOT       shift, and go to state 76

    $default  reduce using rule 67 (ExpOp)


State 58

   84 Exp: ExpOp .

    $default  reduce using rule 84 (Exp)


State 59

   48 LeftValue: NewFunc . DOT id
   65 ExpOp: NewFunc .

    DOT  shift, and go to state 77

    $default  reduce using rule 65 (ExpOp)


State 60

   18 VarInit: EQUAL Exp .
   72 Exp: Exp . AND ExpOp
   73    | Exp . OR ExpOp
   74    | Exp . LESS ExpOp
   75    | Exp . GREAT ExpOp
   76    | Exp . LESSEQ ExpOp
   77    | Exp . GREATEQ ExpOp
   78    | Exp . EQUIVALENT ExpOp
   79    | Exp . NOTEQUAL ExpOp
   80    | Exp . STAR ExpOp
   81    | Exp . SLASH ExpOp
   82    | Exp . PLUS ExpOp
   83    | Exp . MINUS ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    EQUIVALENT  shift, and go to state 89

    $default  reduce using rule 18 (VarInit)


State 61

   20 MethodDecl: LPARENTH FormalListMaybe . RPARENTH LBRACE StatementList RBRACE

    RPARENTH  shift, and go to state 90


State 62

   21 FormalListMaybe: FormalList .

    $default  reduce using rule 21 (FormalListMaybe)


State 63

   23 FormalList: Type . id
   24           | Type . id COMMA FormalList

    WORD  shift, and go to state 4

    id  go to state 91


State 64

   15 VarDecl: VarInitList SEMICOLON .

    $default  reduce using rule 15 (VarDecl)


State 65

   17 VarInitList: VarInit COMMA . WORD VarInitList

    WORD  shift, and go to state 92


State 66

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE . StatementList RBRACE RBRACE

    LBRACE     shift, and go to state 93
    LPARENTH   shift, and go to state 94
    IF         shift, and go to state 95
    WHILE      shift, and go to state 96
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 97
    PRINTLN    shift, and go to state 98
    NEW        shift, and go to state 99
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 100
    WORD       shift, and go to state 101

    RBRACE    reduce using rule 30 (StatementList)
    $default  reduce using rule 50 (LeftValue2)

    Type           go to state 102
    StatementList  go to state 103
    Statement      go to state 104
    MethodCall     go to state 105
    LeftValue      go to state 106
    LeftValue2     go to state 107
    NewFunc        go to state 108
    id             go to state 26


State 67

   69 ExpOp: PLUS ExpOp .

    $default  reduce using rule 69 (ExpOp)


State 68

   70 ExpOp: MINUS ExpOp .

    $default  reduce using rule 70 (ExpOp)


State 69

   60 ExpOp: LPARENTH Exp . RPARENTH
   72 Exp: Exp . AND ExpOp
   73    | Exp . OR ExpOp
   74    | Exp . LESS ExpOp
   75    | Exp . GREAT ExpOp
   76    | Exp . LESSEQ ExpOp
   77    | Exp . GREATEQ ExpOp
   78    | Exp . EQUIVALENT ExpOp
   79    | Exp . NOTEQUAL ExpOp
   80    | Exp . STAR ExpOp
   81    | Exp . SLASH ExpOp
   82    | Exp . PLUS ExpOp
   83    | Exp . MINUS ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    RPARENTH    shift, and go to state 109
    EQUIVALENT  shift, and go to state 89


State 70

   59 ExpOp: NOT ExpOp .

    $default  reduce using rule 59 (ExpOp)


State 71

   66 ExpOp: NEW Type . LBRACK IndexList

    LBRACK  shift, and go to state 110


State 72

   26 Type: id . BracketsList
   71 NewFunc: NEW id . LPARENTH RPARENTH

    LPARENTH  shift, and go to state 111

    $default  reduce using rule 28 (BracketsList)

    BracketsList  go to state 33


State 73

   49 LeftValue: THIS DOT . id

    WORD  shift, and go to state 4

    id  go to state 112


State 74

   46 LeftValue: LeftValue LBRACK . Index

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    Index       go to state 113
    ExpOp       go to state 58
    NewFunc     go to state 59
    Exp         go to state 114


State 75

   43 MethodCall: LeftValue LPARENTH . ExpList RPARENTH
   44           | LeftValue LPARENTH . RPARENTH

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    RPARENTH         shift, and go to state 115
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpList     go to state 116
    ExpOp       go to state 58
    NewFunc     go to state 59
    Exp         go to state 117


State 76

   47 LeftValue: LeftValue DOT . id
   68 ExpOp: LeftValue DOT . LENGTH

    LENGTH  shift, and go to state 118
    WORD    shift, and go to state 4

    id  go to state 119


State 77

   48 LeftValue: NewFunc DOT . id

    WORD  shift, and go to state 4

    id  go to state 120


State 78

   72 Exp: Exp AND . ExpOp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 121
    NewFunc     go to state 59


State 79

   73 Exp: Exp OR . ExpOp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 122
    NewFunc     go to state 59


State 80

   74 Exp: Exp LESS . ExpOp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 123
    NewFunc     go to state 59


State 81

   75 Exp: Exp GREAT . ExpOp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 124
    NewFunc     go to state 59


State 82

   76 Exp: Exp LESSEQ . ExpOp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 125
    NewFunc     go to state 59


State 83

   77 Exp: Exp GREATEQ . ExpOp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 126
    NewFunc     go to state 59


State 84

   79 Exp: Exp NOTEQUAL . ExpOp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 127
    NewFunc     go to state 59


State 85

   82 Exp: Exp PLUS . ExpOp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 128
    NewFunc     go to state 59


State 86

   83 Exp: Exp MINUS . ExpOp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 129
    NewFunc     go to state 59


State 87

   80 Exp: Exp STAR . ExpOp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 130
    NewFunc     go to state 59


State 88

   81 Exp: Exp SLASH . ExpOp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 131
    NewFunc     go to state 59


State 89

   78 Exp: Exp EQUIVALENT . ExpOp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 132
    NewFunc     go to state 59


State 90

   20 MethodDecl: LPARENTH FormalListMaybe RPARENTH . LBRACE StatementList RBRACE

    LBRACE  shift, and go to state 133


State 91

   23 FormalList: Type id .
   24           | Type id . COMMA FormalList

    COMMA  shift, and go to state 134

    $default  reduce using rule 23 (FormalList)


State 92

   17 VarInitList: VarInit COMMA WORD . VarInitList

    EQUAL  shift, and go to state 37

    $default  reduce using rule 19 (VarInit)

    VarInitList  go to state 135
    VarInit      go to state 42


State 93

   32 Statement: LBRACE . StatementList RBRACE

    LBRACE     shift, and go to state 93
    LPARENTH   shift, and go to state 94
    IF         shift, and go to state 95
    WHILE      shift, and go to state 96
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 97
    PRINTLN    shift, and go to state 98
    NEW        shift, and go to state 99
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 100
    WORD       shift, and go to state 101

    RBRACE    reduce using rule 30 (StatementList)
    $default  reduce using rule 50 (LeftValue2)

    Type           go to state 102
    StatementList  go to state 136
    Statement      go to state 104
    MethodCall     go to state 105
    LeftValue      go to state 106
    LeftValue2     go to state 107
    NewFunc        go to state 108
    id             go to state 26


State 94

   53 LeftValue2: LPARENTH . NewFunc RPARENTH DOT id

    NEW  shift, and go to state 99

    NewFunc  go to state 137


State 95

   33 Statement: IF . LPARENTH Exp RPARENTH Statement ELSE Statement

    LPARENTH  shift, and go to state 138


State 96

   34 Statement: WHILE . LPARENTH Exp RPARENTH Statement

    LPARENTH  shift, and go to state 139


State 97

   37 Statement: PRINT . LPARENTH STRING_LITERAL RPARENTH SEMICOLON
   38          | PRINT . LPARENTH Exp RPARENTH SEMICOLON

    LPARENTH  shift, and go to state 140


State 98

   35 Statement: PRINTLN . LPARENTH Exp RPARENTH SEMICOLON
   36          | PRINTLN . LPARENTH STRING_LITERAL RPARENTH SEMICOLON

    LPARENTH  shift, and go to state 141


State 99

   71 NewFunc: NEW . id LPARENTH RPARENTH

    WORD  shift, and go to state 4

    id  go to state 142


State 100

   41 Statement: RETURN . Exp SEMICOLON

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 58
    NewFunc     go to state 59
    Exp         go to state 143


State 101

   45 LeftValue: WORD .
   85 id: WORD .

    BRACKETS  reduce using rule 85 (id)
    WORD      reduce using rule 85 (id)
    $default  reduce using rule 45 (LeftValue)


State 102

   31 Statement: Type . WORD VarDecl

    WORD  shift, and go to state 144


State 103

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList . RBRACE RBRACE

    RBRACE  shift, and go to state 145


State 104

   29 StatementList: Statement . StatementList

    LBRACE     shift, and go to state 93
    LPARENTH   shift, and go to state 94
    IF         shift, and go to state 95
    WHILE      shift, and go to state 96
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 97
    PRINTLN    shift, and go to state 98
    NEW        shift, and go to state 99
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 100
    WORD       shift, and go to state 101

    RBRACE    reduce using rule 30 (StatementList)
    $default  reduce using rule 50 (LeftValue2)

    Type           go to state 102
    StatementList  go to state 146
    Statement      go to state 104
    MethodCall     go to state 105
    LeftValue      go to state 106
    LeftValue2     go to state 107
    NewFunc        go to state 108
    id             go to state 26


State 105

   42 Statement: MethodCall . SEMICOLON

    SEMICOLON  shift, and go to state 147


State 106

   39 Statement: LeftValue . EQUAL Exp SEMICOLON
   43 MethodCall: LeftValue . LPARENTH ExpList RPARENTH
   44           | LeftValue . LPARENTH RPARENTH
   46 LeftValue: LeftValue . LBRACK Index
   47          | LeftValue . DOT id

    EQUAL     shift, and go to state 148
    LBRACK    shift, and go to state 74
    LPARENTH  shift, and go to state 75
    DOT       shift, and go to state 149


State 107

   40 Statement: LeftValue2 . EQUAL Exp SEMICOLON
   51 LeftValue2: LeftValue2 . LBRACK Index
   52           | LeftValue2 . DOT id

    EQUAL   shift, and go to state 150
    LBRACK  shift, and go to state 151
    DOT     shift, and go to state 152


State 108

   48 LeftValue: NewFunc . DOT id

    DOT  shift, and go to state 77


State 109

   60 ExpOp: LPARENTH Exp RPARENTH .

    $default  reduce using rule 60 (ExpOp)


State 110

   66 ExpOp: NEW Type LBRACK . IndexList

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    IndexList   go to state 153
    Index       go to state 154
    ExpOp       go to state 58
    NewFunc     go to state 59
    Exp         go to state 114


State 111

   71 NewFunc: NEW id LPARENTH . RPARENTH

    RPARENTH  shift, and go to state 155


State 112

   49 LeftValue: THIS DOT id .

    $default  reduce using rule 49 (LeftValue)


State 113

   46 LeftValue: LeftValue LBRACK Index .

    $default  reduce using rule 46 (LeftValue)


State 114

   56 Index: Exp . RBRACK
   72 Exp: Exp . AND ExpOp
   73    | Exp . OR ExpOp
   74    | Exp . LESS ExpOp
   75    | Exp . GREAT ExpOp
   76    | Exp . LESSEQ ExpOp
   77    | Exp . GREATEQ ExpOp
   78    | Exp . EQUIVALENT ExpOp
   79    | Exp . NOTEQUAL ExpOp
   80    | Exp . STAR ExpOp
   81    | Exp . SLASH ExpOp
   82    | Exp . PLUS ExpOp
   83    | Exp . MINUS ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    RBRACK      shift, and go to state 156
    EQUIVALENT  shift, and go to state 89


State 115

   44 MethodCall: LeftValue LPARENTH RPARENTH .

    $default  reduce using rule 44 (MethodCall)


State 116

   43 MethodCall: LeftValue LPARENTH ExpList . RPARENTH
   58 ExpList: ExpList . COMMA Exp

    RPARENTH  shift, and go to state 157
    COMMA     shift, and go to state 158


State 117

   57 ExpList: Exp .
   72 Exp: Exp . AND ExpOp
   73    | Exp . OR ExpOp
   74    | Exp . LESS ExpOp
   75    | Exp . GREAT ExpOp
   76    | Exp . LESSEQ ExpOp
   77    | Exp . GREATEQ ExpOp
   78    | Exp . EQUIVALENT ExpOp
   79    | Exp . NOTEQUAL ExpOp
   80    | Exp . STAR ExpOp
   81    | Exp . SLASH ExpOp
   82    | Exp . PLUS ExpOp
   83    | Exp . MINUS ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    EQUIVALENT  shift, and go to state 89

    $default  reduce using rule 57 (ExpList)


State 118

   68 ExpOp: LeftValue DOT LENGTH .

    $default  reduce using rule 68 (ExpOp)


State 119

   47 LeftValue: LeftValue DOT id .

    $default  reduce using rule 47 (LeftValue)


State 120

   48 LeftValue: NewFunc DOT id .

    $default  reduce using rule 48 (LeftValue)


State 121

   72 Exp: Exp AND ExpOp .

    $default  reduce using rule 72 (Exp)


State 122

   73 Exp: Exp OR ExpOp .

    $default  reduce using rule 73 (Exp)


State 123

   74 Exp: Exp LESS ExpOp .

    $default  reduce using rule 74 (Exp)


State 124

   75 Exp: Exp GREAT ExpOp .

    $default  reduce using rule 75 (Exp)


State 125

   76 Exp: Exp LESSEQ ExpOp .

    $default  reduce using rule 76 (Exp)


State 126

   77 Exp: Exp GREATEQ ExpOp .

    $default  reduce using rule 77 (Exp)


State 127

   79 Exp: Exp NOTEQUAL ExpOp .

    $default  reduce using rule 79 (Exp)


State 128

   82 Exp: Exp PLUS ExpOp .

    $default  reduce using rule 82 (Exp)


State 129

   83 Exp: Exp MINUS ExpOp .

    $default  reduce using rule 83 (Exp)


State 130

   80 Exp: Exp STAR ExpOp .

    $default  reduce using rule 80 (Exp)


State 131

   81 Exp: Exp SLASH ExpOp .

    $default  reduce using rule 81 (Exp)


State 132

   78 Exp: Exp EQUIVALENT ExpOp .

    $default  reduce using rule 78 (Exp)


State 133

   20 MethodDecl: LPARENTH FormalListMaybe RPARENTH LBRACE . StatementList RBRACE

    LBRACE     shift, and go to state 93
    LPARENTH   shift, and go to state 94
    IF         shift, and go to state 95
    WHILE      shift, and go to state 96
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 97
    PRINTLN    shift, and go to state 98
    NEW        shift, and go to state 99
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 100
    WORD       shift, and go to state 101

    RBRACE    reduce using rule 30 (StatementList)
    $default  reduce using rule 50 (LeftValue2)

    Type           go to state 102
    StatementList  go to state 159
    Statement      go to state 104
    MethodCall     go to state 105
    LeftValue      go to state 106
    LeftValue2     go to state 107
    NewFunc        go to state 108
    id             go to state 26


State 134

   24 FormalList: Type id COMMA . FormalList

    PRIMETYPE  shift, and go to state 21
    WORD       shift, and go to state 4

    FormalList  go to state 160
    Type        go to state 63
    id          go to state 26


State 135

   17 VarInitList: VarInit COMMA WORD VarInitList .

    $default  reduce using rule 17 (VarInitList)


State 136

   32 Statement: LBRACE StatementList . RBRACE

    RBRACE  shift, and go to state 161


State 137

   53 LeftValue2: LPARENTH NewFunc . RPARENTH DOT id

    RPARENTH  shift, and go to state 162


State 138

   33 Statement: IF LPARENTH . Exp RPARENTH Statement ELSE Statement

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 58
    NewFunc     go to state 59
    Exp         go to state 163


State 139

   34 Statement: WHILE LPARENTH . Exp RPARENTH Statement

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 58
    NewFunc     go to state 59
    Exp         go to state 164


State 140

   37 Statement: PRINT LPARENTH . STRING_LITERAL RPARENTH SEMICOLON
   38          | PRINT LPARENTH . Exp RPARENTH SEMICOLON

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 165
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 58
    NewFunc     go to state 59
    Exp         go to state 166


State 141

   35 Statement: PRINTLN LPARENTH . Exp RPARENTH SEMICOLON
   36          | PRINTLN LPARENTH . STRING_LITERAL RPARENTH SEMICOLON

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    STRING_LITERAL   shift, and go to state 167
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 58
    NewFunc     go to state 59
    Exp         go to state 168


State 142

   71 NewFunc: NEW id . LPARENTH RPARENTH

    LPARENTH  shift, and go to state 111


State 143

   41 Statement: RETURN Exp . SEMICOLON
   72 Exp: Exp . AND ExpOp
   73    | Exp . OR ExpOp
   74    | Exp . LESS ExpOp
   75    | Exp . GREAT ExpOp
   76    | Exp . LESSEQ ExpOp
   77    | Exp . GREATEQ ExpOp
   78    | Exp . EQUIVALENT ExpOp
   79    | Exp . NOTEQUAL ExpOp
   80    | Exp . STAR ExpOp
   81    | Exp . SLASH ExpOp
   82    | Exp . PLUS ExpOp
   83    | Exp . MINUS ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    EQUIVALENT  shift, and go to state 89
    SEMICOLON   shift, and go to state 169


State 144

   31 Statement: Type WORD . VarDecl

    EQUAL  shift, and go to state 37

    $default  reduce using rule 19 (VarInit)

    VarDecl      go to state 170
    VarInitList  go to state 41
    VarInit      go to state 42


State 145

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE . RBRACE

    RBRACE  shift, and go to state 171


State 146

   29 StatementList: Statement StatementList .

    $default  reduce using rule 29 (StatementList)


State 147

   42 Statement: MethodCall SEMICOLON .

    $default  reduce using rule 42 (Statement)


State 148

   39 Statement: LeftValue EQUAL . Exp SEMICOLON

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 58
    NewFunc     go to state 59
    Exp         go to state 172


State 149

   47 LeftValue: LeftValue DOT . id

    WORD  shift, and go to state 4

    id  go to state 119


State 150

   40 Statement: LeftValue2 EQUAL . Exp SEMICOLON

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 58
    NewFunc     go to state 59
    Exp         go to state 173


State 151

   51 LeftValue2: LeftValue2 LBRACK . Index

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    Index       go to state 174
    ExpOp       go to state 58
    NewFunc     go to state 59
    Exp         go to state 114


State 152

   52 LeftValue2: LeftValue2 DOT . id

    WORD  shift, and go to state 4

    id  go to state 175


State 153

   54 IndexList: IndexList . LBRACK Index
   66 ExpOp: NEW Type LBRACK IndexList .

    LBRACK  shift, and go to state 176

    $default  reduce using rule 66 (ExpOp)


State 154

   55 IndexList: Index .

    $default  reduce using rule 55 (IndexList)


State 155

   71 NewFunc: NEW id LPARENTH RPARENTH .

    $default  reduce using rule 71 (NewFunc)


State 156

   56 Index: Exp RBRACK .

    $default  reduce using rule 56 (Index)


State 157

   43 MethodCall: LeftValue LPARENTH ExpList RPARENTH .

    $default  reduce using rule 43 (MethodCall)


State 158

   58 ExpList: ExpList COMMA . Exp

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    ExpOp       go to state 58
    NewFunc     go to state 59
    Exp         go to state 177


State 159

   20 MethodDecl: LPARENTH FormalListMaybe RPARENTH LBRACE StatementList . RBRACE

    RBRACE  shift, and go to state 178


State 160

   24 FormalList: Type id COMMA FormalList .

    $default  reduce using rule 24 (FormalList)


State 161

   32 Statement: LBRACE StatementList RBRACE .

    $default  reduce using rule 32 (Statement)


State 162

   53 LeftValue2: LPARENTH NewFunc RPARENTH . DOT id

    DOT  shift, and go to state 179


State 163

   33 Statement: IF LPARENTH Exp . RPARENTH Statement ELSE Statement
   72 Exp: Exp . AND ExpOp
   73    | Exp . OR ExpOp
   74    | Exp . LESS ExpOp
   75    | Exp . GREAT ExpOp
   76    | Exp . LESSEQ ExpOp
   77    | Exp . GREATEQ ExpOp
   78    | Exp . EQUIVALENT ExpOp
   79    | Exp . NOTEQUAL ExpOp
   80    | Exp . STAR ExpOp
   81    | Exp . SLASH ExpOp
   82    | Exp . PLUS ExpOp
   83    | Exp . MINUS ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    RPARENTH    shift, and go to state 180
    EQUIVALENT  shift, and go to state 89


State 164

   34 Statement: WHILE LPARENTH Exp . RPARENTH Statement
   72 Exp: Exp . AND ExpOp
   73    | Exp . OR ExpOp
   74    | Exp . LESS ExpOp
   75    | Exp . GREAT ExpOp
   76    | Exp . LESSEQ ExpOp
   77    | Exp . GREATEQ ExpOp
   78    | Exp . EQUIVALENT ExpOp
   79    | Exp . NOTEQUAL ExpOp
   80    | Exp . STAR ExpOp
   81    | Exp . SLASH ExpOp
   82    | Exp . PLUS ExpOp
   83    | Exp . MINUS ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    RPARENTH    shift, and go to state 181
    EQUIVALENT  shift, and go to state 89


State 165

   37 Statement: PRINT LPARENTH STRING_LITERAL . RPARENTH SEMICOLON

    RPARENTH  shift, and go to state 182


State 166

   38 Statement: PRINT LPARENTH Exp . RPARENTH SEMICOLON
   72 Exp: Exp . AND ExpOp
   73    | Exp . OR ExpOp
   74    | Exp . LESS ExpOp
   75    | Exp . GREAT ExpOp
   76    | Exp . LESSEQ ExpOp
   77    | Exp . GREATEQ ExpOp
   78    | Exp . EQUIVALENT ExpOp
   79    | Exp . NOTEQUAL ExpOp
   80    | Exp . STAR ExpOp
   81    | Exp . SLASH ExpOp
   82    | Exp . PLUS ExpOp
   83    | Exp . MINUS ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    RPARENTH    shift, and go to state 183
    EQUIVALENT  shift, and go to state 89


State 167

   36 Statement: PRINTLN LPARENTH STRING_LITERAL . RPARENTH SEMICOLON

    RPARENTH  shift, and go to state 184


State 168

   35 Statement: PRINTLN LPARENTH Exp . RPARENTH SEMICOLON
   72 Exp: Exp . AND ExpOp
   73    | Exp . OR ExpOp
   74    | Exp . LESS ExpOp
   75    | Exp . GREAT ExpOp
   76    | Exp . LESSEQ ExpOp
   77    | Exp . GREATEQ ExpOp
   78    | Exp . EQUIVALENT ExpOp
   79    | Exp . NOTEQUAL ExpOp
   80    | Exp . STAR ExpOp
   81    | Exp . SLASH ExpOp
   82    | Exp . PLUS ExpOp
   83    | Exp . MINUS ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    RPARENTH    shift, and go to state 185
    EQUIVALENT  shift, and go to state 89


State 169

   41 Statement: RETURN Exp SEMICOLON .

    $default  reduce using rule 41 (Statement)


State 170

   31 Statement: Type WORD VarDecl .

    $default  reduce using rule 31 (Statement)


State 171

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE .

    $default  reduce using rule 2 (MainClass)


State 172

   39 Statement: LeftValue EQUAL Exp . SEMICOLON
   72 Exp: Exp . AND ExpOp
   73    | Exp . OR ExpOp
   74    | Exp . LESS ExpOp
   75    | Exp . GREAT ExpOp
   76    | Exp . LESSEQ ExpOp
   77    | Exp . GREATEQ ExpOp
   78    | Exp . EQUIVALENT ExpOp
   79    | Exp . NOTEQUAL ExpOp
   80    | Exp . STAR ExpOp
   81    | Exp . SLASH ExpOp
   82    | Exp . PLUS ExpOp
   83    | Exp . MINUS ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    EQUIVALENT  shift, and go to state 89
    SEMICOLON   shift, and go to state 186


State 173

   40 Statement: LeftValue2 EQUAL Exp . SEMICOLON
   72 Exp: Exp . AND ExpOp
   73    | Exp . OR ExpOp
   74    | Exp . LESS ExpOp
   75    | Exp . GREAT ExpOp
   76    | Exp . LESSEQ ExpOp
   77    | Exp . GREATEQ ExpOp
   78    | Exp . EQUIVALENT ExpOp
   79    | Exp . NOTEQUAL ExpOp
   80    | Exp . STAR ExpOp
   81    | Exp . SLASH ExpOp
   82    | Exp . PLUS ExpOp
   83    | Exp . MINUS ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    EQUIVALENT  shift, and go to state 89
    SEMICOLON   shift, and go to state 187


State 174

   51 LeftValue2: LeftValue2 LBRACK Index .

    $default  reduce using rule 51 (LeftValue2)


State 175

   52 LeftValue2: LeftValue2 DOT id .

    $default  reduce using rule 52 (LeftValue2)


State 176

   54 IndexList: IndexList LBRACK . Index

    PLUS             shift, and go to state 46
    MINUS            shift, and go to state 47
    LPARENTH         shift, and go to state 48
    NOT              shift, and go to state 49
    TRUE             shift, and go to state 50
    FALSE            shift, and go to state 51
    NEW              shift, and go to state 52
    THIS             shift, and go to state 53
    WORD             shift, and go to state 54
    INTEGER_LITERAL  shift, and go to state 55

    MethodCall  go to state 56
    LeftValue   go to state 57
    Index       go to state 188
    ExpOp       go to state 58
    NewFunc     go to state 59
    Exp         go to state 114


State 177

   58 ExpList: ExpList COMMA Exp .
   72 Exp: Exp . AND ExpOp
   73    | Exp . OR ExpOp
   74    | Exp . LESS ExpOp
   75    | Exp . GREAT ExpOp
   76    | Exp . LESSEQ ExpOp
   77    | Exp . GREATEQ ExpOp
   78    | Exp . EQUIVALENT ExpOp
   79    | Exp . NOTEQUAL ExpOp
   80    | Exp . STAR ExpOp
   81    | Exp . SLASH ExpOp
   82    | Exp . PLUS ExpOp
   83    | Exp . MINUS ExpOp

    AND         shift, and go to state 78
    OR          shift, and go to state 79
    LESS        shift, and go to state 80
    GREAT       shift, and go to state 81
    LESSEQ      shift, and go to state 82
    GREATEQ     shift, and go to state 83
    NOTEQUAL    shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    STAR        shift, and go to state 87
    SLASH       shift, and go to state 88
    EQUIVALENT  shift, and go to state 89

    $default  reduce using rule 58 (ExpList)


State 178

   20 MethodDecl: LPARENTH FormalListMaybe RPARENTH LBRACE StatementList RBRACE .

    $default  reduce using rule 20 (MethodDecl)


State 179

   53 LeftValue2: LPARENTH NewFunc RPARENTH DOT . id

    WORD  shift, and go to state 4

    id  go to state 189


State 180

   33 Statement: IF LPARENTH Exp RPARENTH . Statement ELSE Statement

    LBRACE     shift, and go to state 93
    LPARENTH   shift, and go to state 94
    IF         shift, and go to state 95
    WHILE      shift, and go to state 96
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 97
    PRINTLN    shift, and go to state 98
    NEW        shift, and go to state 99
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 100
    WORD       shift, and go to state 101

    $default  reduce using rule 50 (LeftValue2)

    Type        go to state 102
    Statement   go to state 190
    MethodCall  go to state 105
    LeftValue   go to state 106
    LeftValue2  go to state 107
    NewFunc     go to state 108
    id          go to state 26


State 181

   34 Statement: WHILE LPARENTH Exp RPARENTH . Statement

    LBRACE     shift, and go to state 93
    LPARENTH   shift, and go to state 94
    IF         shift, and go to state 95
    WHILE      shift, and go to state 96
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 97
    PRINTLN    shift, and go to state 98
    NEW        shift, and go to state 99
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 100
    WORD       shift, and go to state 101

    $default  reduce using rule 50 (LeftValue2)

    Type        go to state 102
    Statement   go to state 191
    MethodCall  go to state 105
    LeftValue   go to state 106
    LeftValue2  go to state 107
    NewFunc     go to state 108
    id          go to state 26


State 182

   37 Statement: PRINT LPARENTH STRING_LITERAL RPARENTH . SEMICOLON

    SEMICOLON  shift, and go to state 192


State 183

   38 Statement: PRINT LPARENTH Exp RPARENTH . SEMICOLON

    SEMICOLON  shift, and go to state 193


State 184

   36 Statement: PRINTLN LPARENTH STRING_LITERAL RPARENTH . SEMICOLON

    SEMICOLON  shift, and go to state 194


State 185

   35 Statement: PRINTLN LPARENTH Exp RPARENTH . SEMICOLON

    SEMICOLON  shift, and go to state 195


State 186

   39 Statement: LeftValue EQUAL Exp SEMICOLON .

    $default  reduce using rule 39 (Statement)


State 187

   40 Statement: LeftValue2 EQUAL Exp SEMICOLON .

    $default  reduce using rule 40 (Statement)


State 188

   54 IndexList: IndexList LBRACK Index .

    $default  reduce using rule 54 (IndexList)


State 189

   53 LeftValue2: LPARENTH NewFunc RPARENTH DOT id .

    $default  reduce using rule 53 (LeftValue2)


State 190

   33 Statement: IF LPARENTH Exp RPARENTH Statement . ELSE Statement

    ELSE  shift, and go to state 196


State 191

   34 Statement: WHILE LPARENTH Exp RPARENTH Statement .

    $default  reduce using rule 34 (Statement)


State 192

   37 Statement: PRINT LPARENTH STRING_LITERAL RPARENTH SEMICOLON .

    $default  reduce using rule 37 (Statement)


State 193

   38 Statement: PRINT LPARENTH Exp RPARENTH SEMICOLON .

    $default  reduce using rule 38 (Statement)


State 194

   36 Statement: PRINTLN LPARENTH STRING_LITERAL RPARENTH SEMICOLON .

    $default  reduce using rule 36 (Statement)


State 195

   35 Statement: PRINTLN LPARENTH Exp RPARENTH SEMICOLON .

    $default  reduce using rule 35 (Statement)


State 196

   33 Statement: IF LPARENTH Exp RPARENTH Statement ELSE . Statement

    LBRACE     shift, and go to state 93
    LPARENTH   shift, and go to state 94
    IF         shift, and go to state 95
    WHILE      shift, and go to state 96
    PRIMETYPE  shift, and go to state 21
    PRINT      shift, and go to state 97
    PRINTLN    shift, and go to state 98
    NEW        shift, and go to state 99
    THIS       shift, and go to state 53
    RETURN     shift, and go to state 100
    WORD       shift, and go to state 101

    $default  reduce using rule 50 (LeftValue2)

    Type        go to state 102
    Statement   go to state 197
    MethodCall  go to state 105
    LeftValue   go to state 106
    LeftValue2  go to state 107
    NewFunc     go to state 108
    id          go to state 26


State 197

   33 Statement: IF LPARENTH Exp RPARENTH Statement ELSE Statement .

    $default  reduce using rule 33 (Statement)
