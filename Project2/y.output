Terminals unused in grammar

    MINUS
    SLASH


Grammar

    0 $accept: Program $end

    1 Program: MainClass ClassDeclList

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    3 ClassDeclList: ClassDecl ClassDeclList
    4              | %empty

    5 ClassDecl: CLASS id ParentMaybe LBRACE VarMethodDeclList RBRACE

    6 ParentMaybe: Parent
    7            | %empty

    8 Parent: EXTENDS id

    9 VarMethodDeclList: VarOrMethod VarMethodDeclList
   10                  | %empty

   11 VarOrMethod: Type WORD VarMethodDecl
   12            | PUBLIC Type WORD MethodDecl

   13 VarMethodDecl: VarDecl
   14              | MethodDecl

   15 VarDecl: VarInitList SEMICOLON

   16 VarInitList: VarInit
   17            | VarInit COMMA WORD VarInitList

   18 VarInit: EQUAL Exp

   19 MethodDecl: LPARENTH FormalListMaybe RPARENTH LBRACE StatementList RBRACE

   20 FormalListMaybe: FormalList
   21                | %empty

   22 FormalList: Type id
   23           | Type id COMMA FormalList

   24 Type: PRIMETYPE BracketsList
   25     | id BracketsList

   26 BracketsList: BracketsList BRACKETS
   27             | %empty

   28 StatementList: Statement StatementList
   29              | %empty

   30 Statement: Type WORD VarDecl
   31          | LBRACE StatementList RBRACE
   32          | IF LPARENTH Exp RPARENTH Statement ELSE Statement
   33          | WHILE LPARENTH Exp RPARENTH Statement
   34          | PRINTLN LPARENTH Exp RPARENTH SEMICOLON
   35          | PRINT LPARENTH Exp RPARENTH SEMICOLON
   36          | LeftValue EQUAL Exp SEMICOLON
   37          | LeftValue2 EQUAL Exp SEMICOLON
   38          | RETURN Exp SEMICOLON
   39          | MethodCall SEMICOLON

   40 MethodCall: LeftValue LPARENTH ExpList RPARENTH
   41           | LeftValue LPARENTH RPARENTH

   42 LeftValue: WORD
   43          | LeftValue LBRACK Index
   44          | LeftValue DOT id
   45          | NewFunc DOT id
   46          | THIS DOT id

   47 LeftValue2: %empty
   48           | LeftValue2 LBRACK Index
   49           | LeftValue2 DOT id
   50           | LPARENTH NewFunc RPARENTH DOT id

   51 IndexList: IndexList LBRACK Index
   52          | Index

   53 Index: Exp RBRACK

   54 ExpList: Exp
   55        | ExpList COMMA Exp

   56 ExpOp: NOT ExpOp
   57      | LPARENTH Exp RPARENTH
   58      | STRING_LITERAL
   59      | TRUE
   60      | FALSE
   61      | INTEGER_LITERAL
   62      | MethodCall
   63      | NewFunc
   64      | NEW Type LBRACK IndexList
   65      | LeftValue
   66      | LeftValue DOT LENGTH

   67 NewFunc: NEW id LPARENTH RPARENTH

   68 Exp: Exp AND ExpOp
   69    | Exp OR ExpOp
   70    | Exp LESS ExpOp
   71    | Exp GREAT ExpOp
   72    | Exp LESSEQ ExpOp
   73    | Exp GREATEQ ExpOp
   74    | Exp EQUIVALENT ExpOp
   75    | Exp NOTEQUAL ExpOp
   76    | Exp STAR ExpOp
   77    | Exp PLUS ExpOp
   78    | ExpOp

   79 id: WORD


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AND <num> (258) 68
    OR <num> (259) 69
    LESS <num> (260) 70
    GREAT <num> (261) 71
    LESSEQ <num> (262) 72
    GREATEQ <num> (263) 73
    EQUAL <num> (264) 18 36 37
    NOTEQUAL <num> (265) 75
    PLUS <num> (266) 77
    MINUS <num> (267)
    STAR <num> (268) 76
    SLASH <num> (269)
    LBRACK <num> (270) 43 48 51 64
    RBRACK <num> (271) 53
    LBRACE <num> (272) 2 5 19 31
    RBRACE <num> (273) 2 5 19 31
    LPARENTH <num> (274) 2 19 32 33 34 35 40 41 50 57 67
    RPARENTH <num> (275) 2 19 32 33 34 35 40 41 50 57 67
    EXTENDS <num> (276) 8
    HEADER <num> (277) 2
    CLASS <num> (278) 2 5
    IF <num> (279) 32
    WHILE <num> (280) 33
    NOT <num> (281) 56
    TRUE <num> (282) 59
    FALSE <num> (283) 60
    PUBLIC <num> (284) 12
    COMMA <num> (285) 17 23 55
    EQUIVALENT <num> (286) 74
    SEMICOLON <num> (287) 15 34 35 36 37 38 39
    PRINT <num> (288) 35
    PRINTLN <num> (289) 34
    DOT <num> (290) 44 45 46 49 50 66
    NEW <num> (291) 64 67
    THIS <num> (292) 46
    RETURN <num> (293) 38
    LENGTH <num> (294) 66
    ELSE <num> (295) 32
    BRACKETS <num> (296) 2 26
    WORD <str> (297) 11 12 17 30 42 79
    STRING_LITERAL <str> (298) 58
    PRIMETYPE <str> (299) 2 24
    INTEGER_LITERAL <num> (300) 61


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    Program (47)
        on left: 1
        on right: 0
    MainClass (48)
        on left: 2
        on right: 1
    ClassDeclList (49)
        on left: 3 4
        on right: 1 3
    ClassDecl (50)
        on left: 5
        on right: 3
    ParentMaybe (51)
        on left: 6 7
        on right: 5
    Parent (52)
        on left: 8
        on right: 6
    VarMethodDeclList (53)
        on left: 9 10
        on right: 5 9
    VarOrMethod <term> (54)
        on left: 11 12
        on right: 9
    VarMethodDecl <term> (55)
        on left: 13 14
        on right: 11
    VarDecl <term> (56)
        on left: 15
        on right: 13 30
    VarInitList <term> (57)
        on left: 16 17
        on right: 15 17
    VarInit <term> (58)
        on left: 18
        on right: 16 17
    MethodDecl <term> (59)
        on left: 19
        on right: 12 14
    FormalListMaybe (60)
        on left: 20 21
        on right: 19
    FormalList (61)
        on left: 22 23
        on right: 20 23
    Type <type> (62)
        on left: 24 25
        on right: 11 12 22 23 30 64
    BracketsList (63)
        on left: 26 27
        on right: 24 25 26
    StatementList (64)
        on left: 28 29
        on right: 2 19 28 31
    Statement (65)
        on left: 30 31 32 33 34 35 36 37 38 39
        on right: 28 32 33
    MethodCall <term> (66)
        on left: 40 41
        on right: 39 62
    LeftValue <str> (67)
        on left: 42 43 44 45 46
        on right: 36 40 41 43 44 65 66
    LeftValue2 (68)
        on left: 47 48 49 50
        on right: 37 48 49
    IndexList (69)
        on left: 51 52
        on right: 51 64
    Index (70)
        on left: 53
        on right: 43 48 51 52
    ExpList (71)
        on left: 54 55
        on right: 40 55
    ExpOp <tree> (72)
        on left: 56 57 58 59 60 61 62 63 64 65 66
        on right: 56 68 69 70 71 72 73 74 75 76 77 78
    NewFunc <term> (73)
        on left: 67
        on right: 45 50 63
    Exp <tree> (74)
        on left: 68 69 70 71 72 73 74 75 76 77 78
        on right: 18 32 33 34 35 36 37 38 53 54 55 57 68 69 70 71 72 73 74 75 76 77
    id <term> (75)
        on left: 79
        on right: 2 5 8 22 23 25 44 45 46 49 50 67


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program    go to state 2
    MainClass  go to state 3


State 1

    2 MainClass: CLASS . id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    WORD  shift, and go to state 4

    id  go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: MainClass . ClassDeclList

    CLASS  shift, and go to state 7

    $default  reduce using rule 4 (ClassDeclList)

    ClassDeclList  go to state 8
    ClassDecl      go to state 9


State 4

   79 id: WORD .

    $default  reduce using rule 79 (id)


State 5

    2 MainClass: CLASS id . LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    LBRACE  shift, and go to state 10


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    5 ClassDecl: CLASS . id ParentMaybe LBRACE VarMethodDeclList RBRACE

    WORD  shift, and go to state 4

    id  go to state 11


State 8

    1 Program: MainClass ClassDeclList .

    $default  reduce using rule 1 (Program)


State 9

    3 ClassDeclList: ClassDecl . ClassDeclList

    CLASS  shift, and go to state 7

    $default  reduce using rule 4 (ClassDeclList)

    ClassDeclList  go to state 12
    ClassDecl      go to state 9


State 10

    2 MainClass: CLASS id LBRACE . HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    HEADER  shift, and go to state 13


State 11

    5 ClassDecl: CLASS id . ParentMaybe LBRACE VarMethodDeclList RBRACE

    EXTENDS  shift, and go to state 14

    $default  reduce using rule 7 (ParentMaybe)

    ParentMaybe  go to state 15
    Parent       go to state 16


State 12

    3 ClassDeclList: ClassDecl ClassDeclList .

    $default  reduce using rule 3 (ClassDeclList)


State 13

    2 MainClass: CLASS id LBRACE HEADER . LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    LPARENTH  shift, and go to state 17


State 14

    8 Parent: EXTENDS . id

    WORD  shift, and go to state 4

    id  go to state 18


State 15

    5 ClassDecl: CLASS id ParentMaybe . LBRACE VarMethodDeclList RBRACE

    LBRACE  shift, and go to state 19


State 16

    6 ParentMaybe: Parent .

    $default  reduce using rule 6 (ParentMaybe)


State 17

    2 MainClass: CLASS id LBRACE HEADER LPARENTH . PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    PRIMETYPE  shift, and go to state 20


State 18

    8 Parent: EXTENDS id .

    $default  reduce using rule 8 (Parent)


State 19

    5 ClassDecl: CLASS id ParentMaybe LBRACE . VarMethodDeclList RBRACE

    PUBLIC     shift, and go to state 21
    WORD       shift, and go to state 4
    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 10 (VarMethodDeclList)

    VarMethodDeclList  go to state 23
    VarOrMethod        go to state 24
    Type               go to state 25
    id                 go to state 26


State 20

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE . BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE

    BRACKETS  shift, and go to state 27


State 21

   12 VarOrMethod: PUBLIC . Type WORD MethodDecl

    WORD       shift, and go to state 4
    PRIMETYPE  shift, and go to state 22

    Type  go to state 28
    id    go to state 26


State 22

   24 Type: PRIMETYPE . BracketsList

    $default  reduce using rule 27 (BracketsList)

    BracketsList  go to state 29


State 23

    5 ClassDecl: CLASS id ParentMaybe LBRACE VarMethodDeclList . RBRACE

    RBRACE  shift, and go to state 30


State 24

    9 VarMethodDeclList: VarOrMethod . VarMethodDeclList

    PUBLIC     shift, and go to state 21
    WORD       shift, and go to state 4
    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 10 (VarMethodDeclList)

    VarMethodDeclList  go to state 31
    VarOrMethod        go to state 24
    Type               go to state 25
    id                 go to state 26


State 25

   11 VarOrMethod: Type . WORD VarMethodDecl

    WORD  shift, and go to state 32


State 26

   25 Type: id . BracketsList

    $default  reduce using rule 27 (BracketsList)

    BracketsList  go to state 33


State 27

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS . id RPARENTH LBRACE StatementList RBRACE RBRACE

    WORD  shift, and go to state 4

    id  go to state 34


State 28

   12 VarOrMethod: PUBLIC Type . WORD MethodDecl

    WORD  shift, and go to state 35


State 29

   24 Type: PRIMETYPE BracketsList .
   26 BracketsList: BracketsList . BRACKETS

    BRACKETS  shift, and go to state 36

    $default  reduce using rule 24 (Type)


State 30

    5 ClassDecl: CLASS id ParentMaybe LBRACE VarMethodDeclList RBRACE .

    $default  reduce using rule 5 (ClassDecl)


State 31

    9 VarMethodDeclList: VarOrMethod VarMethodDeclList .

    $default  reduce using rule 9 (VarMethodDeclList)


State 32

   11 VarOrMethod: Type WORD . VarMethodDecl

    EQUAL     shift, and go to state 37
    LPARENTH  shift, and go to state 38

    VarMethodDecl  go to state 39
    VarDecl        go to state 40
    VarInitList    go to state 41
    VarInit        go to state 42
    MethodDecl     go to state 43


State 33

   25 Type: id BracketsList .
   26 BracketsList: BracketsList . BRACKETS

    BRACKETS  shift, and go to state 36

    $default  reduce using rule 25 (Type)


State 34

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id . RPARENTH LBRACE StatementList RBRACE RBRACE

    RPARENTH  shift, and go to state 44


State 35

   12 VarOrMethod: PUBLIC Type WORD . MethodDecl

    LPARENTH  shift, and go to state 38

    MethodDecl  go to state 45


State 36

   26 BracketsList: BracketsList BRACKETS .

    $default  reduce using rule 26 (BracketsList)


State 37

   18 VarInit: EQUAL . Exp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 59


State 38

   19 MethodDecl: LPARENTH . FormalListMaybe RPARENTH LBRACE StatementList RBRACE

    WORD       shift, and go to state 4
    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 21 (FormalListMaybe)

    FormalListMaybe  go to state 60
    FormalList       go to state 61
    Type             go to state 62
    id               go to state 26


State 39

   11 VarOrMethod: Type WORD VarMethodDecl .

    $default  reduce using rule 11 (VarOrMethod)


State 40

   13 VarMethodDecl: VarDecl .

    $default  reduce using rule 13 (VarMethodDecl)


State 41

   15 VarDecl: VarInitList . SEMICOLON

    SEMICOLON  shift, and go to state 63


State 42

   16 VarInitList: VarInit .
   17            | VarInit . COMMA WORD VarInitList

    COMMA  shift, and go to state 64

    $default  reduce using rule 16 (VarInitList)


State 43

   14 VarMethodDecl: MethodDecl .

    $default  reduce using rule 14 (VarMethodDecl)


State 44

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH . LBRACE StatementList RBRACE RBRACE

    LBRACE  shift, and go to state 65


State 45

   12 VarOrMethod: PUBLIC Type WORD MethodDecl .

    $default  reduce using rule 12 (VarOrMethod)


State 46

   57 ExpOp: LPARENTH . Exp RPARENTH

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 66


State 47

   56 ExpOp: NOT . ExpOp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 67
    NewFunc     go to state 58


State 48

   59 ExpOp: TRUE .

    $default  reduce using rule 59 (ExpOp)


State 49

   60 ExpOp: FALSE .

    $default  reduce using rule 60 (ExpOp)


State 50

   64 ExpOp: NEW . Type LBRACK IndexList
   67 NewFunc: NEW . id LPARENTH RPARENTH

    WORD       shift, and go to state 4
    PRIMETYPE  shift, and go to state 22

    Type  go to state 68
    id    go to state 69


State 51

   46 LeftValue: THIS . DOT id

    DOT  shift, and go to state 70


State 52

   42 LeftValue: WORD .

    $default  reduce using rule 42 (LeftValue)


State 53

   58 ExpOp: STRING_LITERAL .

    $default  reduce using rule 58 (ExpOp)


State 54

   61 ExpOp: INTEGER_LITERAL .

    $default  reduce using rule 61 (ExpOp)


State 55

   62 ExpOp: MethodCall .

    $default  reduce using rule 62 (ExpOp)


State 56

   40 MethodCall: LeftValue . LPARENTH ExpList RPARENTH
   41           | LeftValue . LPARENTH RPARENTH
   43 LeftValue: LeftValue . LBRACK Index
   44          | LeftValue . DOT id
   65 ExpOp: LeftValue .
   66      | LeftValue . DOT LENGTH

    LBRACK    shift, and go to state 71
    LPARENTH  shift, and go to state 72
    DOT       shift, and go to state 73

    $default  reduce using rule 65 (ExpOp)


State 57

   78 Exp: ExpOp .

    $default  reduce using rule 78 (Exp)


State 58

   45 LeftValue: NewFunc . DOT id
   63 ExpOp: NewFunc .

    DOT  shift, and go to state 74

    $default  reduce using rule 63 (ExpOp)


State 59

   18 VarInit: EQUAL Exp .
   68 Exp: Exp . AND ExpOp
   69    | Exp . OR ExpOp
   70    | Exp . LESS ExpOp
   71    | Exp . GREAT ExpOp
   72    | Exp . LESSEQ ExpOp
   73    | Exp . GREATEQ ExpOp
   74    | Exp . EQUIVALENT ExpOp
   75    | Exp . NOTEQUAL ExpOp
   76    | Exp . STAR ExpOp
   77    | Exp . PLUS ExpOp

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    LESS        shift, and go to state 77
    GREAT       shift, and go to state 78
    LESSEQ      shift, and go to state 79
    GREATEQ     shift, and go to state 80
    NOTEQUAL    shift, and go to state 81
    PLUS        shift, and go to state 82
    STAR        shift, and go to state 83
    EQUIVALENT  shift, and go to state 84

    $default  reduce using rule 18 (VarInit)


State 60

   19 MethodDecl: LPARENTH FormalListMaybe . RPARENTH LBRACE StatementList RBRACE

    RPARENTH  shift, and go to state 85


State 61

   20 FormalListMaybe: FormalList .

    $default  reduce using rule 20 (FormalListMaybe)


State 62

   22 FormalList: Type . id
   23           | Type . id COMMA FormalList

    WORD  shift, and go to state 4

    id  go to state 86


State 63

   15 VarDecl: VarInitList SEMICOLON .

    $default  reduce using rule 15 (VarDecl)


State 64

   17 VarInitList: VarInit COMMA . WORD VarInitList

    WORD  shift, and go to state 87


State 65

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE . StatementList RBRACE RBRACE

    LBRACE     shift, and go to state 88
    LPARENTH   shift, and go to state 89
    IF         shift, and go to state 90
    WHILE      shift, and go to state 91
    PRINT      shift, and go to state 92
    PRINTLN    shift, and go to state 93
    NEW        shift, and go to state 94
    THIS       shift, and go to state 51
    RETURN     shift, and go to state 95
    WORD       shift, and go to state 96
    PRIMETYPE  shift, and go to state 22

    RBRACE    reduce using rule 29 (StatementList)
    $default  reduce using rule 47 (LeftValue2)

    Type           go to state 97
    StatementList  go to state 98
    Statement      go to state 99
    MethodCall     go to state 100
    LeftValue      go to state 101
    LeftValue2     go to state 102
    NewFunc        go to state 103
    id             go to state 26


State 66

   57 ExpOp: LPARENTH Exp . RPARENTH
   68 Exp: Exp . AND ExpOp
   69    | Exp . OR ExpOp
   70    | Exp . LESS ExpOp
   71    | Exp . GREAT ExpOp
   72    | Exp . LESSEQ ExpOp
   73    | Exp . GREATEQ ExpOp
   74    | Exp . EQUIVALENT ExpOp
   75    | Exp . NOTEQUAL ExpOp
   76    | Exp . STAR ExpOp
   77    | Exp . PLUS ExpOp

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    LESS        shift, and go to state 77
    GREAT       shift, and go to state 78
    LESSEQ      shift, and go to state 79
    GREATEQ     shift, and go to state 80
    NOTEQUAL    shift, and go to state 81
    PLUS        shift, and go to state 82
    STAR        shift, and go to state 83
    RPARENTH    shift, and go to state 104
    EQUIVALENT  shift, and go to state 84


State 67

   56 ExpOp: NOT ExpOp .

    $default  reduce using rule 56 (ExpOp)


State 68

   64 ExpOp: NEW Type . LBRACK IndexList

    LBRACK  shift, and go to state 105


State 69

   25 Type: id . BracketsList
   67 NewFunc: NEW id . LPARENTH RPARENTH

    LPARENTH  shift, and go to state 106

    $default  reduce using rule 27 (BracketsList)

    BracketsList  go to state 33


State 70

   46 LeftValue: THIS DOT . id

    WORD  shift, and go to state 4

    id  go to state 107


State 71

   43 LeftValue: LeftValue LBRACK . Index

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    Index       go to state 108
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 109


State 72

   40 MethodCall: LeftValue LPARENTH . ExpList RPARENTH
   41           | LeftValue LPARENTH . RPARENTH

    LPARENTH         shift, and go to state 46
    RPARENTH         shift, and go to state 110
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpList     go to state 111
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 112


State 73

   44 LeftValue: LeftValue DOT . id
   66 ExpOp: LeftValue DOT . LENGTH

    LENGTH  shift, and go to state 113
    WORD    shift, and go to state 4

    id  go to state 114


State 74

   45 LeftValue: NewFunc DOT . id

    WORD  shift, and go to state 4

    id  go to state 115


State 75

   68 Exp: Exp AND . ExpOp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 116
    NewFunc     go to state 58


State 76

   69 Exp: Exp OR . ExpOp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 117
    NewFunc     go to state 58


State 77

   70 Exp: Exp LESS . ExpOp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 118
    NewFunc     go to state 58


State 78

   71 Exp: Exp GREAT . ExpOp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 119
    NewFunc     go to state 58


State 79

   72 Exp: Exp LESSEQ . ExpOp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 120
    NewFunc     go to state 58


State 80

   73 Exp: Exp GREATEQ . ExpOp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 121
    NewFunc     go to state 58


State 81

   75 Exp: Exp NOTEQUAL . ExpOp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 122
    NewFunc     go to state 58


State 82

   77 Exp: Exp PLUS . ExpOp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 123
    NewFunc     go to state 58


State 83

   76 Exp: Exp STAR . ExpOp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 124
    NewFunc     go to state 58


State 84

   74 Exp: Exp EQUIVALENT . ExpOp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 125
    NewFunc     go to state 58


State 85

   19 MethodDecl: LPARENTH FormalListMaybe RPARENTH . LBRACE StatementList RBRACE

    LBRACE  shift, and go to state 126


State 86

   22 FormalList: Type id .
   23           | Type id . COMMA FormalList

    COMMA  shift, and go to state 127

    $default  reduce using rule 22 (FormalList)


State 87

   17 VarInitList: VarInit COMMA WORD . VarInitList

    EQUAL  shift, and go to state 37

    VarInitList  go to state 128
    VarInit      go to state 42


State 88

   31 Statement: LBRACE . StatementList RBRACE

    LBRACE     shift, and go to state 88
    LPARENTH   shift, and go to state 89
    IF         shift, and go to state 90
    WHILE      shift, and go to state 91
    PRINT      shift, and go to state 92
    PRINTLN    shift, and go to state 93
    NEW        shift, and go to state 94
    THIS       shift, and go to state 51
    RETURN     shift, and go to state 95
    WORD       shift, and go to state 96
    PRIMETYPE  shift, and go to state 22

    RBRACE    reduce using rule 29 (StatementList)
    $default  reduce using rule 47 (LeftValue2)

    Type           go to state 97
    StatementList  go to state 129
    Statement      go to state 99
    MethodCall     go to state 100
    LeftValue      go to state 101
    LeftValue2     go to state 102
    NewFunc        go to state 103
    id             go to state 26


State 89

   50 LeftValue2: LPARENTH . NewFunc RPARENTH DOT id

    NEW  shift, and go to state 94

    NewFunc  go to state 130


State 90

   32 Statement: IF . LPARENTH Exp RPARENTH Statement ELSE Statement

    LPARENTH  shift, and go to state 131


State 91

   33 Statement: WHILE . LPARENTH Exp RPARENTH Statement

    LPARENTH  shift, and go to state 132


State 92

   35 Statement: PRINT . LPARENTH Exp RPARENTH SEMICOLON

    LPARENTH  shift, and go to state 133


State 93

   34 Statement: PRINTLN . LPARENTH Exp RPARENTH SEMICOLON

    LPARENTH  shift, and go to state 134


State 94

   67 NewFunc: NEW . id LPARENTH RPARENTH

    WORD  shift, and go to state 4

    id  go to state 135


State 95

   38 Statement: RETURN . Exp SEMICOLON

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 136


State 96

   42 LeftValue: WORD .
   79 id: WORD .

    BRACKETS  reduce using rule 79 (id)
    WORD      reduce using rule 79 (id)
    $default  reduce using rule 42 (LeftValue)


State 97

   30 Statement: Type . WORD VarDecl

    WORD  shift, and go to state 137


State 98

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList . RBRACE RBRACE

    RBRACE  shift, and go to state 138


State 99

   28 StatementList: Statement . StatementList

    LBRACE     shift, and go to state 88
    LPARENTH   shift, and go to state 89
    IF         shift, and go to state 90
    WHILE      shift, and go to state 91
    PRINT      shift, and go to state 92
    PRINTLN    shift, and go to state 93
    NEW        shift, and go to state 94
    THIS       shift, and go to state 51
    RETURN     shift, and go to state 95
    WORD       shift, and go to state 96
    PRIMETYPE  shift, and go to state 22

    RBRACE    reduce using rule 29 (StatementList)
    $default  reduce using rule 47 (LeftValue2)

    Type           go to state 97
    StatementList  go to state 139
    Statement      go to state 99
    MethodCall     go to state 100
    LeftValue      go to state 101
    LeftValue2     go to state 102
    NewFunc        go to state 103
    id             go to state 26


State 100

   39 Statement: MethodCall . SEMICOLON

    SEMICOLON  shift, and go to state 140


State 101

   36 Statement: LeftValue . EQUAL Exp SEMICOLON
   40 MethodCall: LeftValue . LPARENTH ExpList RPARENTH
   41           | LeftValue . LPARENTH RPARENTH
   43 LeftValue: LeftValue . LBRACK Index
   44          | LeftValue . DOT id

    EQUAL     shift, and go to state 141
    LBRACK    shift, and go to state 71
    LPARENTH  shift, and go to state 72
    DOT       shift, and go to state 142


State 102

   37 Statement: LeftValue2 . EQUAL Exp SEMICOLON
   48 LeftValue2: LeftValue2 . LBRACK Index
   49           | LeftValue2 . DOT id

    EQUAL   shift, and go to state 143
    LBRACK  shift, and go to state 144
    DOT     shift, and go to state 145


State 103

   45 LeftValue: NewFunc . DOT id

    DOT  shift, and go to state 74


State 104

   57 ExpOp: LPARENTH Exp RPARENTH .

    $default  reduce using rule 57 (ExpOp)


State 105

   64 ExpOp: NEW Type LBRACK . IndexList

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    IndexList   go to state 146
    Index       go to state 147
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 109


State 106

   67 NewFunc: NEW id LPARENTH . RPARENTH

    RPARENTH  shift, and go to state 148


State 107

   46 LeftValue: THIS DOT id .

    $default  reduce using rule 46 (LeftValue)


State 108

   43 LeftValue: LeftValue LBRACK Index .

    $default  reduce using rule 43 (LeftValue)


State 109

   53 Index: Exp . RBRACK
   68 Exp: Exp . AND ExpOp
   69    | Exp . OR ExpOp
   70    | Exp . LESS ExpOp
   71    | Exp . GREAT ExpOp
   72    | Exp . LESSEQ ExpOp
   73    | Exp . GREATEQ ExpOp
   74    | Exp . EQUIVALENT ExpOp
   75    | Exp . NOTEQUAL ExpOp
   76    | Exp . STAR ExpOp
   77    | Exp . PLUS ExpOp

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    LESS        shift, and go to state 77
    GREAT       shift, and go to state 78
    LESSEQ      shift, and go to state 79
    GREATEQ     shift, and go to state 80
    NOTEQUAL    shift, and go to state 81
    PLUS        shift, and go to state 82
    STAR        shift, and go to state 83
    RBRACK      shift, and go to state 149
    EQUIVALENT  shift, and go to state 84


State 110

   41 MethodCall: LeftValue LPARENTH RPARENTH .

    $default  reduce using rule 41 (MethodCall)


State 111

   40 MethodCall: LeftValue LPARENTH ExpList . RPARENTH
   55 ExpList: ExpList . COMMA Exp

    RPARENTH  shift, and go to state 150
    COMMA     shift, and go to state 151


State 112

   54 ExpList: Exp .
   68 Exp: Exp . AND ExpOp
   69    | Exp . OR ExpOp
   70    | Exp . LESS ExpOp
   71    | Exp . GREAT ExpOp
   72    | Exp . LESSEQ ExpOp
   73    | Exp . GREATEQ ExpOp
   74    | Exp . EQUIVALENT ExpOp
   75    | Exp . NOTEQUAL ExpOp
   76    | Exp . STAR ExpOp
   77    | Exp . PLUS ExpOp

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    LESS        shift, and go to state 77
    GREAT       shift, and go to state 78
    LESSEQ      shift, and go to state 79
    GREATEQ     shift, and go to state 80
    NOTEQUAL    shift, and go to state 81
    PLUS        shift, and go to state 82
    STAR        shift, and go to state 83
    EQUIVALENT  shift, and go to state 84

    $default  reduce using rule 54 (ExpList)


State 113

   66 ExpOp: LeftValue DOT LENGTH .

    $default  reduce using rule 66 (ExpOp)


State 114

   44 LeftValue: LeftValue DOT id .

    $default  reduce using rule 44 (LeftValue)


State 115

   45 LeftValue: NewFunc DOT id .

    $default  reduce using rule 45 (LeftValue)


State 116

   68 Exp: Exp AND ExpOp .

    $default  reduce using rule 68 (Exp)


State 117

   69 Exp: Exp OR ExpOp .

    $default  reduce using rule 69 (Exp)


State 118

   70 Exp: Exp LESS ExpOp .

    $default  reduce using rule 70 (Exp)


State 119

   71 Exp: Exp GREAT ExpOp .

    $default  reduce using rule 71 (Exp)


State 120

   72 Exp: Exp LESSEQ ExpOp .

    $default  reduce using rule 72 (Exp)


State 121

   73 Exp: Exp GREATEQ ExpOp .

    $default  reduce using rule 73 (Exp)


State 122

   75 Exp: Exp NOTEQUAL ExpOp .

    $default  reduce using rule 75 (Exp)


State 123

   77 Exp: Exp PLUS ExpOp .

    $default  reduce using rule 77 (Exp)


State 124

   76 Exp: Exp STAR ExpOp .

    $default  reduce using rule 76 (Exp)


State 125

   74 Exp: Exp EQUIVALENT ExpOp .

    $default  reduce using rule 74 (Exp)


State 126

   19 MethodDecl: LPARENTH FormalListMaybe RPARENTH LBRACE . StatementList RBRACE

    LBRACE     shift, and go to state 88
    LPARENTH   shift, and go to state 89
    IF         shift, and go to state 90
    WHILE      shift, and go to state 91
    PRINT      shift, and go to state 92
    PRINTLN    shift, and go to state 93
    NEW        shift, and go to state 94
    THIS       shift, and go to state 51
    RETURN     shift, and go to state 95
    WORD       shift, and go to state 96
    PRIMETYPE  shift, and go to state 22

    RBRACE    reduce using rule 29 (StatementList)
    $default  reduce using rule 47 (LeftValue2)

    Type           go to state 97
    StatementList  go to state 152
    Statement      go to state 99
    MethodCall     go to state 100
    LeftValue      go to state 101
    LeftValue2     go to state 102
    NewFunc        go to state 103
    id             go to state 26


State 127

   23 FormalList: Type id COMMA . FormalList

    WORD       shift, and go to state 4
    PRIMETYPE  shift, and go to state 22

    FormalList  go to state 153
    Type        go to state 62
    id          go to state 26


State 128

   17 VarInitList: VarInit COMMA WORD VarInitList .

    $default  reduce using rule 17 (VarInitList)


State 129

   31 Statement: LBRACE StatementList . RBRACE

    RBRACE  shift, and go to state 154


State 130

   50 LeftValue2: LPARENTH NewFunc . RPARENTH DOT id

    RPARENTH  shift, and go to state 155


State 131

   32 Statement: IF LPARENTH . Exp RPARENTH Statement ELSE Statement

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 156


State 132

   33 Statement: WHILE LPARENTH . Exp RPARENTH Statement

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 157


State 133

   35 Statement: PRINT LPARENTH . Exp RPARENTH SEMICOLON

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 158


State 134

   34 Statement: PRINTLN LPARENTH . Exp RPARENTH SEMICOLON

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 159


State 135

   67 NewFunc: NEW id . LPARENTH RPARENTH

    LPARENTH  shift, and go to state 106


State 136

   38 Statement: RETURN Exp . SEMICOLON
   68 Exp: Exp . AND ExpOp
   69    | Exp . OR ExpOp
   70    | Exp . LESS ExpOp
   71    | Exp . GREAT ExpOp
   72    | Exp . LESSEQ ExpOp
   73    | Exp . GREATEQ ExpOp
   74    | Exp . EQUIVALENT ExpOp
   75    | Exp . NOTEQUAL ExpOp
   76    | Exp . STAR ExpOp
   77    | Exp . PLUS ExpOp

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    LESS        shift, and go to state 77
    GREAT       shift, and go to state 78
    LESSEQ      shift, and go to state 79
    GREATEQ     shift, and go to state 80
    NOTEQUAL    shift, and go to state 81
    PLUS        shift, and go to state 82
    STAR        shift, and go to state 83
    EQUIVALENT  shift, and go to state 84
    SEMICOLON   shift, and go to state 160


State 137

   30 Statement: Type WORD . VarDecl

    EQUAL  shift, and go to state 37

    VarDecl      go to state 161
    VarInitList  go to state 41
    VarInit      go to state 42


State 138

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE . RBRACE

    RBRACE  shift, and go to state 162


State 139

   28 StatementList: Statement StatementList .

    $default  reduce using rule 28 (StatementList)


State 140

   39 Statement: MethodCall SEMICOLON .

    $default  reduce using rule 39 (Statement)


State 141

   36 Statement: LeftValue EQUAL . Exp SEMICOLON

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 163


State 142

   44 LeftValue: LeftValue DOT . id

    WORD  shift, and go to state 4

    id  go to state 114


State 143

   37 Statement: LeftValue2 EQUAL . Exp SEMICOLON

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 164


State 144

   48 LeftValue2: LeftValue2 LBRACK . Index

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    Index       go to state 165
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 109


State 145

   49 LeftValue2: LeftValue2 DOT . id

    WORD  shift, and go to state 4

    id  go to state 166


State 146

   51 IndexList: IndexList . LBRACK Index
   64 ExpOp: NEW Type LBRACK IndexList .

    LBRACK  shift, and go to state 167

    $default  reduce using rule 64 (ExpOp)


State 147

   52 IndexList: Index .

    $default  reduce using rule 52 (IndexList)


State 148

   67 NewFunc: NEW id LPARENTH RPARENTH .

    $default  reduce using rule 67 (NewFunc)


State 149

   53 Index: Exp RBRACK .

    $default  reduce using rule 53 (Index)


State 150

   40 MethodCall: LeftValue LPARENTH ExpList RPARENTH .

    $default  reduce using rule 40 (MethodCall)


State 151

   55 ExpList: ExpList COMMA . Exp

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 168


State 152

   19 MethodDecl: LPARENTH FormalListMaybe RPARENTH LBRACE StatementList . RBRACE

    RBRACE  shift, and go to state 169


State 153

   23 FormalList: Type id COMMA FormalList .

    $default  reduce using rule 23 (FormalList)


State 154

   31 Statement: LBRACE StatementList RBRACE .

    $default  reduce using rule 31 (Statement)


State 155

   50 LeftValue2: LPARENTH NewFunc RPARENTH . DOT id

    DOT  shift, and go to state 170


State 156

   32 Statement: IF LPARENTH Exp . RPARENTH Statement ELSE Statement
   68 Exp: Exp . AND ExpOp
   69    | Exp . OR ExpOp
   70    | Exp . LESS ExpOp
   71    | Exp . GREAT ExpOp
   72    | Exp . LESSEQ ExpOp
   73    | Exp . GREATEQ ExpOp
   74    | Exp . EQUIVALENT ExpOp
   75    | Exp . NOTEQUAL ExpOp
   76    | Exp . STAR ExpOp
   77    | Exp . PLUS ExpOp

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    LESS        shift, and go to state 77
    GREAT       shift, and go to state 78
    LESSEQ      shift, and go to state 79
    GREATEQ     shift, and go to state 80
    NOTEQUAL    shift, and go to state 81
    PLUS        shift, and go to state 82
    STAR        shift, and go to state 83
    RPARENTH    shift, and go to state 171
    EQUIVALENT  shift, and go to state 84


State 157

   33 Statement: WHILE LPARENTH Exp . RPARENTH Statement
   68 Exp: Exp . AND ExpOp
   69    | Exp . OR ExpOp
   70    | Exp . LESS ExpOp
   71    | Exp . GREAT ExpOp
   72    | Exp . LESSEQ ExpOp
   73    | Exp . GREATEQ ExpOp
   74    | Exp . EQUIVALENT ExpOp
   75    | Exp . NOTEQUAL ExpOp
   76    | Exp . STAR ExpOp
   77    | Exp . PLUS ExpOp

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    LESS        shift, and go to state 77
    GREAT       shift, and go to state 78
    LESSEQ      shift, and go to state 79
    GREATEQ     shift, and go to state 80
    NOTEQUAL    shift, and go to state 81
    PLUS        shift, and go to state 82
    STAR        shift, and go to state 83
    RPARENTH    shift, and go to state 172
    EQUIVALENT  shift, and go to state 84


State 158

   35 Statement: PRINT LPARENTH Exp . RPARENTH SEMICOLON
   68 Exp: Exp . AND ExpOp
   69    | Exp . OR ExpOp
   70    | Exp . LESS ExpOp
   71    | Exp . GREAT ExpOp
   72    | Exp . LESSEQ ExpOp
   73    | Exp . GREATEQ ExpOp
   74    | Exp . EQUIVALENT ExpOp
   75    | Exp . NOTEQUAL ExpOp
   76    | Exp . STAR ExpOp
   77    | Exp . PLUS ExpOp

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    LESS        shift, and go to state 77
    GREAT       shift, and go to state 78
    LESSEQ      shift, and go to state 79
    GREATEQ     shift, and go to state 80
    NOTEQUAL    shift, and go to state 81
    PLUS        shift, and go to state 82
    STAR        shift, and go to state 83
    RPARENTH    shift, and go to state 173
    EQUIVALENT  shift, and go to state 84


State 159

   34 Statement: PRINTLN LPARENTH Exp . RPARENTH SEMICOLON
   68 Exp: Exp . AND ExpOp
   69    | Exp . OR ExpOp
   70    | Exp . LESS ExpOp
   71    | Exp . GREAT ExpOp
   72    | Exp . LESSEQ ExpOp
   73    | Exp . GREATEQ ExpOp
   74    | Exp . EQUIVALENT ExpOp
   75    | Exp . NOTEQUAL ExpOp
   76    | Exp . STAR ExpOp
   77    | Exp . PLUS ExpOp

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    LESS        shift, and go to state 77
    GREAT       shift, and go to state 78
    LESSEQ      shift, and go to state 79
    GREATEQ     shift, and go to state 80
    NOTEQUAL    shift, and go to state 81
    PLUS        shift, and go to state 82
    STAR        shift, and go to state 83
    RPARENTH    shift, and go to state 174
    EQUIVALENT  shift, and go to state 84


State 160

   38 Statement: RETURN Exp SEMICOLON .

    $default  reduce using rule 38 (Statement)


State 161

   30 Statement: Type WORD VarDecl .

    $default  reduce using rule 30 (Statement)


State 162

    2 MainClass: CLASS id LBRACE HEADER LPARENTH PRIMETYPE BRACKETS id RPARENTH LBRACE StatementList RBRACE RBRACE .

    $default  reduce using rule 2 (MainClass)


State 163

   36 Statement: LeftValue EQUAL Exp . SEMICOLON
   68 Exp: Exp . AND ExpOp
   69    | Exp . OR ExpOp
   70    | Exp . LESS ExpOp
   71    | Exp . GREAT ExpOp
   72    | Exp . LESSEQ ExpOp
   73    | Exp . GREATEQ ExpOp
   74    | Exp . EQUIVALENT ExpOp
   75    | Exp . NOTEQUAL ExpOp
   76    | Exp . STAR ExpOp
   77    | Exp . PLUS ExpOp

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    LESS        shift, and go to state 77
    GREAT       shift, and go to state 78
    LESSEQ      shift, and go to state 79
    GREATEQ     shift, and go to state 80
    NOTEQUAL    shift, and go to state 81
    PLUS        shift, and go to state 82
    STAR        shift, and go to state 83
    EQUIVALENT  shift, and go to state 84
    SEMICOLON   shift, and go to state 175


State 164

   37 Statement: LeftValue2 EQUAL Exp . SEMICOLON
   68 Exp: Exp . AND ExpOp
   69    | Exp . OR ExpOp
   70    | Exp . LESS ExpOp
   71    | Exp . GREAT ExpOp
   72    | Exp . LESSEQ ExpOp
   73    | Exp . GREATEQ ExpOp
   74    | Exp . EQUIVALENT ExpOp
   75    | Exp . NOTEQUAL ExpOp
   76    | Exp . STAR ExpOp
   77    | Exp . PLUS ExpOp

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    LESS        shift, and go to state 77
    GREAT       shift, and go to state 78
    LESSEQ      shift, and go to state 79
    GREATEQ     shift, and go to state 80
    NOTEQUAL    shift, and go to state 81
    PLUS        shift, and go to state 82
    STAR        shift, and go to state 83
    EQUIVALENT  shift, and go to state 84
    SEMICOLON   shift, and go to state 176


State 165

   48 LeftValue2: LeftValue2 LBRACK Index .

    $default  reduce using rule 48 (LeftValue2)


State 166

   49 LeftValue2: LeftValue2 DOT id .

    $default  reduce using rule 49 (LeftValue2)


State 167

   51 IndexList: IndexList LBRACK . Index

    LPARENTH         shift, and go to state 46
    NOT              shift, and go to state 47
    TRUE             shift, and go to state 48
    FALSE            shift, and go to state 49
    NEW              shift, and go to state 50
    THIS             shift, and go to state 51
    WORD             shift, and go to state 52
    STRING_LITERAL   shift, and go to state 53
    INTEGER_LITERAL  shift, and go to state 54

    MethodCall  go to state 55
    LeftValue   go to state 56
    Index       go to state 177
    ExpOp       go to state 57
    NewFunc     go to state 58
    Exp         go to state 109


State 168

   55 ExpList: ExpList COMMA Exp .
   68 Exp: Exp . AND ExpOp
   69    | Exp . OR ExpOp
   70    | Exp . LESS ExpOp
   71    | Exp . GREAT ExpOp
   72    | Exp . LESSEQ ExpOp
   73    | Exp . GREATEQ ExpOp
   74    | Exp . EQUIVALENT ExpOp
   75    | Exp . NOTEQUAL ExpOp
   76    | Exp . STAR ExpOp
   77    | Exp . PLUS ExpOp

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    LESS        shift, and go to state 77
    GREAT       shift, and go to state 78
    LESSEQ      shift, and go to state 79
    GREATEQ     shift, and go to state 80
    NOTEQUAL    shift, and go to state 81
    PLUS        shift, and go to state 82
    STAR        shift, and go to state 83
    EQUIVALENT  shift, and go to state 84

    $default  reduce using rule 55 (ExpList)


State 169

   19 MethodDecl: LPARENTH FormalListMaybe RPARENTH LBRACE StatementList RBRACE .

    $default  reduce using rule 19 (MethodDecl)


State 170

   50 LeftValue2: LPARENTH NewFunc RPARENTH DOT . id

    WORD  shift, and go to state 4

    id  go to state 178


State 171

   32 Statement: IF LPARENTH Exp RPARENTH . Statement ELSE Statement

    LBRACE     shift, and go to state 88
    LPARENTH   shift, and go to state 89
    IF         shift, and go to state 90
    WHILE      shift, and go to state 91
    PRINT      shift, and go to state 92
    PRINTLN    shift, and go to state 93
    NEW        shift, and go to state 94
    THIS       shift, and go to state 51
    RETURN     shift, and go to state 95
    WORD       shift, and go to state 96
    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 47 (LeftValue2)

    Type        go to state 97
    Statement   go to state 179
    MethodCall  go to state 100
    LeftValue   go to state 101
    LeftValue2  go to state 102
    NewFunc     go to state 103
    id          go to state 26


State 172

   33 Statement: WHILE LPARENTH Exp RPARENTH . Statement

    LBRACE     shift, and go to state 88
    LPARENTH   shift, and go to state 89
    IF         shift, and go to state 90
    WHILE      shift, and go to state 91
    PRINT      shift, and go to state 92
    PRINTLN    shift, and go to state 93
    NEW        shift, and go to state 94
    THIS       shift, and go to state 51
    RETURN     shift, and go to state 95
    WORD       shift, and go to state 96
    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 47 (LeftValue2)

    Type        go to state 97
    Statement   go to state 180
    MethodCall  go to state 100
    LeftValue   go to state 101
    LeftValue2  go to state 102
    NewFunc     go to state 103
    id          go to state 26


State 173

   35 Statement: PRINT LPARENTH Exp RPARENTH . SEMICOLON

    SEMICOLON  shift, and go to state 181


State 174

   34 Statement: PRINTLN LPARENTH Exp RPARENTH . SEMICOLON

    SEMICOLON  shift, and go to state 182


State 175

   36 Statement: LeftValue EQUAL Exp SEMICOLON .

    $default  reduce using rule 36 (Statement)


State 176

   37 Statement: LeftValue2 EQUAL Exp SEMICOLON .

    $default  reduce using rule 37 (Statement)


State 177

   51 IndexList: IndexList LBRACK Index .

    $default  reduce using rule 51 (IndexList)


State 178

   50 LeftValue2: LPARENTH NewFunc RPARENTH DOT id .

    $default  reduce using rule 50 (LeftValue2)


State 179

   32 Statement: IF LPARENTH Exp RPARENTH Statement . ELSE Statement

    ELSE  shift, and go to state 183


State 180

   33 Statement: WHILE LPARENTH Exp RPARENTH Statement .

    $default  reduce using rule 33 (Statement)


State 181

   35 Statement: PRINT LPARENTH Exp RPARENTH SEMICOLON .

    $default  reduce using rule 35 (Statement)


State 182

   34 Statement: PRINTLN LPARENTH Exp RPARENTH SEMICOLON .

    $default  reduce using rule 34 (Statement)


State 183

   32 Statement: IF LPARENTH Exp RPARENTH Statement ELSE . Statement

    LBRACE     shift, and go to state 88
    LPARENTH   shift, and go to state 89
    IF         shift, and go to state 90
    WHILE      shift, and go to state 91
    PRINT      shift, and go to state 92
    PRINTLN    shift, and go to state 93
    NEW        shift, and go to state 94
    THIS       shift, and go to state 51
    RETURN     shift, and go to state 95
    WORD       shift, and go to state 96
    PRIMETYPE  shift, and go to state 22

    $default  reduce using rule 47 (LeftValue2)

    Type        go to state 97
    Statement   go to state 184
    MethodCall  go to state 100
    LeftValue   go to state 101
    LeftValue2  go to state 102
    NewFunc     go to state 103
    id          go to state 26


State 184

   32 Statement: IF LPARENTH Exp RPARENTH Statement ELSE Statement .

    $default  reduce using rule 32 (Statement)
